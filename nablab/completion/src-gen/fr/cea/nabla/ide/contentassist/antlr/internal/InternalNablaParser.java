package fr.cea.nabla.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import kaulua.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import kaulua.contentassist.antlr.internal.DFA;
import fr.cea.nabla.services.NablaGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalNablaParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_INT", "RULE_REAL", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'\\u2205'", "'=='", "'!='", "'>='", "'<='", "'>'", "'<'", "'*'", "'/'", "'false'", "'\\u2115'", "'\\u211D'", "'\\u211D\\u00B2'", "'\\u211D\\u00B2\\u02E3\\u00B2'", "'\\u211D\\u00B3'", "'\\u211D\\u00B3\\u02E3\\u00B3'", "'\\u213E'", "'node'", "'cell'", "'face'", "'module'", "';'", "'with'", "'connectivities'", "'{'", "'}'", "'functions'", "':'", "'\\u2200'", "','", "'='", "'if'", "'('", "')'", "'else'", "'\\u2208'", "'['", "']'", "'\\u2192'", "'-'", "'!'", "'.MinValue'", "'.MaxValue'", "'^{'", "'.'", "'.*'", "'\\u25C4'", "'\\u25BA'", "'const'", "'||'", "'&&'", "'+'", "'true'"
    };
    public static final int T__50=50;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__59=59;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__55=55;
    public static final int T__12=12;
    public static final int T__56=56;
    public static final int T__13=13;
    public static final int T__57=57;
    public static final int T__14=14;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=4;
    public static final int RULE_REAL=6;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int RULE_INT=5;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int RULE_ML_COMMENT=8;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__20=20;
    public static final int T__64=64;
    public static final int T__21=21;
    public static final int RULE_STRING=7;
    public static final int RULE_SL_COMMENT=9;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int EOF=-1;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int RULE_WS=10;
    public static final int RULE_ANY_OTHER=11;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;

    // delegates
    // delegators


        public InternalNablaParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalNablaParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalNablaParser.tokenNames; }
    public String getGrammarFileName() { return "InternalNabla.g"; }


    	private NablaGrammarAccess grammarAccess;

    	public void setGrammarAccess(NablaGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		return tokenName;
    	}



    // $ANTLR start "entryRuleNablaModule"
    // InternalNabla.g:51:1: entryRuleNablaModule : ruleNablaModule EOF ;
    public final void entryRuleNablaModule() throws RecognitionException {
        try {
            // InternalNabla.g:52:1: ( ruleNablaModule EOF )
            // InternalNabla.g:53:1: ruleNablaModule EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNablaModuleRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleNablaModule();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNablaModuleRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNablaModule"


    // $ANTLR start "ruleNablaModule"
    // InternalNabla.g:60:1: ruleNablaModule : ( ( rule__NablaModule__Group__0 ) ) ;
    public final void ruleNablaModule() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:64:2: ( ( ( rule__NablaModule__Group__0 ) ) )
            // InternalNabla.g:65:2: ( ( rule__NablaModule__Group__0 ) )
            {
            // InternalNabla.g:65:2: ( ( rule__NablaModule__Group__0 ) )
            // InternalNabla.g:66:3: ( rule__NablaModule__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNablaModuleAccess().getGroup()); 
            }
            // InternalNabla.g:67:3: ( rule__NablaModule__Group__0 )
            // InternalNabla.g:67:4: rule__NablaModule__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NablaModule__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNablaModuleAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNablaModule"


    // $ANTLR start "entryRuleImport"
    // InternalNabla.g:76:1: entryRuleImport : ruleImport EOF ;
    public final void entryRuleImport() throws RecognitionException {
        try {
            // InternalNabla.g:77:1: ( ruleImport EOF )
            // InternalNabla.g:78:1: ruleImport EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleImport();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleImport"


    // $ANTLR start "ruleImport"
    // InternalNabla.g:85:1: ruleImport : ( ( rule__Import__Group__0 ) ) ;
    public final void ruleImport() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:89:2: ( ( ( rule__Import__Group__0 ) ) )
            // InternalNabla.g:90:2: ( ( rule__Import__Group__0 ) )
            {
            // InternalNabla.g:90:2: ( ( rule__Import__Group__0 ) )
            // InternalNabla.g:91:3: ( rule__Import__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportAccess().getGroup()); 
            }
            // InternalNabla.g:92:3: ( rule__Import__Group__0 )
            // InternalNabla.g:92:4: rule__Import__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Import__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleImport"


    // $ANTLR start "entryRuleDeclarationBlock"
    // InternalNabla.g:101:1: entryRuleDeclarationBlock : ruleDeclarationBlock EOF ;
    public final void entryRuleDeclarationBlock() throws RecognitionException {
        try {
            // InternalNabla.g:102:1: ( ruleDeclarationBlock EOF )
            // InternalNabla.g:103:1: ruleDeclarationBlock EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationBlockRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDeclarationBlock"


    // $ANTLR start "ruleDeclarationBlock"
    // InternalNabla.g:110:1: ruleDeclarationBlock : ( ( rule__DeclarationBlock__Alternatives ) ) ;
    public final void ruleDeclarationBlock() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:114:2: ( ( ( rule__DeclarationBlock__Alternatives ) ) )
            // InternalNabla.g:115:2: ( ( rule__DeclarationBlock__Alternatives ) )
            {
            // InternalNabla.g:115:2: ( ( rule__DeclarationBlock__Alternatives ) )
            // InternalNabla.g:116:3: ( rule__DeclarationBlock__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationBlockAccess().getAlternatives()); 
            }
            // InternalNabla.g:117:3: ( rule__DeclarationBlock__Alternatives )
            // InternalNabla.g:117:4: rule__DeclarationBlock__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__DeclarationBlock__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationBlockAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDeclarationBlock"


    // $ANTLR start "entryRuleJob"
    // InternalNabla.g:126:1: entryRuleJob : ruleJob EOF ;
    public final void entryRuleJob() throws RecognitionException {
        try {
            // InternalNabla.g:127:1: ( ruleJob EOF )
            // InternalNabla.g:128:1: ruleJob EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleJob();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJob"


    // $ANTLR start "ruleJob"
    // InternalNabla.g:135:1: ruleJob : ( ( rule__Job__Alternatives ) ) ;
    public final void ruleJob() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:139:2: ( ( ( rule__Job__Alternatives ) ) )
            // InternalNabla.g:140:2: ( ( rule__Job__Alternatives ) )
            {
            // InternalNabla.g:140:2: ( ( rule__Job__Alternatives ) )
            // InternalNabla.g:141:3: ( rule__Job__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getAlternatives()); 
            }
            // InternalNabla.g:142:3: ( rule__Job__Alternatives )
            // InternalNabla.g:142:4: rule__Job__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Job__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJob"


    // $ANTLR start "entryRuleInstruction"
    // InternalNabla.g:151:1: entryRuleInstruction : ruleInstruction EOF ;
    public final void entryRuleInstruction() throws RecognitionException {
        try {
            // InternalNabla.g:152:1: ( ruleInstruction EOF )
            // InternalNabla.g:153:1: ruleInstruction EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleInstruction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInstruction"


    // $ANTLR start "ruleInstruction"
    // InternalNabla.g:160:1: ruleInstruction : ( ( rule__Instruction__Alternatives ) ) ;
    public final void ruleInstruction() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:164:2: ( ( ( rule__Instruction__Alternatives ) ) )
            // InternalNabla.g:165:2: ( ( rule__Instruction__Alternatives ) )
            {
            // InternalNabla.g:165:2: ( ( rule__Instruction__Alternatives ) )
            // InternalNabla.g:166:3: ( rule__Instruction__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getAlternatives()); 
            }
            // InternalNabla.g:167:3: ( rule__Instruction__Alternatives )
            // InternalNabla.g:167:4: rule__Instruction__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Instruction__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInstruction"


    // $ANTLR start "entryRuleTimeIterator"
    // InternalNabla.g:176:1: entryRuleTimeIterator : ruleTimeIterator EOF ;
    public final void entryRuleTimeIterator() throws RecognitionException {
        try {
            // InternalNabla.g:177:1: ( ruleTimeIterator EOF )
            // InternalNabla.g:178:1: ruleTimeIterator EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTimeIterator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTimeIterator"


    // $ANTLR start "ruleTimeIterator"
    // InternalNabla.g:185:1: ruleTimeIterator : ( ( rule__TimeIterator__Group__0 ) ) ;
    public final void ruleTimeIterator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:189:2: ( ( ( rule__TimeIterator__Group__0 ) ) )
            // InternalNabla.g:190:2: ( ( rule__TimeIterator__Group__0 ) )
            {
            // InternalNabla.g:190:2: ( ( rule__TimeIterator__Group__0 ) )
            // InternalNabla.g:191:3: ( rule__TimeIterator__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorAccess().getGroup()); 
            }
            // InternalNabla.g:192:3: ( rule__TimeIterator__Group__0 )
            // InternalNabla.g:192:4: rule__TimeIterator__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TimeIterator__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTimeIterator"


    // $ANTLR start "entryRuleSpaceIterator"
    // InternalNabla.g:201:1: entryRuleSpaceIterator : ruleSpaceIterator EOF ;
    public final void entryRuleSpaceIterator() throws RecognitionException {
        try {
            // InternalNabla.g:202:1: ( ruleSpaceIterator EOF )
            // InternalNabla.g:203:1: ruleSpaceIterator EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSpaceIterator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSpaceIterator"


    // $ANTLR start "ruleSpaceIterator"
    // InternalNabla.g:210:1: ruleSpaceIterator : ( ( rule__SpaceIterator__Group__0 ) ) ;
    public final void ruleSpaceIterator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:214:2: ( ( ( rule__SpaceIterator__Group__0 ) ) )
            // InternalNabla.g:215:2: ( ( rule__SpaceIterator__Group__0 ) )
            {
            // InternalNabla.g:215:2: ( ( rule__SpaceIterator__Group__0 ) )
            // InternalNabla.g:216:3: ( rule__SpaceIterator__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorAccess().getGroup()); 
            }
            // InternalNabla.g:217:3: ( rule__SpaceIterator__Group__0 )
            // InternalNabla.g:217:4: rule__SpaceIterator__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SpaceIterator__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSpaceIterator"


    // $ANTLR start "entryRuleSpaceIteratorRange"
    // InternalNabla.g:226:1: entryRuleSpaceIteratorRange : ruleSpaceIteratorRange EOF ;
    public final void entryRuleSpaceIteratorRange() throws RecognitionException {
        try {
            // InternalNabla.g:227:1: ( ruleSpaceIteratorRange EOF )
            // InternalNabla.g:228:1: ruleSpaceIteratorRange EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRangeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSpaceIteratorRange();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRangeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSpaceIteratorRange"


    // $ANTLR start "ruleSpaceIteratorRange"
    // InternalNabla.g:235:1: ruleSpaceIteratorRange : ( ( rule__SpaceIteratorRange__Group__0 ) ) ;
    public final void ruleSpaceIteratorRange() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:239:2: ( ( ( rule__SpaceIteratorRange__Group__0 ) ) )
            // InternalNabla.g:240:2: ( ( rule__SpaceIteratorRange__Group__0 ) )
            {
            // InternalNabla.g:240:2: ( ( rule__SpaceIteratorRange__Group__0 ) )
            // InternalNabla.g:241:3: ( rule__SpaceIteratorRange__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRangeAccess().getGroup()); 
            }
            // InternalNabla.g:242:3: ( rule__SpaceIteratorRange__Group__0 )
            // InternalNabla.g:242:4: rule__SpaceIteratorRange__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRange__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRangeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSpaceIteratorRange"


    // $ANTLR start "entryRuleSpaceIteratorRef"
    // InternalNabla.g:251:1: entryRuleSpaceIteratorRef : ruleSpaceIteratorRef EOF ;
    public final void entryRuleSpaceIteratorRef() throws RecognitionException {
        try {
            // InternalNabla.g:252:1: ( ruleSpaceIteratorRef EOF )
            // InternalNabla.g:253:1: ruleSpaceIteratorRef EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRefRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSpaceIteratorRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRefRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSpaceIteratorRef"


    // $ANTLR start "ruleSpaceIteratorRef"
    // InternalNabla.g:260:1: ruleSpaceIteratorRef : ( ( rule__SpaceIteratorRef__Alternatives ) ) ;
    public final void ruleSpaceIteratorRef() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:264:2: ( ( ( rule__SpaceIteratorRef__Alternatives ) ) )
            // InternalNabla.g:265:2: ( ( rule__SpaceIteratorRef__Alternatives ) )
            {
            // InternalNabla.g:265:2: ( ( rule__SpaceIteratorRef__Alternatives ) )
            // InternalNabla.g:266:3: ( rule__SpaceIteratorRef__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRefAccess().getAlternatives()); 
            }
            // InternalNabla.g:267:3: ( rule__SpaceIteratorRef__Alternatives )
            // InternalNabla.g:267:4: rule__SpaceIteratorRef__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRef__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRefAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSpaceIteratorRef"


    // $ANTLR start "entryRuleScalarVarDefinition"
    // InternalNabla.g:276:1: entryRuleScalarVarDefinition : ruleScalarVarDefinition EOF ;
    public final void entryRuleScalarVarDefinition() throws RecognitionException {
        try {
            // InternalNabla.g:277:1: ( ruleScalarVarDefinition EOF )
            // InternalNabla.g:278:1: ruleScalarVarDefinition EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleScalarVarDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarDefinitionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleScalarVarDefinition"


    // $ANTLR start "ruleScalarVarDefinition"
    // InternalNabla.g:285:1: ruleScalarVarDefinition : ( ( rule__ScalarVarDefinition__Group__0 ) ) ;
    public final void ruleScalarVarDefinition() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:289:2: ( ( ( rule__ScalarVarDefinition__Group__0 ) ) )
            // InternalNabla.g:290:2: ( ( rule__ScalarVarDefinition__Group__0 ) )
            {
            // InternalNabla.g:290:2: ( ( rule__ScalarVarDefinition__Group__0 ) )
            // InternalNabla.g:291:3: ( rule__ScalarVarDefinition__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarDefinitionAccess().getGroup()); 
            }
            // InternalNabla.g:292:3: ( rule__ScalarVarDefinition__Group__0 )
            // InternalNabla.g:292:4: rule__ScalarVarDefinition__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ScalarVarDefinition__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarDefinitionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleScalarVarDefinition"


    // $ANTLR start "entryRuleVarGroupDeclaration"
    // InternalNabla.g:301:1: entryRuleVarGroupDeclaration : ruleVarGroupDeclaration EOF ;
    public final void entryRuleVarGroupDeclaration() throws RecognitionException {
        try {
            // InternalNabla.g:302:1: ( ruleVarGroupDeclaration EOF )
            // InternalNabla.g:303:1: ruleVarGroupDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarGroupDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVarGroupDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarGroupDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVarGroupDeclaration"


    // $ANTLR start "ruleVarGroupDeclaration"
    // InternalNabla.g:310:1: ruleVarGroupDeclaration : ( ( rule__VarGroupDeclaration__Group__0 ) ) ;
    public final void ruleVarGroupDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:314:2: ( ( ( rule__VarGroupDeclaration__Group__0 ) ) )
            // InternalNabla.g:315:2: ( ( rule__VarGroupDeclaration__Group__0 ) )
            {
            // InternalNabla.g:315:2: ( ( rule__VarGroupDeclaration__Group__0 ) )
            // InternalNabla.g:316:3: ( rule__VarGroupDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarGroupDeclarationAccess().getGroup()); 
            }
            // InternalNabla.g:317:3: ( rule__VarGroupDeclaration__Group__0 )
            // InternalNabla.g:317:4: rule__VarGroupDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VarGroupDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarGroupDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVarGroupDeclaration"


    // $ANTLR start "entryRuleVar"
    // InternalNabla.g:326:1: entryRuleVar : ruleVar EOF ;
    public final void entryRuleVar() throws RecognitionException {
        try {
            // InternalNabla.g:327:1: ( ruleVar EOF )
            // InternalNabla.g:328:1: ruleVar EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVar();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVar"


    // $ANTLR start "ruleVar"
    // InternalNabla.g:335:1: ruleVar : ( ( rule__Var__Alternatives ) ) ;
    public final void ruleVar() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:339:2: ( ( ( rule__Var__Alternatives ) ) )
            // InternalNabla.g:340:2: ( ( rule__Var__Alternatives ) )
            {
            // InternalNabla.g:340:2: ( ( rule__Var__Alternatives ) )
            // InternalNabla.g:341:3: ( rule__Var__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarAccess().getAlternatives()); 
            }
            // InternalNabla.g:342:3: ( rule__Var__Alternatives )
            // InternalNabla.g:342:4: rule__Var__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Var__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVar"


    // $ANTLR start "entryRuleScalarVar"
    // InternalNabla.g:351:1: entryRuleScalarVar : ruleScalarVar EOF ;
    public final void entryRuleScalarVar() throws RecognitionException {
        try {
            // InternalNabla.g:352:1: ( ruleScalarVar EOF )
            // InternalNabla.g:353:1: ruleScalarVar EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleScalarVar();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleScalarVar"


    // $ANTLR start "ruleScalarVar"
    // InternalNabla.g:360:1: ruleScalarVar : ( ( rule__ScalarVar__NameAssignment ) ) ;
    public final void ruleScalarVar() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:364:2: ( ( ( rule__ScalarVar__NameAssignment ) ) )
            // InternalNabla.g:365:2: ( ( rule__ScalarVar__NameAssignment ) )
            {
            // InternalNabla.g:365:2: ( ( rule__ScalarVar__NameAssignment ) )
            // InternalNabla.g:366:3: ( rule__ScalarVar__NameAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarAccess().getNameAssignment()); 
            }
            // InternalNabla.g:367:3: ( rule__ScalarVar__NameAssignment )
            // InternalNabla.g:367:4: rule__ScalarVar__NameAssignment
            {
            pushFollow(FOLLOW_2);
            rule__ScalarVar__NameAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarAccess().getNameAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleScalarVar"


    // $ANTLR start "entryRuleArrayVar"
    // InternalNabla.g:376:1: entryRuleArrayVar : ruleArrayVar EOF ;
    public final void entryRuleArrayVar() throws RecognitionException {
        try {
            // InternalNabla.g:377:1: ( ruleArrayVar EOF )
            // InternalNabla.g:378:1: ruleArrayVar EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayVarRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleArrayVar();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayVarRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleArrayVar"


    // $ANTLR start "ruleArrayVar"
    // InternalNabla.g:385:1: ruleArrayVar : ( ( rule__ArrayVar__Group__0 ) ) ;
    public final void ruleArrayVar() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:389:2: ( ( ( rule__ArrayVar__Group__0 ) ) )
            // InternalNabla.g:390:2: ( ( rule__ArrayVar__Group__0 ) )
            {
            // InternalNabla.g:390:2: ( ( rule__ArrayVar__Group__0 ) )
            // InternalNabla.g:391:3: ( rule__ArrayVar__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayVarAccess().getGroup()); 
            }
            // InternalNabla.g:392:3: ( rule__ArrayVar__Group__0 )
            // InternalNabla.g:392:4: rule__ArrayVar__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ArrayVar__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayVarAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleArrayVar"


    // $ANTLR start "entryRuleConnectivity"
    // InternalNabla.g:401:1: entryRuleConnectivity : ruleConnectivity EOF ;
    public final void entryRuleConnectivity() throws RecognitionException {
        try {
            // InternalNabla.g:402:1: ( ruleConnectivity EOF )
            // InternalNabla.g:403:1: ruleConnectivity EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleConnectivity();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConnectivity"


    // $ANTLR start "ruleConnectivity"
    // InternalNabla.g:410:1: ruleConnectivity : ( ( rule__Connectivity__Group__0 ) ) ;
    public final void ruleConnectivity() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:414:2: ( ( ( rule__Connectivity__Group__0 ) ) )
            // InternalNabla.g:415:2: ( ( rule__Connectivity__Group__0 ) )
            {
            // InternalNabla.g:415:2: ( ( rule__Connectivity__Group__0 ) )
            // InternalNabla.g:416:3: ( rule__Connectivity__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getGroup()); 
            }
            // InternalNabla.g:417:3: ( rule__Connectivity__Group__0 )
            // InternalNabla.g:417:4: rule__Connectivity__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Connectivity__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConnectivity"


    // $ANTLR start "entryRuleItemArgType"
    // InternalNabla.g:426:1: entryRuleItemArgType : ruleItemArgType EOF ;
    public final void entryRuleItemArgType() throws RecognitionException {
        try {
            // InternalNabla.g:427:1: ( ruleItemArgType EOF )
            // InternalNabla.g:428:1: ruleItemArgType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItemArgTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleItemArgType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItemArgTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleItemArgType"


    // $ANTLR start "ruleItemArgType"
    // InternalNabla.g:435:1: ruleItemArgType : ( ( rule__ItemArgType__Alternatives ) ) ;
    public final void ruleItemArgType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:439:2: ( ( ( rule__ItemArgType__Alternatives ) ) )
            // InternalNabla.g:440:2: ( ( rule__ItemArgType__Alternatives ) )
            {
            // InternalNabla.g:440:2: ( ( rule__ItemArgType__Alternatives ) )
            // InternalNabla.g:441:3: ( rule__ItemArgType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItemArgTypeAccess().getAlternatives()); 
            }
            // InternalNabla.g:442:3: ( rule__ItemArgType__Alternatives )
            // InternalNabla.g:442:4: rule__ItemArgType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ItemArgType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItemArgTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleItemArgType"


    // $ANTLR start "entryRuleFunction"
    // InternalNabla.g:451:1: entryRuleFunction : ruleFunction EOF ;
    public final void entryRuleFunction() throws RecognitionException {
        try {
            // InternalNabla.g:452:1: ( ruleFunction EOF )
            // InternalNabla.g:453:1: ruleFunction EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFunction"


    // $ANTLR start "ruleFunction"
    // InternalNabla.g:460:1: ruleFunction : ( ( rule__Function__Group__0 ) ) ;
    public final void ruleFunction() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:464:2: ( ( ( rule__Function__Group__0 ) ) )
            // InternalNabla.g:465:2: ( ( rule__Function__Group__0 ) )
            {
            // InternalNabla.g:465:2: ( ( rule__Function__Group__0 ) )
            // InternalNabla.g:466:3: ( rule__Function__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGroup()); 
            }
            // InternalNabla.g:467:3: ( rule__Function__Group__0 )
            // InternalNabla.g:467:4: rule__Function__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Function__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunction"


    // $ANTLR start "entryRuleFunctionArg"
    // InternalNabla.g:476:1: entryRuleFunctionArg : ruleFunctionArg EOF ;
    public final void entryRuleFunctionArg() throws RecognitionException {
        try {
            // InternalNabla.g:477:1: ( ruleFunctionArg EOF )
            // InternalNabla.g:478:1: ruleFunctionArg EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionArgRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFunctionArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionArgRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFunctionArg"


    // $ANTLR start "ruleFunctionArg"
    // InternalNabla.g:485:1: ruleFunctionArg : ( ( rule__FunctionArg__Group__0 ) ) ;
    public final void ruleFunctionArg() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:489:2: ( ( ( rule__FunctionArg__Group__0 ) ) )
            // InternalNabla.g:490:2: ( ( rule__FunctionArg__Group__0 ) )
            {
            // InternalNabla.g:490:2: ( ( rule__FunctionArg__Group__0 ) )
            // InternalNabla.g:491:3: ( rule__FunctionArg__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionArgAccess().getGroup()); 
            }
            // InternalNabla.g:492:3: ( rule__FunctionArg__Group__0 )
            // InternalNabla.g:492:4: rule__FunctionArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FunctionArg__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionArgAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunctionArg"


    // $ANTLR start "entryRuleReduction"
    // InternalNabla.g:501:1: entryRuleReduction : ruleReduction EOF ;
    public final void entryRuleReduction() throws RecognitionException {
        try {
            // InternalNabla.g:502:1: ( ruleReduction EOF )
            // InternalNabla.g:503:1: ruleReduction EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleReduction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleReduction"


    // $ANTLR start "ruleReduction"
    // InternalNabla.g:510:1: ruleReduction : ( ( rule__Reduction__Group__0 ) ) ;
    public final void ruleReduction() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:514:2: ( ( ( rule__Reduction__Group__0 ) ) )
            // InternalNabla.g:515:2: ( ( rule__Reduction__Group__0 ) )
            {
            // InternalNabla.g:515:2: ( ( rule__Reduction__Group__0 ) )
            // InternalNabla.g:516:3: ( rule__Reduction__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionAccess().getGroup()); 
            }
            // InternalNabla.g:517:3: ( rule__Reduction__Group__0 )
            // InternalNabla.g:517:4: rule__Reduction__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Reduction__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleReduction"


    // $ANTLR start "entryRuleReductionArg"
    // InternalNabla.g:526:1: entryRuleReductionArg : ruleReductionArg EOF ;
    public final void entryRuleReductionArg() throws RecognitionException {
        try {
            // InternalNabla.g:527:1: ( ruleReductionArg EOF )
            // InternalNabla.g:528:1: ruleReductionArg EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionArgRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleReductionArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionArgRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleReductionArg"


    // $ANTLR start "ruleReductionArg"
    // InternalNabla.g:535:1: ruleReductionArg : ( ( rule__ReductionArg__Group__0 ) ) ;
    public final void ruleReductionArg() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:539:2: ( ( ( rule__ReductionArg__Group__0 ) ) )
            // InternalNabla.g:540:2: ( ( rule__ReductionArg__Group__0 ) )
            {
            // InternalNabla.g:540:2: ( ( rule__ReductionArg__Group__0 ) )
            // InternalNabla.g:541:3: ( rule__ReductionArg__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionArgAccess().getGroup()); 
            }
            // InternalNabla.g:542:3: ( rule__ReductionArg__Group__0 )
            // InternalNabla.g:542:4: rule__ReductionArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ReductionArg__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionArgAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleReductionArg"


    // $ANTLR start "entryRuleExpression"
    // InternalNabla.g:551:1: entryRuleExpression : ruleExpression EOF ;
    public final void entryRuleExpression() throws RecognitionException {
        try {
            // InternalNabla.g:552:1: ( ruleExpression EOF )
            // InternalNabla.g:553:1: ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalNabla.g:560:1: ruleExpression : ( ruleOr ) ;
    public final void ruleExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:564:2: ( ( ruleOr ) )
            // InternalNabla.g:565:2: ( ruleOr )
            {
            // InternalNabla.g:565:2: ( ruleOr )
            // InternalNabla.g:566:3: ruleOr
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getOrParserRuleCall()); 
            }
            pushFollow(FOLLOW_2);
            ruleOr();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getOrParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleOr"
    // InternalNabla.g:576:1: entryRuleOr : ruleOr EOF ;
    public final void entryRuleOr() throws RecognitionException {
        try {
            // InternalNabla.g:577:1: ( ruleOr EOF )
            // InternalNabla.g:578:1: ruleOr EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOr();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOr"


    // $ANTLR start "ruleOr"
    // InternalNabla.g:585:1: ruleOr : ( ( rule__Or__Group__0 ) ) ;
    public final void ruleOr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:589:2: ( ( ( rule__Or__Group__0 ) ) )
            // InternalNabla.g:590:2: ( ( rule__Or__Group__0 ) )
            {
            // InternalNabla.g:590:2: ( ( rule__Or__Group__0 ) )
            // InternalNabla.g:591:3: ( rule__Or__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getGroup()); 
            }
            // InternalNabla.g:592:3: ( rule__Or__Group__0 )
            // InternalNabla.g:592:4: rule__Or__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Or__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOr"


    // $ANTLR start "entryRuleAnd"
    // InternalNabla.g:601:1: entryRuleAnd : ruleAnd EOF ;
    public final void entryRuleAnd() throws RecognitionException {
        try {
            // InternalNabla.g:602:1: ( ruleAnd EOF )
            // InternalNabla.g:603:1: ruleAnd EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAnd();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnd"


    // $ANTLR start "ruleAnd"
    // InternalNabla.g:610:1: ruleAnd : ( ( rule__And__Group__0 ) ) ;
    public final void ruleAnd() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:614:2: ( ( ( rule__And__Group__0 ) ) )
            // InternalNabla.g:615:2: ( ( rule__And__Group__0 ) )
            {
            // InternalNabla.g:615:2: ( ( rule__And__Group__0 ) )
            // InternalNabla.g:616:3: ( rule__And__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getGroup()); 
            }
            // InternalNabla.g:617:3: ( rule__And__Group__0 )
            // InternalNabla.g:617:4: rule__And__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__And__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnd"


    // $ANTLR start "entryRuleEquality"
    // InternalNabla.g:626:1: entryRuleEquality : ruleEquality EOF ;
    public final void entryRuleEquality() throws RecognitionException {
        try {
            // InternalNabla.g:627:1: ( ruleEquality EOF )
            // InternalNabla.g:628:1: ruleEquality EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleEquality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEquality"


    // $ANTLR start "ruleEquality"
    // InternalNabla.g:635:1: ruleEquality : ( ( rule__Equality__Group__0 ) ) ;
    public final void ruleEquality() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:639:2: ( ( ( rule__Equality__Group__0 ) ) )
            // InternalNabla.g:640:2: ( ( rule__Equality__Group__0 ) )
            {
            // InternalNabla.g:640:2: ( ( rule__Equality__Group__0 ) )
            // InternalNabla.g:641:3: ( rule__Equality__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAccess().getGroup()); 
            }
            // InternalNabla.g:642:3: ( rule__Equality__Group__0 )
            // InternalNabla.g:642:4: rule__Equality__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Equality__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEquality"


    // $ANTLR start "entryRuleComparison"
    // InternalNabla.g:651:1: entryRuleComparison : ruleComparison EOF ;
    public final void entryRuleComparison() throws RecognitionException {
        try {
            // InternalNabla.g:652:1: ( ruleComparison EOF )
            // InternalNabla.g:653:1: ruleComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComparison"


    // $ANTLR start "ruleComparison"
    // InternalNabla.g:660:1: ruleComparison : ( ( rule__Comparison__Group__0 ) ) ;
    public final void ruleComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:664:2: ( ( ( rule__Comparison__Group__0 ) ) )
            // InternalNabla.g:665:2: ( ( rule__Comparison__Group__0 ) )
            {
            // InternalNabla.g:665:2: ( ( rule__Comparison__Group__0 ) )
            // InternalNabla.g:666:3: ( rule__Comparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getGroup()); 
            }
            // InternalNabla.g:667:3: ( rule__Comparison__Group__0 )
            // InternalNabla.g:667:4: rule__Comparison__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComparison"


    // $ANTLR start "entryRulePlusOrMinus"
    // InternalNabla.g:676:1: entryRulePlusOrMinus : rulePlusOrMinus EOF ;
    public final void entryRulePlusOrMinus() throws RecognitionException {
        try {
            // InternalNabla.g:677:1: ( rulePlusOrMinus EOF )
            // InternalNabla.g:678:1: rulePlusOrMinus EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePlusOrMinus();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePlusOrMinus"


    // $ANTLR start "rulePlusOrMinus"
    // InternalNabla.g:685:1: rulePlusOrMinus : ( ( rule__PlusOrMinus__Group__0 ) ) ;
    public final void rulePlusOrMinus() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:689:2: ( ( ( rule__PlusOrMinus__Group__0 ) ) )
            // InternalNabla.g:690:2: ( ( rule__PlusOrMinus__Group__0 ) )
            {
            // InternalNabla.g:690:2: ( ( rule__PlusOrMinus__Group__0 ) )
            // InternalNabla.g:691:3: ( rule__PlusOrMinus__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getGroup()); 
            }
            // InternalNabla.g:692:3: ( rule__PlusOrMinus__Group__0 )
            // InternalNabla.g:692:4: rule__PlusOrMinus__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePlusOrMinus"


    // $ANTLR start "entryRuleMulOrDiv"
    // InternalNabla.g:701:1: entryRuleMulOrDiv : ruleMulOrDiv EOF ;
    public final void entryRuleMulOrDiv() throws RecognitionException {
        try {
            // InternalNabla.g:702:1: ( ruleMulOrDiv EOF )
            // InternalNabla.g:703:1: ruleMulOrDiv EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleMulOrDiv();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMulOrDiv"


    // $ANTLR start "ruleMulOrDiv"
    // InternalNabla.g:710:1: ruleMulOrDiv : ( ( rule__MulOrDiv__Group__0 ) ) ;
    public final void ruleMulOrDiv() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:714:2: ( ( ( rule__MulOrDiv__Group__0 ) ) )
            // InternalNabla.g:715:2: ( ( rule__MulOrDiv__Group__0 ) )
            {
            // InternalNabla.g:715:2: ( ( rule__MulOrDiv__Group__0 ) )
            // InternalNabla.g:716:3: ( rule__MulOrDiv__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivAccess().getGroup()); 
            }
            // InternalNabla.g:717:3: ( rule__MulOrDiv__Group__0 )
            // InternalNabla.g:717:4: rule__MulOrDiv__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMulOrDiv"


    // $ANTLR start "entryRulePrimary"
    // InternalNabla.g:726:1: entryRulePrimary : rulePrimary EOF ;
    public final void entryRulePrimary() throws RecognitionException {
        try {
            // InternalNabla.g:727:1: ( rulePrimary EOF )
            // InternalNabla.g:728:1: rulePrimary EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePrimary();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePrimary"


    // $ANTLR start "rulePrimary"
    // InternalNabla.g:735:1: rulePrimary : ( ( rule__Primary__Alternatives ) ) ;
    public final void rulePrimary() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:739:2: ( ( ( rule__Primary__Alternatives ) ) )
            // InternalNabla.g:740:2: ( ( rule__Primary__Alternatives ) )
            {
            // InternalNabla.g:740:2: ( ( rule__Primary__Alternatives ) )
            // InternalNabla.g:741:3: ( rule__Primary__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getAlternatives()); 
            }
            // InternalNabla.g:742:3: ( rule__Primary__Alternatives )
            // InternalNabla.g:742:4: rule__Primary__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePrimary"


    // $ANTLR start "entryRuleAtomic"
    // InternalNabla.g:751:1: entryRuleAtomic : ruleAtomic EOF ;
    public final void entryRuleAtomic() throws RecognitionException {
        try {
            // InternalNabla.g:752:1: ( ruleAtomic EOF )
            // InternalNabla.g:753:1: ruleAtomic EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAtomic();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAtomic"


    // $ANTLR start "ruleAtomic"
    // InternalNabla.g:760:1: ruleAtomic : ( ( rule__Atomic__Alternatives ) ) ;
    public final void ruleAtomic() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:764:2: ( ( ( rule__Atomic__Alternatives ) ) )
            // InternalNabla.g:765:2: ( ( rule__Atomic__Alternatives ) )
            {
            // InternalNabla.g:765:2: ( ( rule__Atomic__Alternatives ) )
            // InternalNabla.g:766:3: ( rule__Atomic__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getAlternatives()); 
            }
            // InternalNabla.g:767:3: ( rule__Atomic__Alternatives )
            // InternalNabla.g:767:4: rule__Atomic__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAtomic"


    // $ANTLR start "entryRuleReal2Constant"
    // InternalNabla.g:776:1: entryRuleReal2Constant : ruleReal2Constant EOF ;
    public final void entryRuleReal2Constant() throws RecognitionException {
        try {
            // InternalNabla.g:777:1: ( ruleReal2Constant EOF )
            // InternalNabla.g:778:1: ruleReal2Constant EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal2ConstantRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleReal2Constant();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal2ConstantRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleReal2Constant"


    // $ANTLR start "ruleReal2Constant"
    // InternalNabla.g:785:1: ruleReal2Constant : ( ( rule__Real2Constant__Group__0 ) ) ;
    public final void ruleReal2Constant() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:789:2: ( ( ( rule__Real2Constant__Group__0 ) ) )
            // InternalNabla.g:790:2: ( ( rule__Real2Constant__Group__0 ) )
            {
            // InternalNabla.g:790:2: ( ( rule__Real2Constant__Group__0 ) )
            // InternalNabla.g:791:3: ( rule__Real2Constant__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal2ConstantAccess().getGroup()); 
            }
            // InternalNabla.g:792:3: ( rule__Real2Constant__Group__0 )
            // InternalNabla.g:792:4: rule__Real2Constant__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Real2Constant__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal2ConstantAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleReal2Constant"


    // $ANTLR start "entryRuleReal3Constant"
    // InternalNabla.g:801:1: entryRuleReal3Constant : ruleReal3Constant EOF ;
    public final void entryRuleReal3Constant() throws RecognitionException {
        try {
            // InternalNabla.g:802:1: ( ruleReal3Constant EOF )
            // InternalNabla.g:803:1: ruleReal3Constant EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal3ConstantRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleReal3Constant();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal3ConstantRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleReal3Constant"


    // $ANTLR start "ruleReal3Constant"
    // InternalNabla.g:810:1: ruleReal3Constant : ( ( rule__Real3Constant__Group__0 ) ) ;
    public final void ruleReal3Constant() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:814:2: ( ( ( rule__Real3Constant__Group__0 ) ) )
            // InternalNabla.g:815:2: ( ( rule__Real3Constant__Group__0 ) )
            {
            // InternalNabla.g:815:2: ( ( rule__Real3Constant__Group__0 ) )
            // InternalNabla.g:816:3: ( rule__Real3Constant__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal3ConstantAccess().getGroup()); 
            }
            // InternalNabla.g:817:3: ( rule__Real3Constant__Group__0 )
            // InternalNabla.g:817:4: rule__Real3Constant__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Real3Constant__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal3ConstantAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleReal3Constant"


    // $ANTLR start "entryRuleVarRef"
    // InternalNabla.g:826:1: entryRuleVarRef : ruleVarRef EOF ;
    public final void entryRuleVarRef() throws RecognitionException {
        try {
            // InternalNabla.g:827:1: ( ruleVarRef EOF )
            // InternalNabla.g:828:1: ruleVarRef EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVarRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVarRef"


    // $ANTLR start "ruleVarRef"
    // InternalNabla.g:835:1: ruleVarRef : ( ( rule__VarRef__Group__0 ) ) ;
    public final void ruleVarRef() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:839:2: ( ( ( rule__VarRef__Group__0 ) ) )
            // InternalNabla.g:840:2: ( ( rule__VarRef__Group__0 ) )
            {
            // InternalNabla.g:840:2: ( ( rule__VarRef__Group__0 ) )
            // InternalNabla.g:841:3: ( rule__VarRef__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getGroup()); 
            }
            // InternalNabla.g:842:3: ( rule__VarRef__Group__0 )
            // InternalNabla.g:842:4: rule__VarRef__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VarRef__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVarRef"


    // $ANTLR start "entryRuleIteratorRangeOrRef"
    // InternalNabla.g:851:1: entryRuleIteratorRangeOrRef : ruleIteratorRangeOrRef EOF ;
    public final void entryRuleIteratorRangeOrRef() throws RecognitionException {
        try {
            // InternalNabla.g:852:1: ( ruleIteratorRangeOrRef EOF )
            // InternalNabla.g:853:1: ruleIteratorRangeOrRef EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIteratorRangeOrRefRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleIteratorRangeOrRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIteratorRangeOrRefRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIteratorRangeOrRef"


    // $ANTLR start "ruleIteratorRangeOrRef"
    // InternalNabla.g:860:1: ruleIteratorRangeOrRef : ( ( rule__IteratorRangeOrRef__Alternatives ) ) ;
    public final void ruleIteratorRangeOrRef() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:864:2: ( ( ( rule__IteratorRangeOrRef__Alternatives ) ) )
            // InternalNabla.g:865:2: ( ( rule__IteratorRangeOrRef__Alternatives ) )
            {
            // InternalNabla.g:865:2: ( ( rule__IteratorRangeOrRef__Alternatives ) )
            // InternalNabla.g:866:3: ( rule__IteratorRangeOrRef__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIteratorRangeOrRefAccess().getAlternatives()); 
            }
            // InternalNabla.g:867:3: ( rule__IteratorRangeOrRef__Alternatives )
            // InternalNabla.g:867:4: rule__IteratorRangeOrRef__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__IteratorRangeOrRef__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIteratorRangeOrRefAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIteratorRangeOrRef"


    // $ANTLR start "entryRuleTimeIteratorRef"
    // InternalNabla.g:876:1: entryRuleTimeIteratorRef : ruleTimeIteratorRef EOF ;
    public final void entryRuleTimeIteratorRef() throws RecognitionException {
        try {
            // InternalNabla.g:877:1: ( ruleTimeIteratorRef EOF )
            // InternalNabla.g:878:1: ruleTimeIteratorRef EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorRefRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTimeIteratorRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorRefRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTimeIteratorRef"


    // $ANTLR start "ruleTimeIteratorRef"
    // InternalNabla.g:885:1: ruleTimeIteratorRef : ( ( rule__TimeIteratorRef__Group__0 ) ) ;
    public final void ruleTimeIteratorRef() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:889:2: ( ( ( rule__TimeIteratorRef__Group__0 ) ) )
            // InternalNabla.g:890:2: ( ( rule__TimeIteratorRef__Group__0 ) )
            {
            // InternalNabla.g:890:2: ( ( rule__TimeIteratorRef__Group__0 ) )
            // InternalNabla.g:891:3: ( rule__TimeIteratorRef__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorRefAccess().getGroup()); 
            }
            // InternalNabla.g:892:3: ( rule__TimeIteratorRef__Group__0 )
            // InternalNabla.g:892:4: rule__TimeIteratorRef__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TimeIteratorRef__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorRefAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTimeIteratorRef"


    // $ANTLR start "entryRuleQualifiedName"
    // InternalNabla.g:901:1: entryRuleQualifiedName : ruleQualifiedName EOF ;
    public final void entryRuleQualifiedName() throws RecognitionException {
        try {
            // InternalNabla.g:902:1: ( ruleQualifiedName EOF )
            // InternalNabla.g:903:1: ruleQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // InternalNabla.g:910:1: ruleQualifiedName : ( ( rule__QualifiedName__Group__0 ) ) ;
    public final void ruleQualifiedName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:914:2: ( ( ( rule__QualifiedName__Group__0 ) ) )
            // InternalNabla.g:915:2: ( ( rule__QualifiedName__Group__0 ) )
            {
            // InternalNabla.g:915:2: ( ( rule__QualifiedName__Group__0 ) )
            // InternalNabla.g:916:3: ( rule__QualifiedName__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameAccess().getGroup()); 
            }
            // InternalNabla.g:917:3: ( rule__QualifiedName__Group__0 )
            // InternalNabla.g:917:4: rule__QualifiedName__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleQualifiedNameWithWildcard"
    // InternalNabla.g:926:1: entryRuleQualifiedNameWithWildcard : ruleQualifiedNameWithWildcard EOF ;
    public final void entryRuleQualifiedNameWithWildcard() throws RecognitionException {
        try {
            // InternalNabla.g:927:1: ( ruleQualifiedNameWithWildcard EOF )
            // InternalNabla.g:928:1: ruleQualifiedNameWithWildcard EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameWithWildcardRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameWithWildcardRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQualifiedNameWithWildcard"


    // $ANTLR start "ruleQualifiedNameWithWildcard"
    // InternalNabla.g:935:1: ruleQualifiedNameWithWildcard : ( ( rule__QualifiedNameWithWildcard__Group__0 ) ) ;
    public final void ruleQualifiedNameWithWildcard() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:939:2: ( ( ( rule__QualifiedNameWithWildcard__Group__0 ) ) )
            // InternalNabla.g:940:2: ( ( rule__QualifiedNameWithWildcard__Group__0 ) )
            {
            // InternalNabla.g:940:2: ( ( rule__QualifiedNameWithWildcard__Group__0 ) )
            // InternalNabla.g:941:3: ( rule__QualifiedNameWithWildcard__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); 
            }
            // InternalNabla.g:942:3: ( rule__QualifiedNameWithWildcard__Group__0 )
            // InternalNabla.g:942:4: rule__QualifiedNameWithWildcard__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameWithWildcard__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQualifiedNameWithWildcard"


    // $ANTLR start "ruleBasicType"
    // InternalNabla.g:951:1: ruleBasicType : ( ( rule__BasicType__Alternatives ) ) ;
    public final void ruleBasicType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:955:1: ( ( ( rule__BasicType__Alternatives ) ) )
            // InternalNabla.g:956:2: ( ( rule__BasicType__Alternatives ) )
            {
            // InternalNabla.g:956:2: ( ( rule__BasicType__Alternatives ) )
            // InternalNabla.g:957:3: ( rule__BasicType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBasicTypeAccess().getAlternatives()); 
            }
            // InternalNabla.g:958:3: ( rule__BasicType__Alternatives )
            // InternalNabla.g:958:4: rule__BasicType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__BasicType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBasicTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBasicType"


    // $ANTLR start "ruleItemType"
    // InternalNabla.g:967:1: ruleItemType : ( ( rule__ItemType__Alternatives ) ) ;
    public final void ruleItemType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:971:1: ( ( ( rule__ItemType__Alternatives ) ) )
            // InternalNabla.g:972:2: ( ( rule__ItemType__Alternatives ) )
            {
            // InternalNabla.g:972:2: ( ( rule__ItemType__Alternatives ) )
            // InternalNabla.g:973:3: ( rule__ItemType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItemTypeAccess().getAlternatives()); 
            }
            // InternalNabla.g:974:3: ( rule__ItemType__Alternatives )
            // InternalNabla.g:974:4: rule__ItemType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ItemType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItemTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleItemType"


    // $ANTLR start "rule__NablaModule__VariablesAlternatives_5_0"
    // InternalNabla.g:982:1: rule__NablaModule__VariablesAlternatives_5_0 : ( ( ruleScalarVarDefinition ) | ( ruleVarGroupDeclaration ) );
    public final void rule__NablaModule__VariablesAlternatives_5_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:986:1: ( ( ruleScalarVarDefinition ) | ( ruleVarGroupDeclaration ) )
            int alt1=2;
            alt1 = dfa1.predict(input);
            switch (alt1) {
                case 1 :
                    // InternalNabla.g:987:2: ( ruleScalarVarDefinition )
                    {
                    // InternalNabla.g:987:2: ( ruleScalarVarDefinition )
                    // InternalNabla.g:988:3: ruleScalarVarDefinition
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNablaModuleAccess().getVariablesScalarVarDefinitionParserRuleCall_5_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleScalarVarDefinition();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNablaModuleAccess().getVariablesScalarVarDefinitionParserRuleCall_5_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:993:2: ( ruleVarGroupDeclaration )
                    {
                    // InternalNabla.g:993:2: ( ruleVarGroupDeclaration )
                    // InternalNabla.g:994:3: ruleVarGroupDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNablaModuleAccess().getVariablesVarGroupDeclarationParserRuleCall_5_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleVarGroupDeclaration();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNablaModuleAccess().getVariablesVarGroupDeclarationParserRuleCall_5_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__VariablesAlternatives_5_0"


    // $ANTLR start "rule__DeclarationBlock__Alternatives"
    // InternalNabla.g:1003:1: rule__DeclarationBlock__Alternatives : ( ( ( rule__DeclarationBlock__Group_0__0 ) ) | ( ( rule__DeclarationBlock__Group_1__0 ) ) );
    public final void rule__DeclarationBlock__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1007:1: ( ( ( rule__DeclarationBlock__Group_0__0 ) ) | ( ( rule__DeclarationBlock__Group_1__0 ) ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==35) ) {
                alt2=1;
            }
            else if ( (LA2_0==38) ) {
                alt2=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // InternalNabla.g:1008:2: ( ( rule__DeclarationBlock__Group_0__0 ) )
                    {
                    // InternalNabla.g:1008:2: ( ( rule__DeclarationBlock__Group_0__0 ) )
                    // InternalNabla.g:1009:3: ( rule__DeclarationBlock__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDeclarationBlockAccess().getGroup_0()); 
                    }
                    // InternalNabla.g:1010:3: ( rule__DeclarationBlock__Group_0__0 )
                    // InternalNabla.g:1010:4: rule__DeclarationBlock__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DeclarationBlock__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDeclarationBlockAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1014:2: ( ( rule__DeclarationBlock__Group_1__0 ) )
                    {
                    // InternalNabla.g:1014:2: ( ( rule__DeclarationBlock__Group_1__0 ) )
                    // InternalNabla.g:1015:3: ( rule__DeclarationBlock__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDeclarationBlockAccess().getGroup_1()); 
                    }
                    // InternalNabla.g:1016:3: ( rule__DeclarationBlock__Group_1__0 )
                    // InternalNabla.g:1016:4: rule__DeclarationBlock__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DeclarationBlock__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDeclarationBlockAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Alternatives"


    // $ANTLR start "rule__DeclarationBlock__FunctionsAlternatives_1_3_0"
    // InternalNabla.g:1024:1: rule__DeclarationBlock__FunctionsAlternatives_1_3_0 : ( ( ruleFunction ) | ( ruleReduction ) );
    public final void rule__DeclarationBlock__FunctionsAlternatives_1_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1028:1: ( ( ruleFunction ) | ( ruleReduction ) )
            int alt3=2;
            alt3 = dfa3.predict(input);
            switch (alt3) {
                case 1 :
                    // InternalNabla.g:1029:2: ( ruleFunction )
                    {
                    // InternalNabla.g:1029:2: ( ruleFunction )
                    // InternalNabla.g:1030:3: ruleFunction
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDeclarationBlockAccess().getFunctionsFunctionParserRuleCall_1_3_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleFunction();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDeclarationBlockAccess().getFunctionsFunctionParserRuleCall_1_3_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1035:2: ( ruleReduction )
                    {
                    // InternalNabla.g:1035:2: ( ruleReduction )
                    // InternalNabla.g:1036:3: ruleReduction
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDeclarationBlockAccess().getFunctionsReductionParserRuleCall_1_3_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleReduction();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDeclarationBlockAccess().getFunctionsReductionParserRuleCall_1_3_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__FunctionsAlternatives_1_3_0"


    // $ANTLR start "rule__Job__Alternatives"
    // InternalNabla.g:1045:1: rule__Job__Alternatives : ( ( ( rule__Job__Group_0__0 ) ) | ( ( rule__Job__Group_1__0 ) ) );
    public final void rule__Job__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1049:1: ( ( ( rule__Job__Group_0__0 ) ) | ( ( rule__Job__Group_1__0 ) ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==RULE_ID) ) {
                int LA4_1 = input.LA(2);

                if ( (LA4_1==39) ) {
                    int LA4_2 = input.LA(3);

                    if ( (LA4_2==40) ) {
                        int LA4_3 = input.LA(4);

                        if ( (LA4_3==RULE_ID) ) {
                            int LA4_5 = input.LA(5);

                            if ( (LA4_5==47) ) {
                                int LA4_6 = input.LA(6);

                                if ( (LA4_6==22) ) {
                                    alt4=2;
                                }
                                else if ( (LA4_6==RULE_ID) ) {
                                    alt4=1;
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return ;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 4, 6, input);

                                    throw nvae;
                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return ;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 4, 5, input);

                                throw nvae;
                            }
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return ;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 4, 3, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA4_2==RULE_ID||(LA4_2>=22 && LA4_2<=28)||LA4_2==36||LA4_2==43||LA4_2==60) ) {
                        alt4=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 4, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 4, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalNabla.g:1050:2: ( ( rule__Job__Group_0__0 ) )
                    {
                    // InternalNabla.g:1050:2: ( ( rule__Job__Group_0__0 ) )
                    // InternalNabla.g:1051:3: ( rule__Job__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJobAccess().getGroup_0()); 
                    }
                    // InternalNabla.g:1052:3: ( rule__Job__Group_0__0 )
                    // InternalNabla.g:1052:4: rule__Job__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Job__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJobAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1056:2: ( ( rule__Job__Group_1__0 ) )
                    {
                    // InternalNabla.g:1056:2: ( ( rule__Job__Group_1__0 ) )
                    // InternalNabla.g:1057:3: ( rule__Job__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJobAccess().getGroup_1()); 
                    }
                    // InternalNabla.g:1058:3: ( rule__Job__Group_1__0 )
                    // InternalNabla.g:1058:4: rule__Job__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Job__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJobAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Alternatives"


    // $ANTLR start "rule__Instruction__Alternatives"
    // InternalNabla.g:1066:1: rule__Instruction__Alternatives : ( ( ruleScalarVarDefinition ) | ( ruleVarGroupDeclaration ) | ( ( rule__Instruction__Group_2__0 ) ) | ( ( rule__Instruction__Group_3__0 ) ) | ( ( rule__Instruction__Group_4__0 ) ) | ( ( rule__Instruction__Group_5__0 ) ) );
    public final void rule__Instruction__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1070:1: ( ( ruleScalarVarDefinition ) | ( ruleVarGroupDeclaration ) | ( ( rule__Instruction__Group_2__0 ) ) | ( ( rule__Instruction__Group_3__0 ) ) | ( ( rule__Instruction__Group_4__0 ) ) | ( ( rule__Instruction__Group_5__0 ) ) )
            int alt5=6;
            alt5 = dfa5.predict(input);
            switch (alt5) {
                case 1 :
                    // InternalNabla.g:1071:2: ( ruleScalarVarDefinition )
                    {
                    // InternalNabla.g:1071:2: ( ruleScalarVarDefinition )
                    // InternalNabla.g:1072:3: ruleScalarVarDefinition
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInstructionAccess().getScalarVarDefinitionParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleScalarVarDefinition();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInstructionAccess().getScalarVarDefinitionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1077:2: ( ruleVarGroupDeclaration )
                    {
                    // InternalNabla.g:1077:2: ( ruleVarGroupDeclaration )
                    // InternalNabla.g:1078:3: ruleVarGroupDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInstructionAccess().getVarGroupDeclarationParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleVarGroupDeclaration();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInstructionAccess().getVarGroupDeclarationParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNabla.g:1083:2: ( ( rule__Instruction__Group_2__0 ) )
                    {
                    // InternalNabla.g:1083:2: ( ( rule__Instruction__Group_2__0 ) )
                    // InternalNabla.g:1084:3: ( rule__Instruction__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInstructionAccess().getGroup_2()); 
                    }
                    // InternalNabla.g:1085:3: ( rule__Instruction__Group_2__0 )
                    // InternalNabla.g:1085:4: rule__Instruction__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Instruction__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInstructionAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalNabla.g:1089:2: ( ( rule__Instruction__Group_3__0 ) )
                    {
                    // InternalNabla.g:1089:2: ( ( rule__Instruction__Group_3__0 ) )
                    // InternalNabla.g:1090:3: ( rule__Instruction__Group_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInstructionAccess().getGroup_3()); 
                    }
                    // InternalNabla.g:1091:3: ( rule__Instruction__Group_3__0 )
                    // InternalNabla.g:1091:4: rule__Instruction__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Instruction__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInstructionAccess().getGroup_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalNabla.g:1095:2: ( ( rule__Instruction__Group_4__0 ) )
                    {
                    // InternalNabla.g:1095:2: ( ( rule__Instruction__Group_4__0 ) )
                    // InternalNabla.g:1096:3: ( rule__Instruction__Group_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInstructionAccess().getGroup_4()); 
                    }
                    // InternalNabla.g:1097:3: ( rule__Instruction__Group_4__0 )
                    // InternalNabla.g:1097:4: rule__Instruction__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Instruction__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInstructionAccess().getGroup_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalNabla.g:1101:2: ( ( rule__Instruction__Group_5__0 ) )
                    {
                    // InternalNabla.g:1101:2: ( ( rule__Instruction__Group_5__0 ) )
                    // InternalNabla.g:1102:3: ( rule__Instruction__Group_5__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInstructionAccess().getGroup_5()); 
                    }
                    // InternalNabla.g:1103:3: ( rule__Instruction__Group_5__0 )
                    // InternalNabla.g:1103:4: rule__Instruction__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Instruction__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInstructionAccess().getGroup_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Alternatives"


    // $ANTLR start "rule__SpaceIteratorRef__Alternatives"
    // InternalNabla.g:1111:1: rule__SpaceIteratorRef__Alternatives : ( ( ( rule__SpaceIteratorRef__Group_0__0 ) ) | ( ( rule__SpaceIteratorRef__IteratorAssignment_1 ) ) );
    public final void rule__SpaceIteratorRef__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1115:1: ( ( ( rule__SpaceIteratorRef__Group_0__0 ) ) | ( ( rule__SpaceIteratorRef__IteratorAssignment_1 ) ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( ((LA6_0>=58 && LA6_0<=59)) ) {
                alt6=1;
            }
            else if ( (LA6_0==RULE_ID) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalNabla.g:1116:2: ( ( rule__SpaceIteratorRef__Group_0__0 ) )
                    {
                    // InternalNabla.g:1116:2: ( ( rule__SpaceIteratorRef__Group_0__0 ) )
                    // InternalNabla.g:1117:3: ( rule__SpaceIteratorRef__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSpaceIteratorRefAccess().getGroup_0()); 
                    }
                    // InternalNabla.g:1118:3: ( rule__SpaceIteratorRef__Group_0__0 )
                    // InternalNabla.g:1118:4: rule__SpaceIteratorRef__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SpaceIteratorRef__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSpaceIteratorRefAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1122:2: ( ( rule__SpaceIteratorRef__IteratorAssignment_1 ) )
                    {
                    // InternalNabla.g:1122:2: ( ( rule__SpaceIteratorRef__IteratorAssignment_1 ) )
                    // InternalNabla.g:1123:3: ( rule__SpaceIteratorRef__IteratorAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSpaceIteratorRefAccess().getIteratorAssignment_1()); 
                    }
                    // InternalNabla.g:1124:3: ( rule__SpaceIteratorRef__IteratorAssignment_1 )
                    // InternalNabla.g:1124:4: rule__SpaceIteratorRef__IteratorAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SpaceIteratorRef__IteratorAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSpaceIteratorRefAccess().getIteratorAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRef__Alternatives"


    // $ANTLR start "rule__SpaceIteratorRef__Alternatives_0_0"
    // InternalNabla.g:1132:1: rule__SpaceIteratorRef__Alternatives_0_0 : ( ( ( rule__SpaceIteratorRef__PrevAssignment_0_0_0 ) ) | ( ( rule__SpaceIteratorRef__NextAssignment_0_0_1 ) ) );
    public final void rule__SpaceIteratorRef__Alternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1136:1: ( ( ( rule__SpaceIteratorRef__PrevAssignment_0_0_0 ) ) | ( ( rule__SpaceIteratorRef__NextAssignment_0_0_1 ) ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==58) ) {
                alt7=1;
            }
            else if ( (LA7_0==59) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalNabla.g:1137:2: ( ( rule__SpaceIteratorRef__PrevAssignment_0_0_0 ) )
                    {
                    // InternalNabla.g:1137:2: ( ( rule__SpaceIteratorRef__PrevAssignment_0_0_0 ) )
                    // InternalNabla.g:1138:3: ( rule__SpaceIteratorRef__PrevAssignment_0_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSpaceIteratorRefAccess().getPrevAssignment_0_0_0()); 
                    }
                    // InternalNabla.g:1139:3: ( rule__SpaceIteratorRef__PrevAssignment_0_0_0 )
                    // InternalNabla.g:1139:4: rule__SpaceIteratorRef__PrevAssignment_0_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SpaceIteratorRef__PrevAssignment_0_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSpaceIteratorRefAccess().getPrevAssignment_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1143:2: ( ( rule__SpaceIteratorRef__NextAssignment_0_0_1 ) )
                    {
                    // InternalNabla.g:1143:2: ( ( rule__SpaceIteratorRef__NextAssignment_0_0_1 ) )
                    // InternalNabla.g:1144:3: ( rule__SpaceIteratorRef__NextAssignment_0_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSpaceIteratorRefAccess().getNextAssignment_0_0_1()); 
                    }
                    // InternalNabla.g:1145:3: ( rule__SpaceIteratorRef__NextAssignment_0_0_1 )
                    // InternalNabla.g:1145:4: rule__SpaceIteratorRef__NextAssignment_0_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SpaceIteratorRef__NextAssignment_0_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSpaceIteratorRefAccess().getNextAssignment_0_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRef__Alternatives_0_0"


    // $ANTLR start "rule__Var__Alternatives"
    // InternalNabla.g:1153:1: rule__Var__Alternatives : ( ( ruleScalarVar ) | ( ruleArrayVar ) );
    public final void rule__Var__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1157:1: ( ( ruleScalarVar ) | ( ruleArrayVar ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==RULE_ID) ) {
                int LA8_1 = input.LA(2);

                if ( (LA8_1==EOF||LA8_1==33||LA8_1==41) ) {
                    alt8=1;
                }
                else if ( (LA8_1==48) ) {
                    alt8=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 8, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalNabla.g:1158:2: ( ruleScalarVar )
                    {
                    // InternalNabla.g:1158:2: ( ruleScalarVar )
                    // InternalNabla.g:1159:3: ruleScalarVar
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVarAccess().getScalarVarParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleScalarVar();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVarAccess().getScalarVarParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1164:2: ( ruleArrayVar )
                    {
                    // InternalNabla.g:1164:2: ( ruleArrayVar )
                    // InternalNabla.g:1165:3: ruleArrayVar
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVarAccess().getArrayVarParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleArrayVar();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVarAccess().getArrayVarParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Var__Alternatives"


    // $ANTLR start "rule__Connectivity__Alternatives_3"
    // InternalNabla.g:1174:1: rule__Connectivity__Alternatives_3 : ( ( ( rule__Connectivity__Group_3_0__0 ) ) | ( '\\u2205' ) );
    public final void rule__Connectivity__Alternatives_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1178:1: ( ( ( rule__Connectivity__Group_3_0__0 ) ) | ( '\\u2205' ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( ((LA9_0>=29 && LA9_0<=31)) ) {
                alt9=1;
            }
            else if ( (LA9_0==12) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalNabla.g:1179:2: ( ( rule__Connectivity__Group_3_0__0 ) )
                    {
                    // InternalNabla.g:1179:2: ( ( rule__Connectivity__Group_3_0__0 ) )
                    // InternalNabla.g:1180:3: ( rule__Connectivity__Group_3_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConnectivityAccess().getGroup_3_0()); 
                    }
                    // InternalNabla.g:1181:3: ( rule__Connectivity__Group_3_0__0 )
                    // InternalNabla.g:1181:4: rule__Connectivity__Group_3_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Connectivity__Group_3_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConnectivityAccess().getGroup_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1185:2: ( '\\u2205' )
                    {
                    // InternalNabla.g:1185:2: ( '\\u2205' )
                    // InternalNabla.g:1186:3: '\\u2205'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConnectivityAccess().getEmptySetKeyword_3_1()); 
                    }
                    match(input,12,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConnectivityAccess().getEmptySetKeyword_3_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Alternatives_3"


    // $ANTLR start "rule__ItemArgType__Alternatives"
    // InternalNabla.g:1195:1: rule__ItemArgType__Alternatives : ( ( ( rule__ItemArgType__Group_0__0 ) ) | ( ( rule__ItemArgType__TypeAssignment_1 ) ) );
    public final void rule__ItemArgType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1199:1: ( ( ( rule__ItemArgType__Group_0__0 ) ) | ( ( rule__ItemArgType__TypeAssignment_1 ) ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==36) ) {
                alt10=1;
            }
            else if ( ((LA10_0>=29 && LA10_0<=31)) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalNabla.g:1200:2: ( ( rule__ItemArgType__Group_0__0 ) )
                    {
                    // InternalNabla.g:1200:2: ( ( rule__ItemArgType__Group_0__0 ) )
                    // InternalNabla.g:1201:3: ( rule__ItemArgType__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItemArgTypeAccess().getGroup_0()); 
                    }
                    // InternalNabla.g:1202:3: ( rule__ItemArgType__Group_0__0 )
                    // InternalNabla.g:1202:4: rule__ItemArgType__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ItemArgType__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItemArgTypeAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1206:2: ( ( rule__ItemArgType__TypeAssignment_1 ) )
                    {
                    // InternalNabla.g:1206:2: ( ( rule__ItemArgType__TypeAssignment_1 ) )
                    // InternalNabla.g:1207:3: ( rule__ItemArgType__TypeAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItemArgTypeAccess().getTypeAssignment_1()); 
                    }
                    // InternalNabla.g:1208:3: ( rule__ItemArgType__TypeAssignment_1 )
                    // InternalNabla.g:1208:4: rule__ItemArgType__TypeAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ItemArgType__TypeAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItemArgTypeAccess().getTypeAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItemArgType__Alternatives"


    // $ANTLR start "rule__FunctionArg__Alternatives_1"
    // InternalNabla.g:1216:1: rule__FunctionArg__Alternatives_1 : ( ( ( rule__FunctionArg__Group_1_0__0 ) ) | ( '\\u2205' ) );
    public final void rule__FunctionArg__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1220:1: ( ( ( rule__FunctionArg__Group_1_0__0 ) ) | ( '\\u2205' ) )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( ((LA11_0>=22 && LA11_0<=28)) ) {
                alt11=1;
            }
            else if ( (LA11_0==12) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalNabla.g:1221:2: ( ( rule__FunctionArg__Group_1_0__0 ) )
                    {
                    // InternalNabla.g:1221:2: ( ( rule__FunctionArg__Group_1_0__0 ) )
                    // InternalNabla.g:1222:3: ( rule__FunctionArg__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionArgAccess().getGroup_1_0()); 
                    }
                    // InternalNabla.g:1223:3: ( rule__FunctionArg__Group_1_0__0 )
                    // InternalNabla.g:1223:4: rule__FunctionArg__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FunctionArg__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionArgAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1227:2: ( '\\u2205' )
                    {
                    // InternalNabla.g:1227:2: ( '\\u2205' )
                    // InternalNabla.g:1228:3: '\\u2205'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionArgAccess().getEmptySetKeyword_1_1()); 
                    }
                    match(input,12,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionArgAccess().getEmptySetKeyword_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Alternatives_1"


    // $ANTLR start "rule__Equality__OpAlternatives_1_1_0"
    // InternalNabla.g:1237:1: rule__Equality__OpAlternatives_1_1_0 : ( ( '==' ) | ( '!=' ) );
    public final void rule__Equality__OpAlternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1241:1: ( ( '==' ) | ( '!=' ) )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==13) ) {
                alt12=1;
            }
            else if ( (LA12_0==14) ) {
                alt12=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalNabla.g:1242:2: ( '==' )
                    {
                    // InternalNabla.g:1242:2: ( '==' )
                    // InternalNabla.g:1243:3: '=='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEqualityAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); 
                    }
                    match(input,13,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEqualityAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1248:2: ( '!=' )
                    {
                    // InternalNabla.g:1248:2: ( '!=' )
                    // InternalNabla.g:1249:3: '!='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEqualityAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); 
                    }
                    match(input,14,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEqualityAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__OpAlternatives_1_1_0"


    // $ANTLR start "rule__Comparison__OpAlternatives_1_1_0"
    // InternalNabla.g:1258:1: rule__Comparison__OpAlternatives_1_1_0 : ( ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) );
    public final void rule__Comparison__OpAlternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1262:1: ( ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) )
            int alt13=4;
            switch ( input.LA(1) ) {
            case 15:
                {
                alt13=1;
                }
                break;
            case 16:
                {
                alt13=2;
                }
                break;
            case 17:
                {
                alt13=3;
                }
                break;
            case 18:
                {
                alt13=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }

            switch (alt13) {
                case 1 :
                    // InternalNabla.g:1263:2: ( '>=' )
                    {
                    // InternalNabla.g:1263:2: ( '>=' )
                    // InternalNabla.g:1264:3: '>='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); 
                    }
                    match(input,15,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1269:2: ( '<=' )
                    {
                    // InternalNabla.g:1269:2: ( '<=' )
                    // InternalNabla.g:1270:3: '<='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); 
                    }
                    match(input,16,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNabla.g:1275:2: ( '>' )
                    {
                    // InternalNabla.g:1275:2: ( '>' )
                    // InternalNabla.g:1276:3: '>'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_2()); 
                    }
                    match(input,17,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalNabla.g:1281:2: ( '<' )
                    {
                    // InternalNabla.g:1281:2: ( '<' )
                    // InternalNabla.g:1282:3: '<'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_3()); 
                    }
                    match(input,18,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__OpAlternatives_1_1_0"


    // $ANTLR start "rule__PlusOrMinus__Alternatives_1_0"
    // InternalNabla.g:1291:1: rule__PlusOrMinus__Alternatives_1_0 : ( ( ( rule__PlusOrMinus__Group_1_0_0__0 ) ) | ( ( rule__PlusOrMinus__Group_1_0_1__0 ) ) );
    public final void rule__PlusOrMinus__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1295:1: ( ( ( rule__PlusOrMinus__Group_1_0_0__0 ) ) | ( ( rule__PlusOrMinus__Group_1_0_1__0 ) ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==63) ) {
                alt14=1;
            }
            else if ( (LA14_0==51) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalNabla.g:1296:2: ( ( rule__PlusOrMinus__Group_1_0_0__0 ) )
                    {
                    // InternalNabla.g:1296:2: ( ( rule__PlusOrMinus__Group_1_0_0__0 ) )
                    // InternalNabla.g:1297:3: ( rule__PlusOrMinus__Group_1_0_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_0()); 
                    }
                    // InternalNabla.g:1298:3: ( rule__PlusOrMinus__Group_1_0_0__0 )
                    // InternalNabla.g:1298:4: rule__PlusOrMinus__Group_1_0_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PlusOrMinus__Group_1_0_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1302:2: ( ( rule__PlusOrMinus__Group_1_0_1__0 ) )
                    {
                    // InternalNabla.g:1302:2: ( ( rule__PlusOrMinus__Group_1_0_1__0 ) )
                    // InternalNabla.g:1303:3: ( rule__PlusOrMinus__Group_1_0_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_1()); 
                    }
                    // InternalNabla.g:1304:3: ( rule__PlusOrMinus__Group_1_0_1__0 )
                    // InternalNabla.g:1304:4: rule__PlusOrMinus__Group_1_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PlusOrMinus__Group_1_0_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Alternatives_1_0"


    // $ANTLR start "rule__MulOrDiv__OpAlternatives_1_1_0"
    // InternalNabla.g:1312:1: rule__MulOrDiv__OpAlternatives_1_1_0 : ( ( '*' ) | ( '/' ) );
    public final void rule__MulOrDiv__OpAlternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1316:1: ( ( '*' ) | ( '/' ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==19) ) {
                alt15=1;
            }
            else if ( (LA15_0==20) ) {
                alt15=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalNabla.g:1317:2: ( '*' )
                    {
                    // InternalNabla.g:1317:2: ( '*' )
                    // InternalNabla.g:1318:3: '*'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulOrDivAccess().getOpAsteriskKeyword_1_1_0_0()); 
                    }
                    match(input,19,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulOrDivAccess().getOpAsteriskKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1323:2: ( '/' )
                    {
                    // InternalNabla.g:1323:2: ( '/' )
                    // InternalNabla.g:1324:3: '/'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulOrDivAccess().getOpSolidusKeyword_1_1_0_1()); 
                    }
                    match(input,20,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulOrDivAccess().getOpSolidusKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__OpAlternatives_1_1_0"


    // $ANTLR start "rule__Primary__Alternatives"
    // InternalNabla.g:1333:1: rule__Primary__Alternatives : ( ( ( rule__Primary__Group_0__0 ) ) | ( ( rule__Primary__Group_1__0 ) ) | ( ( rule__Primary__Group_2__0 ) ) | ( ruleAtomic ) );
    public final void rule__Primary__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1337:1: ( ( ( rule__Primary__Group_0__0 ) ) | ( ( rule__Primary__Group_1__0 ) ) | ( ( rule__Primary__Group_2__0 ) ) | ( ruleAtomic ) )
            int alt16=4;
            switch ( input.LA(1) ) {
            case 44:
                {
                alt16=1;
                }
                break;
            case 51:
                {
                alt16=2;
                }
                break;
            case 52:
                {
                alt16=3;
                }
                break;
            case RULE_ID:
            case RULE_INT:
            case RULE_REAL:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 36:
            case 64:
                {
                alt16=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }

            switch (alt16) {
                case 1 :
                    // InternalNabla.g:1338:2: ( ( rule__Primary__Group_0__0 ) )
                    {
                    // InternalNabla.g:1338:2: ( ( rule__Primary__Group_0__0 ) )
                    // InternalNabla.g:1339:3: ( rule__Primary__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryAccess().getGroup_0()); 
                    }
                    // InternalNabla.g:1340:3: ( rule__Primary__Group_0__0 )
                    // InternalNabla.g:1340:4: rule__Primary__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1344:2: ( ( rule__Primary__Group_1__0 ) )
                    {
                    // InternalNabla.g:1344:2: ( ( rule__Primary__Group_1__0 ) )
                    // InternalNabla.g:1345:3: ( rule__Primary__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryAccess().getGroup_1()); 
                    }
                    // InternalNabla.g:1346:3: ( rule__Primary__Group_1__0 )
                    // InternalNabla.g:1346:4: rule__Primary__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNabla.g:1350:2: ( ( rule__Primary__Group_2__0 ) )
                    {
                    // InternalNabla.g:1350:2: ( ( rule__Primary__Group_2__0 ) )
                    // InternalNabla.g:1351:3: ( rule__Primary__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryAccess().getGroup_2()); 
                    }
                    // InternalNabla.g:1352:3: ( rule__Primary__Group_2__0 )
                    // InternalNabla.g:1352:4: rule__Primary__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalNabla.g:1356:2: ( ruleAtomic )
                    {
                    // InternalNabla.g:1356:2: ( ruleAtomic )
                    // InternalNabla.g:1357:3: ruleAtomic
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleAtomic();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Alternatives"


    // $ANTLR start "rule__Atomic__Alternatives"
    // InternalNabla.g:1366:1: rule__Atomic__Alternatives : ( ( ( rule__Atomic__Group_0__0 ) ) | ( ( rule__Atomic__Group_1__0 ) ) | ( ruleReal2Constant ) | ( ruleReal3Constant ) | ( ( rule__Atomic__Group_4__0 ) ) | ( ( rule__Atomic__Group_5__0 ) ) | ( ( rule__Atomic__Group_6__0 ) ) | ( ( rule__Atomic__Group_7__0 ) ) | ( ( rule__Atomic__Group_8__0 ) ) | ( ( rule__Atomic__Group_9__0 ) ) | ( ( rule__Atomic__Group_10__0 ) ) | ( ( rule__Atomic__Group_11__0 ) ) | ( ruleVarRef ) );
    public final void rule__Atomic__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1370:1: ( ( ( rule__Atomic__Group_0__0 ) ) | ( ( rule__Atomic__Group_1__0 ) ) | ( ruleReal2Constant ) | ( ruleReal3Constant ) | ( ( rule__Atomic__Group_4__0 ) ) | ( ( rule__Atomic__Group_5__0 ) ) | ( ( rule__Atomic__Group_6__0 ) ) | ( ( rule__Atomic__Group_7__0 ) ) | ( ( rule__Atomic__Group_8__0 ) ) | ( ( rule__Atomic__Group_9__0 ) ) | ( ( rule__Atomic__Group_10__0 ) ) | ( ( rule__Atomic__Group_11__0 ) ) | ( ruleVarRef ) )
            int alt17=13;
            alt17 = dfa17.predict(input);
            switch (alt17) {
                case 1 :
                    // InternalNabla.g:1371:2: ( ( rule__Atomic__Group_0__0 ) )
                    {
                    // InternalNabla.g:1371:2: ( ( rule__Atomic__Group_0__0 ) )
                    // InternalNabla.g:1372:3: ( rule__Atomic__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getGroup_0()); 
                    }
                    // InternalNabla.g:1373:3: ( rule__Atomic__Group_0__0 )
                    // InternalNabla.g:1373:4: rule__Atomic__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Atomic__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1377:2: ( ( rule__Atomic__Group_1__0 ) )
                    {
                    // InternalNabla.g:1377:2: ( ( rule__Atomic__Group_1__0 ) )
                    // InternalNabla.g:1378:3: ( rule__Atomic__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getGroup_1()); 
                    }
                    // InternalNabla.g:1379:3: ( rule__Atomic__Group_1__0 )
                    // InternalNabla.g:1379:4: rule__Atomic__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Atomic__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNabla.g:1383:2: ( ruleReal2Constant )
                    {
                    // InternalNabla.g:1383:2: ( ruleReal2Constant )
                    // InternalNabla.g:1384:3: ruleReal2Constant
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getReal2ConstantParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleReal2Constant();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getReal2ConstantParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalNabla.g:1389:2: ( ruleReal3Constant )
                    {
                    // InternalNabla.g:1389:2: ( ruleReal3Constant )
                    // InternalNabla.g:1390:3: ruleReal3Constant
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getReal3ConstantParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleReal3Constant();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getReal3ConstantParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalNabla.g:1395:2: ( ( rule__Atomic__Group_4__0 ) )
                    {
                    // InternalNabla.g:1395:2: ( ( rule__Atomic__Group_4__0 ) )
                    // InternalNabla.g:1396:3: ( rule__Atomic__Group_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getGroup_4()); 
                    }
                    // InternalNabla.g:1397:3: ( rule__Atomic__Group_4__0 )
                    // InternalNabla.g:1397:4: rule__Atomic__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Atomic__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getGroup_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalNabla.g:1401:2: ( ( rule__Atomic__Group_5__0 ) )
                    {
                    // InternalNabla.g:1401:2: ( ( rule__Atomic__Group_5__0 ) )
                    // InternalNabla.g:1402:3: ( rule__Atomic__Group_5__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getGroup_5()); 
                    }
                    // InternalNabla.g:1403:3: ( rule__Atomic__Group_5__0 )
                    // InternalNabla.g:1403:4: rule__Atomic__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Atomic__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getGroup_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalNabla.g:1407:2: ( ( rule__Atomic__Group_6__0 ) )
                    {
                    // InternalNabla.g:1407:2: ( ( rule__Atomic__Group_6__0 ) )
                    // InternalNabla.g:1408:3: ( rule__Atomic__Group_6__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getGroup_6()); 
                    }
                    // InternalNabla.g:1409:3: ( rule__Atomic__Group_6__0 )
                    // InternalNabla.g:1409:4: rule__Atomic__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Atomic__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getGroup_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalNabla.g:1413:2: ( ( rule__Atomic__Group_7__0 ) )
                    {
                    // InternalNabla.g:1413:2: ( ( rule__Atomic__Group_7__0 ) )
                    // InternalNabla.g:1414:3: ( rule__Atomic__Group_7__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getGroup_7()); 
                    }
                    // InternalNabla.g:1415:3: ( rule__Atomic__Group_7__0 )
                    // InternalNabla.g:1415:4: rule__Atomic__Group_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Atomic__Group_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getGroup_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalNabla.g:1419:2: ( ( rule__Atomic__Group_8__0 ) )
                    {
                    // InternalNabla.g:1419:2: ( ( rule__Atomic__Group_8__0 ) )
                    // InternalNabla.g:1420:3: ( rule__Atomic__Group_8__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getGroup_8()); 
                    }
                    // InternalNabla.g:1421:3: ( rule__Atomic__Group_8__0 )
                    // InternalNabla.g:1421:4: rule__Atomic__Group_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Atomic__Group_8__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getGroup_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalNabla.g:1425:2: ( ( rule__Atomic__Group_9__0 ) )
                    {
                    // InternalNabla.g:1425:2: ( ( rule__Atomic__Group_9__0 ) )
                    // InternalNabla.g:1426:3: ( rule__Atomic__Group_9__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getGroup_9()); 
                    }
                    // InternalNabla.g:1427:3: ( rule__Atomic__Group_9__0 )
                    // InternalNabla.g:1427:4: rule__Atomic__Group_9__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Atomic__Group_9__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getGroup_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalNabla.g:1431:2: ( ( rule__Atomic__Group_10__0 ) )
                    {
                    // InternalNabla.g:1431:2: ( ( rule__Atomic__Group_10__0 ) )
                    // InternalNabla.g:1432:3: ( rule__Atomic__Group_10__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getGroup_10()); 
                    }
                    // InternalNabla.g:1433:3: ( rule__Atomic__Group_10__0 )
                    // InternalNabla.g:1433:4: rule__Atomic__Group_10__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Atomic__Group_10__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getGroup_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalNabla.g:1437:2: ( ( rule__Atomic__Group_11__0 ) )
                    {
                    // InternalNabla.g:1437:2: ( ( rule__Atomic__Group_11__0 ) )
                    // InternalNabla.g:1438:3: ( rule__Atomic__Group_11__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getGroup_11()); 
                    }
                    // InternalNabla.g:1439:3: ( rule__Atomic__Group_11__0 )
                    // InternalNabla.g:1439:4: rule__Atomic__Group_11__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Atomic__Group_11__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getGroup_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalNabla.g:1443:2: ( ruleVarRef )
                    {
                    // InternalNabla.g:1443:2: ( ruleVarRef )
                    // InternalNabla.g:1444:3: ruleVarRef
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getVarRefParserRuleCall_12()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleVarRef();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getVarRefParserRuleCall_12()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Alternatives"


    // $ANTLR start "rule__Atomic__Alternatives_4_1"
    // InternalNabla.g:1453:1: rule__Atomic__Alternatives_4_1 : ( ( ( rule__Atomic__ValueAssignment_4_1_0 ) ) | ( 'false' ) );
    public final void rule__Atomic__Alternatives_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1457:1: ( ( ( rule__Atomic__ValueAssignment_4_1_0 ) ) | ( 'false' ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==64) ) {
                alt18=1;
            }
            else if ( (LA18_0==21) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalNabla.g:1458:2: ( ( rule__Atomic__ValueAssignment_4_1_0 ) )
                    {
                    // InternalNabla.g:1458:2: ( ( rule__Atomic__ValueAssignment_4_1_0 ) )
                    // InternalNabla.g:1459:3: ( rule__Atomic__ValueAssignment_4_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getValueAssignment_4_1_0()); 
                    }
                    // InternalNabla.g:1460:3: ( rule__Atomic__ValueAssignment_4_1_0 )
                    // InternalNabla.g:1460:4: rule__Atomic__ValueAssignment_4_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Atomic__ValueAssignment_4_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getValueAssignment_4_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1464:2: ( 'false' )
                    {
                    // InternalNabla.g:1464:2: ( 'false' )
                    // InternalNabla.g:1465:3: 'false'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getFalseKeyword_4_1_1()); 
                    }
                    match(input,21,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getFalseKeyword_4_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Alternatives_4_1"


    // $ANTLR start "rule__IteratorRangeOrRef__Alternatives"
    // InternalNabla.g:1474:1: rule__IteratorRangeOrRef__Alternatives : ( ( ruleSpaceIteratorRange ) | ( ruleSpaceIteratorRef ) );
    public final void rule__IteratorRangeOrRef__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1478:1: ( ( ruleSpaceIteratorRange ) | ( ruleSpaceIteratorRef ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==RULE_ID) ) {
                int LA19_1 = input.LA(2);

                if ( (LA19_1==44) ) {
                    alt19=1;
                }
                else if ( (LA19_1==EOF||LA19_1==37||LA19_1==41) ) {
                    alt19=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 19, 1, input);

                    throw nvae;
                }
            }
            else if ( ((LA19_0>=58 && LA19_0<=59)) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalNabla.g:1479:2: ( ruleSpaceIteratorRange )
                    {
                    // InternalNabla.g:1479:2: ( ruleSpaceIteratorRange )
                    // InternalNabla.g:1480:3: ruleSpaceIteratorRange
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIteratorRangeOrRefAccess().getSpaceIteratorRangeParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSpaceIteratorRange();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIteratorRangeOrRefAccess().getSpaceIteratorRangeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1485:2: ( ruleSpaceIteratorRef )
                    {
                    // InternalNabla.g:1485:2: ( ruleSpaceIteratorRef )
                    // InternalNabla.g:1486:3: ruleSpaceIteratorRef
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIteratorRangeOrRefAccess().getSpaceIteratorRefParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSpaceIteratorRef();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIteratorRangeOrRefAccess().getSpaceIteratorRefParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IteratorRangeOrRef__Alternatives"


    // $ANTLR start "rule__TimeIteratorRef__Alternatives_1_0"
    // InternalNabla.g:1495:1: rule__TimeIteratorRef__Alternatives_1_0 : ( ( ( rule__TimeIteratorRef__InitAssignment_1_0_0 ) ) | ( ( rule__TimeIteratorRef__NextAssignment_1_0_1 ) ) );
    public final void rule__TimeIteratorRef__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1499:1: ( ( ( rule__TimeIteratorRef__InitAssignment_1_0_0 ) ) | ( ( rule__TimeIteratorRef__NextAssignment_1_0_1 ) ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==42) ) {
                alt20=1;
            }
            else if ( (LA20_0==63) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalNabla.g:1500:2: ( ( rule__TimeIteratorRef__InitAssignment_1_0_0 ) )
                    {
                    // InternalNabla.g:1500:2: ( ( rule__TimeIteratorRef__InitAssignment_1_0_0 ) )
                    // InternalNabla.g:1501:3: ( rule__TimeIteratorRef__InitAssignment_1_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeIteratorRefAccess().getInitAssignment_1_0_0()); 
                    }
                    // InternalNabla.g:1502:3: ( rule__TimeIteratorRef__InitAssignment_1_0_0 )
                    // InternalNabla.g:1502:4: rule__TimeIteratorRef__InitAssignment_1_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TimeIteratorRef__InitAssignment_1_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeIteratorRefAccess().getInitAssignment_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1506:2: ( ( rule__TimeIteratorRef__NextAssignment_1_0_1 ) )
                    {
                    // InternalNabla.g:1506:2: ( ( rule__TimeIteratorRef__NextAssignment_1_0_1 ) )
                    // InternalNabla.g:1507:3: ( rule__TimeIteratorRef__NextAssignment_1_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeIteratorRefAccess().getNextAssignment_1_0_1()); 
                    }
                    // InternalNabla.g:1508:3: ( rule__TimeIteratorRef__NextAssignment_1_0_1 )
                    // InternalNabla.g:1508:4: rule__TimeIteratorRef__NextAssignment_1_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TimeIteratorRef__NextAssignment_1_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeIteratorRefAccess().getNextAssignment_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIteratorRef__Alternatives_1_0"


    // $ANTLR start "rule__BasicType__Alternatives"
    // InternalNabla.g:1516:1: rule__BasicType__Alternatives : ( ( ( '\\u2115' ) ) | ( ( '\\u211D' ) ) | ( ( '\\u211D\\u00B2' ) ) | ( ( '\\u211D\\u00B2\\u02E3\\u00B2' ) ) | ( ( '\\u211D\\u00B3' ) ) | ( ( '\\u211D\\u00B3\\u02E3\\u00B3' ) ) | ( ( '\\u213E' ) ) );
    public final void rule__BasicType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1520:1: ( ( ( '\\u2115' ) ) | ( ( '\\u211D' ) ) | ( ( '\\u211D\\u00B2' ) ) | ( ( '\\u211D\\u00B2\\u02E3\\u00B2' ) ) | ( ( '\\u211D\\u00B3' ) ) | ( ( '\\u211D\\u00B3\\u02E3\\u00B3' ) ) | ( ( '\\u213E' ) ) )
            int alt21=7;
            switch ( input.LA(1) ) {
            case 22:
                {
                alt21=1;
                }
                break;
            case 23:
                {
                alt21=2;
                }
                break;
            case 24:
                {
                alt21=3;
                }
                break;
            case 25:
                {
                alt21=4;
                }
                break;
            case 26:
                {
                alt21=5;
                }
                break;
            case 27:
                {
                alt21=6;
                }
                break;
            case 28:
                {
                alt21=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }

            switch (alt21) {
                case 1 :
                    // InternalNabla.g:1521:2: ( ( '\\u2115' ) )
                    {
                    // InternalNabla.g:1521:2: ( ( '\\u2115' ) )
                    // InternalNabla.g:1522:3: ( '\\u2115' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBasicTypeAccess().getIntEnumLiteralDeclaration_0()); 
                    }
                    // InternalNabla.g:1523:3: ( '\\u2115' )
                    // InternalNabla.g:1523:4: '\\u2115'
                    {
                    match(input,22,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBasicTypeAccess().getIntEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1527:2: ( ( '\\u211D' ) )
                    {
                    // InternalNabla.g:1527:2: ( ( '\\u211D' ) )
                    // InternalNabla.g:1528:3: ( '\\u211D' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBasicTypeAccess().getRealEnumLiteralDeclaration_1()); 
                    }
                    // InternalNabla.g:1529:3: ( '\\u211D' )
                    // InternalNabla.g:1529:4: '\\u211D'
                    {
                    match(input,23,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBasicTypeAccess().getRealEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNabla.g:1533:2: ( ( '\\u211D\\u00B2' ) )
                    {
                    // InternalNabla.g:1533:2: ( ( '\\u211D\\u00B2' ) )
                    // InternalNabla.g:1534:3: ( '\\u211D\\u00B2' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBasicTypeAccess().getReal2EnumLiteralDeclaration_2()); 
                    }
                    // InternalNabla.g:1535:3: ( '\\u211D\\u00B2' )
                    // InternalNabla.g:1535:4: '\\u211D\\u00B2'
                    {
                    match(input,24,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBasicTypeAccess().getReal2EnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalNabla.g:1539:2: ( ( '\\u211D\\u00B2\\u02E3\\u00B2' ) )
                    {
                    // InternalNabla.g:1539:2: ( ( '\\u211D\\u00B2\\u02E3\\u00B2' ) )
                    // InternalNabla.g:1540:3: ( '\\u211D\\u00B2\\u02E3\\u00B2' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBasicTypeAccess().getReal2x2EnumLiteralDeclaration_3()); 
                    }
                    // InternalNabla.g:1541:3: ( '\\u211D\\u00B2\\u02E3\\u00B2' )
                    // InternalNabla.g:1541:4: '\\u211D\\u00B2\\u02E3\\u00B2'
                    {
                    match(input,25,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBasicTypeAccess().getReal2x2EnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalNabla.g:1545:2: ( ( '\\u211D\\u00B3' ) )
                    {
                    // InternalNabla.g:1545:2: ( ( '\\u211D\\u00B3' ) )
                    // InternalNabla.g:1546:3: ( '\\u211D\\u00B3' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBasicTypeAccess().getReal3EnumLiteralDeclaration_4()); 
                    }
                    // InternalNabla.g:1547:3: ( '\\u211D\\u00B3' )
                    // InternalNabla.g:1547:4: '\\u211D\\u00B3'
                    {
                    match(input,26,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBasicTypeAccess().getReal3EnumLiteralDeclaration_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalNabla.g:1551:2: ( ( '\\u211D\\u00B3\\u02E3\\u00B3' ) )
                    {
                    // InternalNabla.g:1551:2: ( ( '\\u211D\\u00B3\\u02E3\\u00B3' ) )
                    // InternalNabla.g:1552:3: ( '\\u211D\\u00B3\\u02E3\\u00B3' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBasicTypeAccess().getReal3x3EnumLiteralDeclaration_5()); 
                    }
                    // InternalNabla.g:1553:3: ( '\\u211D\\u00B3\\u02E3\\u00B3' )
                    // InternalNabla.g:1553:4: '\\u211D\\u00B3\\u02E3\\u00B3'
                    {
                    match(input,27,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBasicTypeAccess().getReal3x3EnumLiteralDeclaration_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalNabla.g:1557:2: ( ( '\\u213E' ) )
                    {
                    // InternalNabla.g:1557:2: ( ( '\\u213E' ) )
                    // InternalNabla.g:1558:3: ( '\\u213E' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBasicTypeAccess().getBoolEnumLiteralDeclaration_6()); 
                    }
                    // InternalNabla.g:1559:3: ( '\\u213E' )
                    // InternalNabla.g:1559:4: '\\u213E'
                    {
                    match(input,28,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBasicTypeAccess().getBoolEnumLiteralDeclaration_6()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BasicType__Alternatives"


    // $ANTLR start "rule__ItemType__Alternatives"
    // InternalNabla.g:1567:1: rule__ItemType__Alternatives : ( ( ( 'node' ) ) | ( ( 'cell' ) ) | ( ( 'face' ) ) );
    public final void rule__ItemType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1571:1: ( ( ( 'node' ) ) | ( ( 'cell' ) ) | ( ( 'face' ) ) )
            int alt22=3;
            switch ( input.LA(1) ) {
            case 29:
                {
                alt22=1;
                }
                break;
            case 30:
                {
                alt22=2;
                }
                break;
            case 31:
                {
                alt22=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // InternalNabla.g:1572:2: ( ( 'node' ) )
                    {
                    // InternalNabla.g:1572:2: ( ( 'node' ) )
                    // InternalNabla.g:1573:3: ( 'node' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItemTypeAccess().getNodeEnumLiteralDeclaration_0()); 
                    }
                    // InternalNabla.g:1574:3: ( 'node' )
                    // InternalNabla.g:1574:4: 'node'
                    {
                    match(input,29,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItemTypeAccess().getNodeEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1578:2: ( ( 'cell' ) )
                    {
                    // InternalNabla.g:1578:2: ( ( 'cell' ) )
                    // InternalNabla.g:1579:3: ( 'cell' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItemTypeAccess().getCellEnumLiteralDeclaration_1()); 
                    }
                    // InternalNabla.g:1580:3: ( 'cell' )
                    // InternalNabla.g:1580:4: 'cell'
                    {
                    match(input,30,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItemTypeAccess().getCellEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNabla.g:1584:2: ( ( 'face' ) )
                    {
                    // InternalNabla.g:1584:2: ( ( 'face' ) )
                    // InternalNabla.g:1585:3: ( 'face' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItemTypeAccess().getFaceEnumLiteralDeclaration_2()); 
                    }
                    // InternalNabla.g:1586:3: ( 'face' )
                    // InternalNabla.g:1586:4: 'face'
                    {
                    match(input,31,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItemTypeAccess().getFaceEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItemType__Alternatives"


    // $ANTLR start "rule__NablaModule__Group__0"
    // InternalNabla.g:1594:1: rule__NablaModule__Group__0 : rule__NablaModule__Group__0__Impl rule__NablaModule__Group__1 ;
    public final void rule__NablaModule__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1598:1: ( rule__NablaModule__Group__0__Impl rule__NablaModule__Group__1 )
            // InternalNabla.g:1599:2: rule__NablaModule__Group__0__Impl rule__NablaModule__Group__1
            {
            pushFollow(FOLLOW_3);
            rule__NablaModule__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__NablaModule__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__Group__0"


    // $ANTLR start "rule__NablaModule__Group__0__Impl"
    // InternalNabla.g:1606:1: rule__NablaModule__Group__0__Impl : ( 'module' ) ;
    public final void rule__NablaModule__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1610:1: ( ( 'module' ) )
            // InternalNabla.g:1611:1: ( 'module' )
            {
            // InternalNabla.g:1611:1: ( 'module' )
            // InternalNabla.g:1612:2: 'module'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNablaModuleAccess().getModuleKeyword_0()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNablaModuleAccess().getModuleKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__Group__0__Impl"


    // $ANTLR start "rule__NablaModule__Group__1"
    // InternalNabla.g:1621:1: rule__NablaModule__Group__1 : rule__NablaModule__Group__1__Impl rule__NablaModule__Group__2 ;
    public final void rule__NablaModule__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1625:1: ( rule__NablaModule__Group__1__Impl rule__NablaModule__Group__2 )
            // InternalNabla.g:1626:2: rule__NablaModule__Group__1__Impl rule__NablaModule__Group__2
            {
            pushFollow(FOLLOW_4);
            rule__NablaModule__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__NablaModule__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__Group__1"


    // $ANTLR start "rule__NablaModule__Group__1__Impl"
    // InternalNabla.g:1633:1: rule__NablaModule__Group__1__Impl : ( ( rule__NablaModule__NameAssignment_1 ) ) ;
    public final void rule__NablaModule__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1637:1: ( ( ( rule__NablaModule__NameAssignment_1 ) ) )
            // InternalNabla.g:1638:1: ( ( rule__NablaModule__NameAssignment_1 ) )
            {
            // InternalNabla.g:1638:1: ( ( rule__NablaModule__NameAssignment_1 ) )
            // InternalNabla.g:1639:2: ( rule__NablaModule__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNablaModuleAccess().getNameAssignment_1()); 
            }
            // InternalNabla.g:1640:2: ( rule__NablaModule__NameAssignment_1 )
            // InternalNabla.g:1640:3: rule__NablaModule__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__NablaModule__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNablaModuleAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__Group__1__Impl"


    // $ANTLR start "rule__NablaModule__Group__2"
    // InternalNabla.g:1648:1: rule__NablaModule__Group__2 : rule__NablaModule__Group__2__Impl rule__NablaModule__Group__3 ;
    public final void rule__NablaModule__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1652:1: ( rule__NablaModule__Group__2__Impl rule__NablaModule__Group__3 )
            // InternalNabla.g:1653:2: rule__NablaModule__Group__2__Impl rule__NablaModule__Group__3
            {
            pushFollow(FOLLOW_5);
            rule__NablaModule__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__NablaModule__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__Group__2"


    // $ANTLR start "rule__NablaModule__Group__2__Impl"
    // InternalNabla.g:1660:1: rule__NablaModule__Group__2__Impl : ( ';' ) ;
    public final void rule__NablaModule__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1664:1: ( ( ';' ) )
            // InternalNabla.g:1665:1: ( ';' )
            {
            // InternalNabla.g:1665:1: ( ';' )
            // InternalNabla.g:1666:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNablaModuleAccess().getSemicolonKeyword_2()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNablaModuleAccess().getSemicolonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__Group__2__Impl"


    // $ANTLR start "rule__NablaModule__Group__3"
    // InternalNabla.g:1675:1: rule__NablaModule__Group__3 : rule__NablaModule__Group__3__Impl rule__NablaModule__Group__4 ;
    public final void rule__NablaModule__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1679:1: ( rule__NablaModule__Group__3__Impl rule__NablaModule__Group__4 )
            // InternalNabla.g:1680:2: rule__NablaModule__Group__3__Impl rule__NablaModule__Group__4
            {
            pushFollow(FOLLOW_5);
            rule__NablaModule__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__NablaModule__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__Group__3"


    // $ANTLR start "rule__NablaModule__Group__3__Impl"
    // InternalNabla.g:1687:1: rule__NablaModule__Group__3__Impl : ( ( rule__NablaModule__ImportsAssignment_3 )* ) ;
    public final void rule__NablaModule__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1691:1: ( ( ( rule__NablaModule__ImportsAssignment_3 )* ) )
            // InternalNabla.g:1692:1: ( ( rule__NablaModule__ImportsAssignment_3 )* )
            {
            // InternalNabla.g:1692:1: ( ( rule__NablaModule__ImportsAssignment_3 )* )
            // InternalNabla.g:1693:2: ( rule__NablaModule__ImportsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNablaModuleAccess().getImportsAssignment_3()); 
            }
            // InternalNabla.g:1694:2: ( rule__NablaModule__ImportsAssignment_3 )*
            loop23:
            do {
                int alt23=2;
                int LA23_0 = input.LA(1);

                if ( (LA23_0==34) ) {
                    alt23=1;
                }


                switch (alt23) {
            	case 1 :
            	    // InternalNabla.g:1694:3: rule__NablaModule__ImportsAssignment_3
            	    {
            	    pushFollow(FOLLOW_6);
            	    rule__NablaModule__ImportsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop23;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNablaModuleAccess().getImportsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__Group__3__Impl"


    // $ANTLR start "rule__NablaModule__Group__4"
    // InternalNabla.g:1702:1: rule__NablaModule__Group__4 : rule__NablaModule__Group__4__Impl rule__NablaModule__Group__5 ;
    public final void rule__NablaModule__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1706:1: ( rule__NablaModule__Group__4__Impl rule__NablaModule__Group__5 )
            // InternalNabla.g:1707:2: rule__NablaModule__Group__4__Impl rule__NablaModule__Group__5
            {
            pushFollow(FOLLOW_5);
            rule__NablaModule__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__NablaModule__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__Group__4"


    // $ANTLR start "rule__NablaModule__Group__4__Impl"
    // InternalNabla.g:1714:1: rule__NablaModule__Group__4__Impl : ( ( rule__NablaModule__BlocksAssignment_4 )* ) ;
    public final void rule__NablaModule__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1718:1: ( ( ( rule__NablaModule__BlocksAssignment_4 )* ) )
            // InternalNabla.g:1719:1: ( ( rule__NablaModule__BlocksAssignment_4 )* )
            {
            // InternalNabla.g:1719:1: ( ( rule__NablaModule__BlocksAssignment_4 )* )
            // InternalNabla.g:1720:2: ( rule__NablaModule__BlocksAssignment_4 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNablaModuleAccess().getBlocksAssignment_4()); 
            }
            // InternalNabla.g:1721:2: ( rule__NablaModule__BlocksAssignment_4 )*
            loop24:
            do {
                int alt24=2;
                int LA24_0 = input.LA(1);

                if ( (LA24_0==35||LA24_0==38) ) {
                    alt24=1;
                }


                switch (alt24) {
            	case 1 :
            	    // InternalNabla.g:1721:3: rule__NablaModule__BlocksAssignment_4
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__NablaModule__BlocksAssignment_4();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop24;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNablaModuleAccess().getBlocksAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__Group__4__Impl"


    // $ANTLR start "rule__NablaModule__Group__5"
    // InternalNabla.g:1729:1: rule__NablaModule__Group__5 : rule__NablaModule__Group__5__Impl rule__NablaModule__Group__6 ;
    public final void rule__NablaModule__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1733:1: ( rule__NablaModule__Group__5__Impl rule__NablaModule__Group__6 )
            // InternalNabla.g:1734:2: rule__NablaModule__Group__5__Impl rule__NablaModule__Group__6
            {
            pushFollow(FOLLOW_5);
            rule__NablaModule__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__NablaModule__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__Group__5"


    // $ANTLR start "rule__NablaModule__Group__5__Impl"
    // InternalNabla.g:1741:1: rule__NablaModule__Group__5__Impl : ( ( rule__NablaModule__VariablesAssignment_5 )* ) ;
    public final void rule__NablaModule__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1745:1: ( ( ( rule__NablaModule__VariablesAssignment_5 )* ) )
            // InternalNabla.g:1746:1: ( ( rule__NablaModule__VariablesAssignment_5 )* )
            {
            // InternalNabla.g:1746:1: ( ( rule__NablaModule__VariablesAssignment_5 )* )
            // InternalNabla.g:1747:2: ( rule__NablaModule__VariablesAssignment_5 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNablaModuleAccess().getVariablesAssignment_5()); 
            }
            // InternalNabla.g:1748:2: ( rule__NablaModule__VariablesAssignment_5 )*
            loop25:
            do {
                int alt25=2;
                int LA25_0 = input.LA(1);

                if ( ((LA25_0>=22 && LA25_0<=28)||LA25_0==60) ) {
                    alt25=1;
                }


                switch (alt25) {
            	case 1 :
            	    // InternalNabla.g:1748:3: rule__NablaModule__VariablesAssignment_5
            	    {
            	    pushFollow(FOLLOW_8);
            	    rule__NablaModule__VariablesAssignment_5();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop25;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNablaModuleAccess().getVariablesAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__Group__5__Impl"


    // $ANTLR start "rule__NablaModule__Group__6"
    // InternalNabla.g:1756:1: rule__NablaModule__Group__6 : rule__NablaModule__Group__6__Impl ;
    public final void rule__NablaModule__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1760:1: ( rule__NablaModule__Group__6__Impl )
            // InternalNabla.g:1761:2: rule__NablaModule__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NablaModule__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__Group__6"


    // $ANTLR start "rule__NablaModule__Group__6__Impl"
    // InternalNabla.g:1767:1: rule__NablaModule__Group__6__Impl : ( ( rule__NablaModule__JobsAssignment_6 )* ) ;
    public final void rule__NablaModule__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1771:1: ( ( ( rule__NablaModule__JobsAssignment_6 )* ) )
            // InternalNabla.g:1772:1: ( ( rule__NablaModule__JobsAssignment_6 )* )
            {
            // InternalNabla.g:1772:1: ( ( rule__NablaModule__JobsAssignment_6 )* )
            // InternalNabla.g:1773:2: ( rule__NablaModule__JobsAssignment_6 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNablaModuleAccess().getJobsAssignment_6()); 
            }
            // InternalNabla.g:1774:2: ( rule__NablaModule__JobsAssignment_6 )*
            loop26:
            do {
                int alt26=2;
                int LA26_0 = input.LA(1);

                if ( (LA26_0==RULE_ID) ) {
                    alt26=1;
                }


                switch (alt26) {
            	case 1 :
            	    // InternalNabla.g:1774:3: rule__NablaModule__JobsAssignment_6
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__NablaModule__JobsAssignment_6();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop26;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNablaModuleAccess().getJobsAssignment_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__Group__6__Impl"


    // $ANTLR start "rule__Import__Group__0"
    // InternalNabla.g:1783:1: rule__Import__Group__0 : rule__Import__Group__0__Impl rule__Import__Group__1 ;
    public final void rule__Import__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1787:1: ( rule__Import__Group__0__Impl rule__Import__Group__1 )
            // InternalNabla.g:1788:2: rule__Import__Group__0__Impl rule__Import__Group__1
            {
            pushFollow(FOLLOW_3);
            rule__Import__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Import__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group__0"


    // $ANTLR start "rule__Import__Group__0__Impl"
    // InternalNabla.g:1795:1: rule__Import__Group__0__Impl : ( 'with' ) ;
    public final void rule__Import__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1799:1: ( ( 'with' ) )
            // InternalNabla.g:1800:1: ( 'with' )
            {
            // InternalNabla.g:1800:1: ( 'with' )
            // InternalNabla.g:1801:2: 'with'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportAccess().getWithKeyword_0()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportAccess().getWithKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group__0__Impl"


    // $ANTLR start "rule__Import__Group__1"
    // InternalNabla.g:1810:1: rule__Import__Group__1 : rule__Import__Group__1__Impl rule__Import__Group__2 ;
    public final void rule__Import__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1814:1: ( rule__Import__Group__1__Impl rule__Import__Group__2 )
            // InternalNabla.g:1815:2: rule__Import__Group__1__Impl rule__Import__Group__2
            {
            pushFollow(FOLLOW_4);
            rule__Import__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Import__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group__1"


    // $ANTLR start "rule__Import__Group__1__Impl"
    // InternalNabla.g:1822:1: rule__Import__Group__1__Impl : ( ( rule__Import__ImportedNamespaceAssignment_1 ) ) ;
    public final void rule__Import__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1826:1: ( ( ( rule__Import__ImportedNamespaceAssignment_1 ) ) )
            // InternalNabla.g:1827:1: ( ( rule__Import__ImportedNamespaceAssignment_1 ) )
            {
            // InternalNabla.g:1827:1: ( ( rule__Import__ImportedNamespaceAssignment_1 ) )
            // InternalNabla.g:1828:2: ( rule__Import__ImportedNamespaceAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); 
            }
            // InternalNabla.g:1829:2: ( rule__Import__ImportedNamespaceAssignment_1 )
            // InternalNabla.g:1829:3: rule__Import__ImportedNamespaceAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Import__ImportedNamespaceAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group__1__Impl"


    // $ANTLR start "rule__Import__Group__2"
    // InternalNabla.g:1837:1: rule__Import__Group__2 : rule__Import__Group__2__Impl ;
    public final void rule__Import__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1841:1: ( rule__Import__Group__2__Impl )
            // InternalNabla.g:1842:2: rule__Import__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Import__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group__2"


    // $ANTLR start "rule__Import__Group__2__Impl"
    // InternalNabla.g:1848:1: rule__Import__Group__2__Impl : ( ';' ) ;
    public final void rule__Import__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1852:1: ( ( ';' ) )
            // InternalNabla.g:1853:1: ( ';' )
            {
            // InternalNabla.g:1853:1: ( ';' )
            // InternalNabla.g:1854:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportAccess().getSemicolonKeyword_2()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportAccess().getSemicolonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group__2__Impl"


    // $ANTLR start "rule__DeclarationBlock__Group_0__0"
    // InternalNabla.g:1864:1: rule__DeclarationBlock__Group_0__0 : rule__DeclarationBlock__Group_0__0__Impl rule__DeclarationBlock__Group_0__1 ;
    public final void rule__DeclarationBlock__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1868:1: ( rule__DeclarationBlock__Group_0__0__Impl rule__DeclarationBlock__Group_0__1 )
            // InternalNabla.g:1869:2: rule__DeclarationBlock__Group_0__0__Impl rule__DeclarationBlock__Group_0__1
            {
            pushFollow(FOLLOW_10);
            rule__DeclarationBlock__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DeclarationBlock__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_0__0"


    // $ANTLR start "rule__DeclarationBlock__Group_0__0__Impl"
    // InternalNabla.g:1876:1: rule__DeclarationBlock__Group_0__0__Impl : ( () ) ;
    public final void rule__DeclarationBlock__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1880:1: ( ( () ) )
            // InternalNabla.g:1881:1: ( () )
            {
            // InternalNabla.g:1881:1: ( () )
            // InternalNabla.g:1882:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationBlockAccess().getConnectivityDeclarationBlockAction_0_0()); 
            }
            // InternalNabla.g:1883:2: ()
            // InternalNabla.g:1883:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationBlockAccess().getConnectivityDeclarationBlockAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_0__0__Impl"


    // $ANTLR start "rule__DeclarationBlock__Group_0__1"
    // InternalNabla.g:1891:1: rule__DeclarationBlock__Group_0__1 : rule__DeclarationBlock__Group_0__1__Impl rule__DeclarationBlock__Group_0__2 ;
    public final void rule__DeclarationBlock__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1895:1: ( rule__DeclarationBlock__Group_0__1__Impl rule__DeclarationBlock__Group_0__2 )
            // InternalNabla.g:1896:2: rule__DeclarationBlock__Group_0__1__Impl rule__DeclarationBlock__Group_0__2
            {
            pushFollow(FOLLOW_11);
            rule__DeclarationBlock__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DeclarationBlock__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_0__1"


    // $ANTLR start "rule__DeclarationBlock__Group_0__1__Impl"
    // InternalNabla.g:1903:1: rule__DeclarationBlock__Group_0__1__Impl : ( 'connectivities' ) ;
    public final void rule__DeclarationBlock__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1907:1: ( ( 'connectivities' ) )
            // InternalNabla.g:1908:1: ( 'connectivities' )
            {
            // InternalNabla.g:1908:1: ( 'connectivities' )
            // InternalNabla.g:1909:2: 'connectivities'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationBlockAccess().getConnectivitiesKeyword_0_1()); 
            }
            match(input,35,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationBlockAccess().getConnectivitiesKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_0__1__Impl"


    // $ANTLR start "rule__DeclarationBlock__Group_0__2"
    // InternalNabla.g:1918:1: rule__DeclarationBlock__Group_0__2 : rule__DeclarationBlock__Group_0__2__Impl rule__DeclarationBlock__Group_0__3 ;
    public final void rule__DeclarationBlock__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1922:1: ( rule__DeclarationBlock__Group_0__2__Impl rule__DeclarationBlock__Group_0__3 )
            // InternalNabla.g:1923:2: rule__DeclarationBlock__Group_0__2__Impl rule__DeclarationBlock__Group_0__3
            {
            pushFollow(FOLLOW_12);
            rule__DeclarationBlock__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DeclarationBlock__Group_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_0__2"


    // $ANTLR start "rule__DeclarationBlock__Group_0__2__Impl"
    // InternalNabla.g:1930:1: rule__DeclarationBlock__Group_0__2__Impl : ( '{' ) ;
    public final void rule__DeclarationBlock__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1934:1: ( ( '{' ) )
            // InternalNabla.g:1935:1: ( '{' )
            {
            // InternalNabla.g:1935:1: ( '{' )
            // InternalNabla.g:1936:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationBlockAccess().getLeftCurlyBracketKeyword_0_2()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationBlockAccess().getLeftCurlyBracketKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_0__2__Impl"


    // $ANTLR start "rule__DeclarationBlock__Group_0__3"
    // InternalNabla.g:1945:1: rule__DeclarationBlock__Group_0__3 : rule__DeclarationBlock__Group_0__3__Impl rule__DeclarationBlock__Group_0__4 ;
    public final void rule__DeclarationBlock__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1949:1: ( rule__DeclarationBlock__Group_0__3__Impl rule__DeclarationBlock__Group_0__4 )
            // InternalNabla.g:1950:2: rule__DeclarationBlock__Group_0__3__Impl rule__DeclarationBlock__Group_0__4
            {
            pushFollow(FOLLOW_12);
            rule__DeclarationBlock__Group_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DeclarationBlock__Group_0__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_0__3"


    // $ANTLR start "rule__DeclarationBlock__Group_0__3__Impl"
    // InternalNabla.g:1957:1: rule__DeclarationBlock__Group_0__3__Impl : ( ( rule__DeclarationBlock__ConnectivitiesAssignment_0_3 )* ) ;
    public final void rule__DeclarationBlock__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1961:1: ( ( ( rule__DeclarationBlock__ConnectivitiesAssignment_0_3 )* ) )
            // InternalNabla.g:1962:1: ( ( rule__DeclarationBlock__ConnectivitiesAssignment_0_3 )* )
            {
            // InternalNabla.g:1962:1: ( ( rule__DeclarationBlock__ConnectivitiesAssignment_0_3 )* )
            // InternalNabla.g:1963:2: ( rule__DeclarationBlock__ConnectivitiesAssignment_0_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationBlockAccess().getConnectivitiesAssignment_0_3()); 
            }
            // InternalNabla.g:1964:2: ( rule__DeclarationBlock__ConnectivitiesAssignment_0_3 )*
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( (LA27_0==RULE_ID) ) {
                    alt27=1;
                }


                switch (alt27) {
            	case 1 :
            	    // InternalNabla.g:1964:3: rule__DeclarationBlock__ConnectivitiesAssignment_0_3
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__DeclarationBlock__ConnectivitiesAssignment_0_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationBlockAccess().getConnectivitiesAssignment_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_0__3__Impl"


    // $ANTLR start "rule__DeclarationBlock__Group_0__4"
    // InternalNabla.g:1972:1: rule__DeclarationBlock__Group_0__4 : rule__DeclarationBlock__Group_0__4__Impl ;
    public final void rule__DeclarationBlock__Group_0__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1976:1: ( rule__DeclarationBlock__Group_0__4__Impl )
            // InternalNabla.g:1977:2: rule__DeclarationBlock__Group_0__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DeclarationBlock__Group_0__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_0__4"


    // $ANTLR start "rule__DeclarationBlock__Group_0__4__Impl"
    // InternalNabla.g:1983:1: rule__DeclarationBlock__Group_0__4__Impl : ( '}' ) ;
    public final void rule__DeclarationBlock__Group_0__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1987:1: ( ( '}' ) )
            // InternalNabla.g:1988:1: ( '}' )
            {
            // InternalNabla.g:1988:1: ( '}' )
            // InternalNabla.g:1989:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationBlockAccess().getRightCurlyBracketKeyword_0_4()); 
            }
            match(input,37,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationBlockAccess().getRightCurlyBracketKeyword_0_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_0__4__Impl"


    // $ANTLR start "rule__DeclarationBlock__Group_1__0"
    // InternalNabla.g:1999:1: rule__DeclarationBlock__Group_1__0 : rule__DeclarationBlock__Group_1__0__Impl rule__DeclarationBlock__Group_1__1 ;
    public final void rule__DeclarationBlock__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2003:1: ( rule__DeclarationBlock__Group_1__0__Impl rule__DeclarationBlock__Group_1__1 )
            // InternalNabla.g:2004:2: rule__DeclarationBlock__Group_1__0__Impl rule__DeclarationBlock__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__DeclarationBlock__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DeclarationBlock__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_1__0"


    // $ANTLR start "rule__DeclarationBlock__Group_1__0__Impl"
    // InternalNabla.g:2011:1: rule__DeclarationBlock__Group_1__0__Impl : ( () ) ;
    public final void rule__DeclarationBlock__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2015:1: ( ( () ) )
            // InternalNabla.g:2016:1: ( () )
            {
            // InternalNabla.g:2016:1: ( () )
            // InternalNabla.g:2017:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationBlockAccess().getFunctionDeclarationBlockAction_1_0()); 
            }
            // InternalNabla.g:2018:2: ()
            // InternalNabla.g:2018:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationBlockAccess().getFunctionDeclarationBlockAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_1__0__Impl"


    // $ANTLR start "rule__DeclarationBlock__Group_1__1"
    // InternalNabla.g:2026:1: rule__DeclarationBlock__Group_1__1 : rule__DeclarationBlock__Group_1__1__Impl rule__DeclarationBlock__Group_1__2 ;
    public final void rule__DeclarationBlock__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2030:1: ( rule__DeclarationBlock__Group_1__1__Impl rule__DeclarationBlock__Group_1__2 )
            // InternalNabla.g:2031:2: rule__DeclarationBlock__Group_1__1__Impl rule__DeclarationBlock__Group_1__2
            {
            pushFollow(FOLLOW_11);
            rule__DeclarationBlock__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DeclarationBlock__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_1__1"


    // $ANTLR start "rule__DeclarationBlock__Group_1__1__Impl"
    // InternalNabla.g:2038:1: rule__DeclarationBlock__Group_1__1__Impl : ( 'functions' ) ;
    public final void rule__DeclarationBlock__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2042:1: ( ( 'functions' ) )
            // InternalNabla.g:2043:1: ( 'functions' )
            {
            // InternalNabla.g:2043:1: ( 'functions' )
            // InternalNabla.g:2044:2: 'functions'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationBlockAccess().getFunctionsKeyword_1_1()); 
            }
            match(input,38,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationBlockAccess().getFunctionsKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_1__1__Impl"


    // $ANTLR start "rule__DeclarationBlock__Group_1__2"
    // InternalNabla.g:2053:1: rule__DeclarationBlock__Group_1__2 : rule__DeclarationBlock__Group_1__2__Impl rule__DeclarationBlock__Group_1__3 ;
    public final void rule__DeclarationBlock__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2057:1: ( rule__DeclarationBlock__Group_1__2__Impl rule__DeclarationBlock__Group_1__3 )
            // InternalNabla.g:2058:2: rule__DeclarationBlock__Group_1__2__Impl rule__DeclarationBlock__Group_1__3
            {
            pushFollow(FOLLOW_12);
            rule__DeclarationBlock__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DeclarationBlock__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_1__2"


    // $ANTLR start "rule__DeclarationBlock__Group_1__2__Impl"
    // InternalNabla.g:2065:1: rule__DeclarationBlock__Group_1__2__Impl : ( '{' ) ;
    public final void rule__DeclarationBlock__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2069:1: ( ( '{' ) )
            // InternalNabla.g:2070:1: ( '{' )
            {
            // InternalNabla.g:2070:1: ( '{' )
            // InternalNabla.g:2071:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationBlockAccess().getLeftCurlyBracketKeyword_1_2()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationBlockAccess().getLeftCurlyBracketKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_1__2__Impl"


    // $ANTLR start "rule__DeclarationBlock__Group_1__3"
    // InternalNabla.g:2080:1: rule__DeclarationBlock__Group_1__3 : rule__DeclarationBlock__Group_1__3__Impl rule__DeclarationBlock__Group_1__4 ;
    public final void rule__DeclarationBlock__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2084:1: ( rule__DeclarationBlock__Group_1__3__Impl rule__DeclarationBlock__Group_1__4 )
            // InternalNabla.g:2085:2: rule__DeclarationBlock__Group_1__3__Impl rule__DeclarationBlock__Group_1__4
            {
            pushFollow(FOLLOW_12);
            rule__DeclarationBlock__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DeclarationBlock__Group_1__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_1__3"


    // $ANTLR start "rule__DeclarationBlock__Group_1__3__Impl"
    // InternalNabla.g:2092:1: rule__DeclarationBlock__Group_1__3__Impl : ( ( rule__DeclarationBlock__FunctionsAssignment_1_3 )* ) ;
    public final void rule__DeclarationBlock__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2096:1: ( ( ( rule__DeclarationBlock__FunctionsAssignment_1_3 )* ) )
            // InternalNabla.g:2097:1: ( ( rule__DeclarationBlock__FunctionsAssignment_1_3 )* )
            {
            // InternalNabla.g:2097:1: ( ( rule__DeclarationBlock__FunctionsAssignment_1_3 )* )
            // InternalNabla.g:2098:2: ( rule__DeclarationBlock__FunctionsAssignment_1_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationBlockAccess().getFunctionsAssignment_1_3()); 
            }
            // InternalNabla.g:2099:2: ( rule__DeclarationBlock__FunctionsAssignment_1_3 )*
            loop28:
            do {
                int alt28=2;
                int LA28_0 = input.LA(1);

                if ( (LA28_0==RULE_ID) ) {
                    alt28=1;
                }


                switch (alt28) {
            	case 1 :
            	    // InternalNabla.g:2099:3: rule__DeclarationBlock__FunctionsAssignment_1_3
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__DeclarationBlock__FunctionsAssignment_1_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop28;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationBlockAccess().getFunctionsAssignment_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_1__3__Impl"


    // $ANTLR start "rule__DeclarationBlock__Group_1__4"
    // InternalNabla.g:2107:1: rule__DeclarationBlock__Group_1__4 : rule__DeclarationBlock__Group_1__4__Impl ;
    public final void rule__DeclarationBlock__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2111:1: ( rule__DeclarationBlock__Group_1__4__Impl )
            // InternalNabla.g:2112:2: rule__DeclarationBlock__Group_1__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DeclarationBlock__Group_1__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_1__4"


    // $ANTLR start "rule__DeclarationBlock__Group_1__4__Impl"
    // InternalNabla.g:2118:1: rule__DeclarationBlock__Group_1__4__Impl : ( '}' ) ;
    public final void rule__DeclarationBlock__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2122:1: ( ( '}' ) )
            // InternalNabla.g:2123:1: ( '}' )
            {
            // InternalNabla.g:2123:1: ( '}' )
            // InternalNabla.g:2124:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationBlockAccess().getRightCurlyBracketKeyword_1_4()); 
            }
            match(input,37,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationBlockAccess().getRightCurlyBracketKeyword_1_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_1__4__Impl"


    // $ANTLR start "rule__Job__Group_0__0"
    // InternalNabla.g:2134:1: rule__Job__Group_0__0 : rule__Job__Group_0__0__Impl rule__Job__Group_0__1 ;
    public final void rule__Job__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2138:1: ( rule__Job__Group_0__0__Impl rule__Job__Group_0__1 )
            // InternalNabla.g:2139:2: rule__Job__Group_0__0__Impl rule__Job__Group_0__1
            {
            pushFollow(FOLLOW_3);
            rule__Job__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Job__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_0__0"


    // $ANTLR start "rule__Job__Group_0__0__Impl"
    // InternalNabla.g:2146:1: rule__Job__Group_0__0__Impl : ( () ) ;
    public final void rule__Job__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2150:1: ( ( () ) )
            // InternalNabla.g:2151:1: ( () )
            {
            // InternalNabla.g:2151:1: ( () )
            // InternalNabla.g:2152:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getInstructionJobAction_0_0()); 
            }
            // InternalNabla.g:2153:2: ()
            // InternalNabla.g:2153:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getInstructionJobAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_0__0__Impl"


    // $ANTLR start "rule__Job__Group_0__1"
    // InternalNabla.g:2161:1: rule__Job__Group_0__1 : rule__Job__Group_0__1__Impl rule__Job__Group_0__2 ;
    public final void rule__Job__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2165:1: ( rule__Job__Group_0__1__Impl rule__Job__Group_0__2 )
            // InternalNabla.g:2166:2: rule__Job__Group_0__1__Impl rule__Job__Group_0__2
            {
            pushFollow(FOLLOW_14);
            rule__Job__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Job__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_0__1"


    // $ANTLR start "rule__Job__Group_0__1__Impl"
    // InternalNabla.g:2173:1: rule__Job__Group_0__1__Impl : ( ( rule__Job__NameAssignment_0_1 ) ) ;
    public final void rule__Job__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2177:1: ( ( ( rule__Job__NameAssignment_0_1 ) ) )
            // InternalNabla.g:2178:1: ( ( rule__Job__NameAssignment_0_1 ) )
            {
            // InternalNabla.g:2178:1: ( ( rule__Job__NameAssignment_0_1 ) )
            // InternalNabla.g:2179:2: ( rule__Job__NameAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getNameAssignment_0_1()); 
            }
            // InternalNabla.g:2180:2: ( rule__Job__NameAssignment_0_1 )
            // InternalNabla.g:2180:3: rule__Job__NameAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Job__NameAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getNameAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_0__1__Impl"


    // $ANTLR start "rule__Job__Group_0__2"
    // InternalNabla.g:2188:1: rule__Job__Group_0__2 : rule__Job__Group_0__2__Impl rule__Job__Group_0__3 ;
    public final void rule__Job__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2192:1: ( rule__Job__Group_0__2__Impl rule__Job__Group_0__3 )
            // InternalNabla.g:2193:2: rule__Job__Group_0__2__Impl rule__Job__Group_0__3
            {
            pushFollow(FOLLOW_15);
            rule__Job__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Job__Group_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_0__2"


    // $ANTLR start "rule__Job__Group_0__2__Impl"
    // InternalNabla.g:2200:1: rule__Job__Group_0__2__Impl : ( ':' ) ;
    public final void rule__Job__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2204:1: ( ( ':' ) )
            // InternalNabla.g:2205:1: ( ':' )
            {
            // InternalNabla.g:2205:1: ( ':' )
            // InternalNabla.g:2206:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getColonKeyword_0_2()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getColonKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_0__2__Impl"


    // $ANTLR start "rule__Job__Group_0__3"
    // InternalNabla.g:2215:1: rule__Job__Group_0__3 : rule__Job__Group_0__3__Impl ;
    public final void rule__Job__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2219:1: ( rule__Job__Group_0__3__Impl )
            // InternalNabla.g:2220:2: rule__Job__Group_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Job__Group_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_0__3"


    // $ANTLR start "rule__Job__Group_0__3__Impl"
    // InternalNabla.g:2226:1: rule__Job__Group_0__3__Impl : ( ( rule__Job__InstructionAssignment_0_3 ) ) ;
    public final void rule__Job__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2230:1: ( ( ( rule__Job__InstructionAssignment_0_3 ) ) )
            // InternalNabla.g:2231:1: ( ( rule__Job__InstructionAssignment_0_3 ) )
            {
            // InternalNabla.g:2231:1: ( ( rule__Job__InstructionAssignment_0_3 ) )
            // InternalNabla.g:2232:2: ( rule__Job__InstructionAssignment_0_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getInstructionAssignment_0_3()); 
            }
            // InternalNabla.g:2233:2: ( rule__Job__InstructionAssignment_0_3 )
            // InternalNabla.g:2233:3: rule__Job__InstructionAssignment_0_3
            {
            pushFollow(FOLLOW_2);
            rule__Job__InstructionAssignment_0_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getInstructionAssignment_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_0__3__Impl"


    // $ANTLR start "rule__Job__Group_1__0"
    // InternalNabla.g:2242:1: rule__Job__Group_1__0 : rule__Job__Group_1__0__Impl rule__Job__Group_1__1 ;
    public final void rule__Job__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2246:1: ( rule__Job__Group_1__0__Impl rule__Job__Group_1__1 )
            // InternalNabla.g:2247:2: rule__Job__Group_1__0__Impl rule__Job__Group_1__1
            {
            pushFollow(FOLLOW_3);
            rule__Job__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Job__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__0"


    // $ANTLR start "rule__Job__Group_1__0__Impl"
    // InternalNabla.g:2254:1: rule__Job__Group_1__0__Impl : ( () ) ;
    public final void rule__Job__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2258:1: ( ( () ) )
            // InternalNabla.g:2259:1: ( () )
            {
            // InternalNabla.g:2259:1: ( () )
            // InternalNabla.g:2260:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getTimeLoopJobAction_1_0()); 
            }
            // InternalNabla.g:2261:2: ()
            // InternalNabla.g:2261:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getTimeLoopJobAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__0__Impl"


    // $ANTLR start "rule__Job__Group_1__1"
    // InternalNabla.g:2269:1: rule__Job__Group_1__1 : rule__Job__Group_1__1__Impl rule__Job__Group_1__2 ;
    public final void rule__Job__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2273:1: ( rule__Job__Group_1__1__Impl rule__Job__Group_1__2 )
            // InternalNabla.g:2274:2: rule__Job__Group_1__1__Impl rule__Job__Group_1__2
            {
            pushFollow(FOLLOW_14);
            rule__Job__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Job__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__1"


    // $ANTLR start "rule__Job__Group_1__1__Impl"
    // InternalNabla.g:2281:1: rule__Job__Group_1__1__Impl : ( ( rule__Job__NameAssignment_1_1 ) ) ;
    public final void rule__Job__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2285:1: ( ( ( rule__Job__NameAssignment_1_1 ) ) )
            // InternalNabla.g:2286:1: ( ( rule__Job__NameAssignment_1_1 ) )
            {
            // InternalNabla.g:2286:1: ( ( rule__Job__NameAssignment_1_1 ) )
            // InternalNabla.g:2287:2: ( rule__Job__NameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getNameAssignment_1_1()); 
            }
            // InternalNabla.g:2288:2: ( rule__Job__NameAssignment_1_1 )
            // InternalNabla.g:2288:3: rule__Job__NameAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Job__NameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__1__Impl"


    // $ANTLR start "rule__Job__Group_1__2"
    // InternalNabla.g:2296:1: rule__Job__Group_1__2 : rule__Job__Group_1__2__Impl rule__Job__Group_1__3 ;
    public final void rule__Job__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2300:1: ( rule__Job__Group_1__2__Impl rule__Job__Group_1__3 )
            // InternalNabla.g:2301:2: rule__Job__Group_1__2__Impl rule__Job__Group_1__3
            {
            pushFollow(FOLLOW_16);
            rule__Job__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Job__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__2"


    // $ANTLR start "rule__Job__Group_1__2__Impl"
    // InternalNabla.g:2308:1: rule__Job__Group_1__2__Impl : ( ':' ) ;
    public final void rule__Job__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2312:1: ( ( ':' ) )
            // InternalNabla.g:2313:1: ( ':' )
            {
            // InternalNabla.g:2313:1: ( ':' )
            // InternalNabla.g:2314:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getColonKeyword_1_2()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getColonKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__2__Impl"


    // $ANTLR start "rule__Job__Group_1__3"
    // InternalNabla.g:2323:1: rule__Job__Group_1__3 : rule__Job__Group_1__3__Impl rule__Job__Group_1__4 ;
    public final void rule__Job__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2327:1: ( rule__Job__Group_1__3__Impl rule__Job__Group_1__4 )
            // InternalNabla.g:2328:2: rule__Job__Group_1__3__Impl rule__Job__Group_1__4
            {
            pushFollow(FOLLOW_3);
            rule__Job__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Job__Group_1__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__3"


    // $ANTLR start "rule__Job__Group_1__3__Impl"
    // InternalNabla.g:2335:1: rule__Job__Group_1__3__Impl : ( '\\u2200' ) ;
    public final void rule__Job__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2339:1: ( ( '\\u2200' ) )
            // InternalNabla.g:2340:1: ( '\\u2200' )
            {
            // InternalNabla.g:2340:1: ( '\\u2200' )
            // InternalNabla.g:2341:2: '\\u2200'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getForAllKeyword_1_3()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getForAllKeyword_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__3__Impl"


    // $ANTLR start "rule__Job__Group_1__4"
    // InternalNabla.g:2350:1: rule__Job__Group_1__4 : rule__Job__Group_1__4__Impl rule__Job__Group_1__5 ;
    public final void rule__Job__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2354:1: ( rule__Job__Group_1__4__Impl rule__Job__Group_1__5 )
            // InternalNabla.g:2355:2: rule__Job__Group_1__4__Impl rule__Job__Group_1__5
            {
            pushFollow(FOLLOW_17);
            rule__Job__Group_1__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Job__Group_1__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__4"


    // $ANTLR start "rule__Job__Group_1__4__Impl"
    // InternalNabla.g:2362:1: rule__Job__Group_1__4__Impl : ( ( rule__Job__IteratorAssignment_1_4 ) ) ;
    public final void rule__Job__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2366:1: ( ( ( rule__Job__IteratorAssignment_1_4 ) ) )
            // InternalNabla.g:2367:1: ( ( rule__Job__IteratorAssignment_1_4 ) )
            {
            // InternalNabla.g:2367:1: ( ( rule__Job__IteratorAssignment_1_4 ) )
            // InternalNabla.g:2368:2: ( rule__Job__IteratorAssignment_1_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getIteratorAssignment_1_4()); 
            }
            // InternalNabla.g:2369:2: ( rule__Job__IteratorAssignment_1_4 )
            // InternalNabla.g:2369:3: rule__Job__IteratorAssignment_1_4
            {
            pushFollow(FOLLOW_2);
            rule__Job__IteratorAssignment_1_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getIteratorAssignment_1_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__4__Impl"


    // $ANTLR start "rule__Job__Group_1__5"
    // InternalNabla.g:2377:1: rule__Job__Group_1__5 : rule__Job__Group_1__5__Impl rule__Job__Group_1__6 ;
    public final void rule__Job__Group_1__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2381:1: ( rule__Job__Group_1__5__Impl rule__Job__Group_1__6 )
            // InternalNabla.g:2382:2: rule__Job__Group_1__5__Impl rule__Job__Group_1__6
            {
            pushFollow(FOLLOW_15);
            rule__Job__Group_1__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Job__Group_1__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__5"


    // $ANTLR start "rule__Job__Group_1__5__Impl"
    // InternalNabla.g:2389:1: rule__Job__Group_1__5__Impl : ( ',' ) ;
    public final void rule__Job__Group_1__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2393:1: ( ( ',' ) )
            // InternalNabla.g:2394:1: ( ',' )
            {
            // InternalNabla.g:2394:1: ( ',' )
            // InternalNabla.g:2395:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getCommaKeyword_1_5()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getCommaKeyword_1_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__5__Impl"


    // $ANTLR start "rule__Job__Group_1__6"
    // InternalNabla.g:2404:1: rule__Job__Group_1__6 : rule__Job__Group_1__6__Impl rule__Job__Group_1__7 ;
    public final void rule__Job__Group_1__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2408:1: ( rule__Job__Group_1__6__Impl rule__Job__Group_1__7 )
            // InternalNabla.g:2409:2: rule__Job__Group_1__6__Impl rule__Job__Group_1__7
            {
            pushFollow(FOLLOW_17);
            rule__Job__Group_1__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Job__Group_1__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__6"


    // $ANTLR start "rule__Job__Group_1__6__Impl"
    // InternalNabla.g:2416:1: rule__Job__Group_1__6__Impl : ( ( rule__Job__InitializationAssignment_1_6 ) ) ;
    public final void rule__Job__Group_1__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2420:1: ( ( ( rule__Job__InitializationAssignment_1_6 ) ) )
            // InternalNabla.g:2421:1: ( ( rule__Job__InitializationAssignment_1_6 ) )
            {
            // InternalNabla.g:2421:1: ( ( rule__Job__InitializationAssignment_1_6 ) )
            // InternalNabla.g:2422:2: ( rule__Job__InitializationAssignment_1_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getInitializationAssignment_1_6()); 
            }
            // InternalNabla.g:2423:2: ( rule__Job__InitializationAssignment_1_6 )
            // InternalNabla.g:2423:3: rule__Job__InitializationAssignment_1_6
            {
            pushFollow(FOLLOW_2);
            rule__Job__InitializationAssignment_1_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getInitializationAssignment_1_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__6__Impl"


    // $ANTLR start "rule__Job__Group_1__7"
    // InternalNabla.g:2431:1: rule__Job__Group_1__7 : rule__Job__Group_1__7__Impl rule__Job__Group_1__8 ;
    public final void rule__Job__Group_1__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2435:1: ( rule__Job__Group_1__7__Impl rule__Job__Group_1__8 )
            // InternalNabla.g:2436:2: rule__Job__Group_1__7__Impl rule__Job__Group_1__8
            {
            pushFollow(FOLLOW_15);
            rule__Job__Group_1__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Job__Group_1__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__7"


    // $ANTLR start "rule__Job__Group_1__7__Impl"
    // InternalNabla.g:2443:1: rule__Job__Group_1__7__Impl : ( ',' ) ;
    public final void rule__Job__Group_1__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2447:1: ( ( ',' ) )
            // InternalNabla.g:2448:1: ( ',' )
            {
            // InternalNabla.g:2448:1: ( ',' )
            // InternalNabla.g:2449:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getCommaKeyword_1_7()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getCommaKeyword_1_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__7__Impl"


    // $ANTLR start "rule__Job__Group_1__8"
    // InternalNabla.g:2458:1: rule__Job__Group_1__8 : rule__Job__Group_1__8__Impl ;
    public final void rule__Job__Group_1__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2462:1: ( rule__Job__Group_1__8__Impl )
            // InternalNabla.g:2463:2: rule__Job__Group_1__8__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Job__Group_1__8__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__8"


    // $ANTLR start "rule__Job__Group_1__8__Impl"
    // InternalNabla.g:2469:1: rule__Job__Group_1__8__Impl : ( ( rule__Job__BodyAssignment_1_8 ) ) ;
    public final void rule__Job__Group_1__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2473:1: ( ( ( rule__Job__BodyAssignment_1_8 ) ) )
            // InternalNabla.g:2474:1: ( ( rule__Job__BodyAssignment_1_8 ) )
            {
            // InternalNabla.g:2474:1: ( ( rule__Job__BodyAssignment_1_8 ) )
            // InternalNabla.g:2475:2: ( rule__Job__BodyAssignment_1_8 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getBodyAssignment_1_8()); 
            }
            // InternalNabla.g:2476:2: ( rule__Job__BodyAssignment_1_8 )
            // InternalNabla.g:2476:3: rule__Job__BodyAssignment_1_8
            {
            pushFollow(FOLLOW_2);
            rule__Job__BodyAssignment_1_8();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getBodyAssignment_1_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__8__Impl"


    // $ANTLR start "rule__Instruction__Group_2__0"
    // InternalNabla.g:2485:1: rule__Instruction__Group_2__0 : rule__Instruction__Group_2__0__Impl rule__Instruction__Group_2__1 ;
    public final void rule__Instruction__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2489:1: ( rule__Instruction__Group_2__0__Impl rule__Instruction__Group_2__1 )
            // InternalNabla.g:2490:2: rule__Instruction__Group_2__0__Impl rule__Instruction__Group_2__1
            {
            pushFollow(FOLLOW_11);
            rule__Instruction__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_2__0"


    // $ANTLR start "rule__Instruction__Group_2__0__Impl"
    // InternalNabla.g:2497:1: rule__Instruction__Group_2__0__Impl : ( () ) ;
    public final void rule__Instruction__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2501:1: ( ( () ) )
            // InternalNabla.g:2502:1: ( () )
            {
            // InternalNabla.g:2502:1: ( () )
            // InternalNabla.g:2503:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getInstructionBlockAction_2_0()); 
            }
            // InternalNabla.g:2504:2: ()
            // InternalNabla.g:2504:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getInstructionBlockAction_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_2__0__Impl"


    // $ANTLR start "rule__Instruction__Group_2__1"
    // InternalNabla.g:2512:1: rule__Instruction__Group_2__1 : rule__Instruction__Group_2__1__Impl rule__Instruction__Group_2__2 ;
    public final void rule__Instruction__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2516:1: ( rule__Instruction__Group_2__1__Impl rule__Instruction__Group_2__2 )
            // InternalNabla.g:2517:2: rule__Instruction__Group_2__1__Impl rule__Instruction__Group_2__2
            {
            pushFollow(FOLLOW_15);
            rule__Instruction__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_2__1"


    // $ANTLR start "rule__Instruction__Group_2__1__Impl"
    // InternalNabla.g:2524:1: rule__Instruction__Group_2__1__Impl : ( '{' ) ;
    public final void rule__Instruction__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2528:1: ( ( '{' ) )
            // InternalNabla.g:2529:1: ( '{' )
            {
            // InternalNabla.g:2529:1: ( '{' )
            // InternalNabla.g:2530:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getLeftCurlyBracketKeyword_2_1()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getLeftCurlyBracketKeyword_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_2__1__Impl"


    // $ANTLR start "rule__Instruction__Group_2__2"
    // InternalNabla.g:2539:1: rule__Instruction__Group_2__2 : rule__Instruction__Group_2__2__Impl rule__Instruction__Group_2__3 ;
    public final void rule__Instruction__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2543:1: ( rule__Instruction__Group_2__2__Impl rule__Instruction__Group_2__3 )
            // InternalNabla.g:2544:2: rule__Instruction__Group_2__2__Impl rule__Instruction__Group_2__3
            {
            pushFollow(FOLLOW_18);
            rule__Instruction__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_2__2"


    // $ANTLR start "rule__Instruction__Group_2__2__Impl"
    // InternalNabla.g:2551:1: rule__Instruction__Group_2__2__Impl : ( ( ( rule__Instruction__InstructionsAssignment_2_2 ) ) ( ( rule__Instruction__InstructionsAssignment_2_2 )* ) ) ;
    public final void rule__Instruction__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2555:1: ( ( ( ( rule__Instruction__InstructionsAssignment_2_2 ) ) ( ( rule__Instruction__InstructionsAssignment_2_2 )* ) ) )
            // InternalNabla.g:2556:1: ( ( ( rule__Instruction__InstructionsAssignment_2_2 ) ) ( ( rule__Instruction__InstructionsAssignment_2_2 )* ) )
            {
            // InternalNabla.g:2556:1: ( ( ( rule__Instruction__InstructionsAssignment_2_2 ) ) ( ( rule__Instruction__InstructionsAssignment_2_2 )* ) )
            // InternalNabla.g:2557:2: ( ( rule__Instruction__InstructionsAssignment_2_2 ) ) ( ( rule__Instruction__InstructionsAssignment_2_2 )* )
            {
            // InternalNabla.g:2557:2: ( ( rule__Instruction__InstructionsAssignment_2_2 ) )
            // InternalNabla.g:2558:3: ( rule__Instruction__InstructionsAssignment_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getInstructionsAssignment_2_2()); 
            }
            // InternalNabla.g:2559:3: ( rule__Instruction__InstructionsAssignment_2_2 )
            // InternalNabla.g:2559:4: rule__Instruction__InstructionsAssignment_2_2
            {
            pushFollow(FOLLOW_19);
            rule__Instruction__InstructionsAssignment_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getInstructionsAssignment_2_2()); 
            }

            }

            // InternalNabla.g:2562:2: ( ( rule__Instruction__InstructionsAssignment_2_2 )* )
            // InternalNabla.g:2563:3: ( rule__Instruction__InstructionsAssignment_2_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getInstructionsAssignment_2_2()); 
            }
            // InternalNabla.g:2564:3: ( rule__Instruction__InstructionsAssignment_2_2 )*
            loop29:
            do {
                int alt29=2;
                int LA29_0 = input.LA(1);

                if ( (LA29_0==RULE_ID||(LA29_0>=22 && LA29_0<=28)||LA29_0==36||LA29_0==40||LA29_0==43||LA29_0==60) ) {
                    alt29=1;
                }


                switch (alt29) {
            	case 1 :
            	    // InternalNabla.g:2564:4: rule__Instruction__InstructionsAssignment_2_2
            	    {
            	    pushFollow(FOLLOW_19);
            	    rule__Instruction__InstructionsAssignment_2_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop29;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getInstructionsAssignment_2_2()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_2__2__Impl"


    // $ANTLR start "rule__Instruction__Group_2__3"
    // InternalNabla.g:2573:1: rule__Instruction__Group_2__3 : rule__Instruction__Group_2__3__Impl ;
    public final void rule__Instruction__Group_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2577:1: ( rule__Instruction__Group_2__3__Impl )
            // InternalNabla.g:2578:2: rule__Instruction__Group_2__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_2__3"


    // $ANTLR start "rule__Instruction__Group_2__3__Impl"
    // InternalNabla.g:2584:1: rule__Instruction__Group_2__3__Impl : ( '}' ) ;
    public final void rule__Instruction__Group_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2588:1: ( ( '}' ) )
            // InternalNabla.g:2589:1: ( '}' )
            {
            // InternalNabla.g:2589:1: ( '}' )
            // InternalNabla.g:2590:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getRightCurlyBracketKeyword_2_3()); 
            }
            match(input,37,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getRightCurlyBracketKeyword_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_2__3__Impl"


    // $ANTLR start "rule__Instruction__Group_3__0"
    // InternalNabla.g:2600:1: rule__Instruction__Group_3__0 : rule__Instruction__Group_3__0__Impl rule__Instruction__Group_3__1 ;
    public final void rule__Instruction__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2604:1: ( rule__Instruction__Group_3__0__Impl rule__Instruction__Group_3__1 )
            // InternalNabla.g:2605:2: rule__Instruction__Group_3__0__Impl rule__Instruction__Group_3__1
            {
            pushFollow(FOLLOW_3);
            rule__Instruction__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_3__0"


    // $ANTLR start "rule__Instruction__Group_3__0__Impl"
    // InternalNabla.g:2612:1: rule__Instruction__Group_3__0__Impl : ( () ) ;
    public final void rule__Instruction__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2616:1: ( ( () ) )
            // InternalNabla.g:2617:1: ( () )
            {
            // InternalNabla.g:2617:1: ( () )
            // InternalNabla.g:2618:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getAffectationAction_3_0()); 
            }
            // InternalNabla.g:2619:2: ()
            // InternalNabla.g:2619:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getAffectationAction_3_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_3__0__Impl"


    // $ANTLR start "rule__Instruction__Group_3__1"
    // InternalNabla.g:2627:1: rule__Instruction__Group_3__1 : rule__Instruction__Group_3__1__Impl rule__Instruction__Group_3__2 ;
    public final void rule__Instruction__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2631:1: ( rule__Instruction__Group_3__1__Impl rule__Instruction__Group_3__2 )
            // InternalNabla.g:2632:2: rule__Instruction__Group_3__1__Impl rule__Instruction__Group_3__2
            {
            pushFollow(FOLLOW_20);
            rule__Instruction__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_3__1"


    // $ANTLR start "rule__Instruction__Group_3__1__Impl"
    // InternalNabla.g:2639:1: rule__Instruction__Group_3__1__Impl : ( ( rule__Instruction__VarRefAssignment_3_1 ) ) ;
    public final void rule__Instruction__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2643:1: ( ( ( rule__Instruction__VarRefAssignment_3_1 ) ) )
            // InternalNabla.g:2644:1: ( ( rule__Instruction__VarRefAssignment_3_1 ) )
            {
            // InternalNabla.g:2644:1: ( ( rule__Instruction__VarRefAssignment_3_1 ) )
            // InternalNabla.g:2645:2: ( rule__Instruction__VarRefAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getVarRefAssignment_3_1()); 
            }
            // InternalNabla.g:2646:2: ( rule__Instruction__VarRefAssignment_3_1 )
            // InternalNabla.g:2646:3: rule__Instruction__VarRefAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Instruction__VarRefAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getVarRefAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_3__1__Impl"


    // $ANTLR start "rule__Instruction__Group_3__2"
    // InternalNabla.g:2654:1: rule__Instruction__Group_3__2 : rule__Instruction__Group_3__2__Impl rule__Instruction__Group_3__3 ;
    public final void rule__Instruction__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2658:1: ( rule__Instruction__Group_3__2__Impl rule__Instruction__Group_3__3 )
            // InternalNabla.g:2659:2: rule__Instruction__Group_3__2__Impl rule__Instruction__Group_3__3
            {
            pushFollow(FOLLOW_21);
            rule__Instruction__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_3__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_3__2"


    // $ANTLR start "rule__Instruction__Group_3__2__Impl"
    // InternalNabla.g:2666:1: rule__Instruction__Group_3__2__Impl : ( '=' ) ;
    public final void rule__Instruction__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2670:1: ( ( '=' ) )
            // InternalNabla.g:2671:1: ( '=' )
            {
            // InternalNabla.g:2671:1: ( '=' )
            // InternalNabla.g:2672:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getEqualsSignKeyword_3_2()); 
            }
            match(input,42,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getEqualsSignKeyword_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_3__2__Impl"


    // $ANTLR start "rule__Instruction__Group_3__3"
    // InternalNabla.g:2681:1: rule__Instruction__Group_3__3 : rule__Instruction__Group_3__3__Impl rule__Instruction__Group_3__4 ;
    public final void rule__Instruction__Group_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2685:1: ( rule__Instruction__Group_3__3__Impl rule__Instruction__Group_3__4 )
            // InternalNabla.g:2686:2: rule__Instruction__Group_3__3__Impl rule__Instruction__Group_3__4
            {
            pushFollow(FOLLOW_4);
            rule__Instruction__Group_3__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_3__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_3__3"


    // $ANTLR start "rule__Instruction__Group_3__3__Impl"
    // InternalNabla.g:2693:1: rule__Instruction__Group_3__3__Impl : ( ( rule__Instruction__ExpressionAssignment_3_3 ) ) ;
    public final void rule__Instruction__Group_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2697:1: ( ( ( rule__Instruction__ExpressionAssignment_3_3 ) ) )
            // InternalNabla.g:2698:1: ( ( rule__Instruction__ExpressionAssignment_3_3 ) )
            {
            // InternalNabla.g:2698:1: ( ( rule__Instruction__ExpressionAssignment_3_3 ) )
            // InternalNabla.g:2699:2: ( rule__Instruction__ExpressionAssignment_3_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getExpressionAssignment_3_3()); 
            }
            // InternalNabla.g:2700:2: ( rule__Instruction__ExpressionAssignment_3_3 )
            // InternalNabla.g:2700:3: rule__Instruction__ExpressionAssignment_3_3
            {
            pushFollow(FOLLOW_2);
            rule__Instruction__ExpressionAssignment_3_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getExpressionAssignment_3_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_3__3__Impl"


    // $ANTLR start "rule__Instruction__Group_3__4"
    // InternalNabla.g:2708:1: rule__Instruction__Group_3__4 : rule__Instruction__Group_3__4__Impl ;
    public final void rule__Instruction__Group_3__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2712:1: ( rule__Instruction__Group_3__4__Impl )
            // InternalNabla.g:2713:2: rule__Instruction__Group_3__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_3__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_3__4"


    // $ANTLR start "rule__Instruction__Group_3__4__Impl"
    // InternalNabla.g:2719:1: rule__Instruction__Group_3__4__Impl : ( ';' ) ;
    public final void rule__Instruction__Group_3__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2723:1: ( ( ';' ) )
            // InternalNabla.g:2724:1: ( ';' )
            {
            // InternalNabla.g:2724:1: ( ';' )
            // InternalNabla.g:2725:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getSemicolonKeyword_3_4()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getSemicolonKeyword_3_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_3__4__Impl"


    // $ANTLR start "rule__Instruction__Group_4__0"
    // InternalNabla.g:2735:1: rule__Instruction__Group_4__0 : rule__Instruction__Group_4__0__Impl rule__Instruction__Group_4__1 ;
    public final void rule__Instruction__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2739:1: ( rule__Instruction__Group_4__0__Impl rule__Instruction__Group_4__1 )
            // InternalNabla.g:2740:2: rule__Instruction__Group_4__0__Impl rule__Instruction__Group_4__1
            {
            pushFollow(FOLLOW_16);
            rule__Instruction__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_4__0"


    // $ANTLR start "rule__Instruction__Group_4__0__Impl"
    // InternalNabla.g:2747:1: rule__Instruction__Group_4__0__Impl : ( () ) ;
    public final void rule__Instruction__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2751:1: ( ( () ) )
            // InternalNabla.g:2752:1: ( () )
            {
            // InternalNabla.g:2752:1: ( () )
            // InternalNabla.g:2753:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getLoopAction_4_0()); 
            }
            // InternalNabla.g:2754:2: ()
            // InternalNabla.g:2754:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getLoopAction_4_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_4__0__Impl"


    // $ANTLR start "rule__Instruction__Group_4__1"
    // InternalNabla.g:2762:1: rule__Instruction__Group_4__1 : rule__Instruction__Group_4__1__Impl rule__Instruction__Group_4__2 ;
    public final void rule__Instruction__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2766:1: ( rule__Instruction__Group_4__1__Impl rule__Instruction__Group_4__2 )
            // InternalNabla.g:2767:2: rule__Instruction__Group_4__1__Impl rule__Instruction__Group_4__2
            {
            pushFollow(FOLLOW_3);
            rule__Instruction__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_4__1"


    // $ANTLR start "rule__Instruction__Group_4__1__Impl"
    // InternalNabla.g:2774:1: rule__Instruction__Group_4__1__Impl : ( '\\u2200' ) ;
    public final void rule__Instruction__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2778:1: ( ( '\\u2200' ) )
            // InternalNabla.g:2779:1: ( '\\u2200' )
            {
            // InternalNabla.g:2779:1: ( '\\u2200' )
            // InternalNabla.g:2780:2: '\\u2200'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getForAllKeyword_4_1()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getForAllKeyword_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_4__1__Impl"


    // $ANTLR start "rule__Instruction__Group_4__2"
    // InternalNabla.g:2789:1: rule__Instruction__Group_4__2 : rule__Instruction__Group_4__2__Impl rule__Instruction__Group_4__3 ;
    public final void rule__Instruction__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2793:1: ( rule__Instruction__Group_4__2__Impl rule__Instruction__Group_4__3 )
            // InternalNabla.g:2794:2: rule__Instruction__Group_4__2__Impl rule__Instruction__Group_4__3
            {
            pushFollow(FOLLOW_17);
            rule__Instruction__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_4__2"


    // $ANTLR start "rule__Instruction__Group_4__2__Impl"
    // InternalNabla.g:2801:1: rule__Instruction__Group_4__2__Impl : ( ( rule__Instruction__IteratorAssignment_4_2 ) ) ;
    public final void rule__Instruction__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2805:1: ( ( ( rule__Instruction__IteratorAssignment_4_2 ) ) )
            // InternalNabla.g:2806:1: ( ( rule__Instruction__IteratorAssignment_4_2 ) )
            {
            // InternalNabla.g:2806:1: ( ( rule__Instruction__IteratorAssignment_4_2 ) )
            // InternalNabla.g:2807:2: ( rule__Instruction__IteratorAssignment_4_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getIteratorAssignment_4_2()); 
            }
            // InternalNabla.g:2808:2: ( rule__Instruction__IteratorAssignment_4_2 )
            // InternalNabla.g:2808:3: rule__Instruction__IteratorAssignment_4_2
            {
            pushFollow(FOLLOW_2);
            rule__Instruction__IteratorAssignment_4_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getIteratorAssignment_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_4__2__Impl"


    // $ANTLR start "rule__Instruction__Group_4__3"
    // InternalNabla.g:2816:1: rule__Instruction__Group_4__3 : rule__Instruction__Group_4__3__Impl rule__Instruction__Group_4__4 ;
    public final void rule__Instruction__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2820:1: ( rule__Instruction__Group_4__3__Impl rule__Instruction__Group_4__4 )
            // InternalNabla.g:2821:2: rule__Instruction__Group_4__3__Impl rule__Instruction__Group_4__4
            {
            pushFollow(FOLLOW_15);
            rule__Instruction__Group_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_4__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_4__3"


    // $ANTLR start "rule__Instruction__Group_4__3__Impl"
    // InternalNabla.g:2828:1: rule__Instruction__Group_4__3__Impl : ( ',' ) ;
    public final void rule__Instruction__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2832:1: ( ( ',' ) )
            // InternalNabla.g:2833:1: ( ',' )
            {
            // InternalNabla.g:2833:1: ( ',' )
            // InternalNabla.g:2834:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getCommaKeyword_4_3()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getCommaKeyword_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_4__3__Impl"


    // $ANTLR start "rule__Instruction__Group_4__4"
    // InternalNabla.g:2843:1: rule__Instruction__Group_4__4 : rule__Instruction__Group_4__4__Impl ;
    public final void rule__Instruction__Group_4__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2847:1: ( rule__Instruction__Group_4__4__Impl )
            // InternalNabla.g:2848:2: rule__Instruction__Group_4__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_4__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_4__4"


    // $ANTLR start "rule__Instruction__Group_4__4__Impl"
    // InternalNabla.g:2854:1: rule__Instruction__Group_4__4__Impl : ( ( rule__Instruction__BodyAssignment_4_4 ) ) ;
    public final void rule__Instruction__Group_4__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2858:1: ( ( ( rule__Instruction__BodyAssignment_4_4 ) ) )
            // InternalNabla.g:2859:1: ( ( rule__Instruction__BodyAssignment_4_4 ) )
            {
            // InternalNabla.g:2859:1: ( ( rule__Instruction__BodyAssignment_4_4 ) )
            // InternalNabla.g:2860:2: ( rule__Instruction__BodyAssignment_4_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getBodyAssignment_4_4()); 
            }
            // InternalNabla.g:2861:2: ( rule__Instruction__BodyAssignment_4_4 )
            // InternalNabla.g:2861:3: rule__Instruction__BodyAssignment_4_4
            {
            pushFollow(FOLLOW_2);
            rule__Instruction__BodyAssignment_4_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getBodyAssignment_4_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_4__4__Impl"


    // $ANTLR start "rule__Instruction__Group_5__0"
    // InternalNabla.g:2870:1: rule__Instruction__Group_5__0 : rule__Instruction__Group_5__0__Impl rule__Instruction__Group_5__1 ;
    public final void rule__Instruction__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2874:1: ( rule__Instruction__Group_5__0__Impl rule__Instruction__Group_5__1 )
            // InternalNabla.g:2875:2: rule__Instruction__Group_5__0__Impl rule__Instruction__Group_5__1
            {
            pushFollow(FOLLOW_15);
            rule__Instruction__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5__0"


    // $ANTLR start "rule__Instruction__Group_5__0__Impl"
    // InternalNabla.g:2882:1: rule__Instruction__Group_5__0__Impl : ( () ) ;
    public final void rule__Instruction__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2886:1: ( ( () ) )
            // InternalNabla.g:2887:1: ( () )
            {
            // InternalNabla.g:2887:1: ( () )
            // InternalNabla.g:2888:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getIfAction_5_0()); 
            }
            // InternalNabla.g:2889:2: ()
            // InternalNabla.g:2889:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getIfAction_5_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5__0__Impl"


    // $ANTLR start "rule__Instruction__Group_5__1"
    // InternalNabla.g:2897:1: rule__Instruction__Group_5__1 : rule__Instruction__Group_5__1__Impl rule__Instruction__Group_5__2 ;
    public final void rule__Instruction__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2901:1: ( rule__Instruction__Group_5__1__Impl rule__Instruction__Group_5__2 )
            // InternalNabla.g:2902:2: rule__Instruction__Group_5__1__Impl rule__Instruction__Group_5__2
            {
            pushFollow(FOLLOW_22);
            rule__Instruction__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_5__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5__1"


    // $ANTLR start "rule__Instruction__Group_5__1__Impl"
    // InternalNabla.g:2909:1: rule__Instruction__Group_5__1__Impl : ( 'if' ) ;
    public final void rule__Instruction__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2913:1: ( ( 'if' ) )
            // InternalNabla.g:2914:1: ( 'if' )
            {
            // InternalNabla.g:2914:1: ( 'if' )
            // InternalNabla.g:2915:2: 'if'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getIfKeyword_5_1()); 
            }
            match(input,43,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getIfKeyword_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5__1__Impl"


    // $ANTLR start "rule__Instruction__Group_5__2"
    // InternalNabla.g:2924:1: rule__Instruction__Group_5__2 : rule__Instruction__Group_5__2__Impl rule__Instruction__Group_5__3 ;
    public final void rule__Instruction__Group_5__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2928:1: ( rule__Instruction__Group_5__2__Impl rule__Instruction__Group_5__3 )
            // InternalNabla.g:2929:2: rule__Instruction__Group_5__2__Impl rule__Instruction__Group_5__3
            {
            pushFollow(FOLLOW_21);
            rule__Instruction__Group_5__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_5__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5__2"


    // $ANTLR start "rule__Instruction__Group_5__2__Impl"
    // InternalNabla.g:2936:1: rule__Instruction__Group_5__2__Impl : ( '(' ) ;
    public final void rule__Instruction__Group_5__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2940:1: ( ( '(' ) )
            // InternalNabla.g:2941:1: ( '(' )
            {
            // InternalNabla.g:2941:1: ( '(' )
            // InternalNabla.g:2942:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getLeftParenthesisKeyword_5_2()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getLeftParenthesisKeyword_5_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5__2__Impl"


    // $ANTLR start "rule__Instruction__Group_5__3"
    // InternalNabla.g:2951:1: rule__Instruction__Group_5__3 : rule__Instruction__Group_5__3__Impl rule__Instruction__Group_5__4 ;
    public final void rule__Instruction__Group_5__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2955:1: ( rule__Instruction__Group_5__3__Impl rule__Instruction__Group_5__4 )
            // InternalNabla.g:2956:2: rule__Instruction__Group_5__3__Impl rule__Instruction__Group_5__4
            {
            pushFollow(FOLLOW_23);
            rule__Instruction__Group_5__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_5__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5__3"


    // $ANTLR start "rule__Instruction__Group_5__3__Impl"
    // InternalNabla.g:2963:1: rule__Instruction__Group_5__3__Impl : ( ( rule__Instruction__ConditionAssignment_5_3 ) ) ;
    public final void rule__Instruction__Group_5__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2967:1: ( ( ( rule__Instruction__ConditionAssignment_5_3 ) ) )
            // InternalNabla.g:2968:1: ( ( rule__Instruction__ConditionAssignment_5_3 ) )
            {
            // InternalNabla.g:2968:1: ( ( rule__Instruction__ConditionAssignment_5_3 ) )
            // InternalNabla.g:2969:2: ( rule__Instruction__ConditionAssignment_5_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getConditionAssignment_5_3()); 
            }
            // InternalNabla.g:2970:2: ( rule__Instruction__ConditionAssignment_5_3 )
            // InternalNabla.g:2970:3: rule__Instruction__ConditionAssignment_5_3
            {
            pushFollow(FOLLOW_2);
            rule__Instruction__ConditionAssignment_5_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getConditionAssignment_5_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5__3__Impl"


    // $ANTLR start "rule__Instruction__Group_5__4"
    // InternalNabla.g:2978:1: rule__Instruction__Group_5__4 : rule__Instruction__Group_5__4__Impl rule__Instruction__Group_5__5 ;
    public final void rule__Instruction__Group_5__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2982:1: ( rule__Instruction__Group_5__4__Impl rule__Instruction__Group_5__5 )
            // InternalNabla.g:2983:2: rule__Instruction__Group_5__4__Impl rule__Instruction__Group_5__5
            {
            pushFollow(FOLLOW_15);
            rule__Instruction__Group_5__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_5__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5__4"


    // $ANTLR start "rule__Instruction__Group_5__4__Impl"
    // InternalNabla.g:2990:1: rule__Instruction__Group_5__4__Impl : ( ')' ) ;
    public final void rule__Instruction__Group_5__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2994:1: ( ( ')' ) )
            // InternalNabla.g:2995:1: ( ')' )
            {
            // InternalNabla.g:2995:1: ( ')' )
            // InternalNabla.g:2996:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getRightParenthesisKeyword_5_4()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getRightParenthesisKeyword_5_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5__4__Impl"


    // $ANTLR start "rule__Instruction__Group_5__5"
    // InternalNabla.g:3005:1: rule__Instruction__Group_5__5 : rule__Instruction__Group_5__5__Impl rule__Instruction__Group_5__6 ;
    public final void rule__Instruction__Group_5__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3009:1: ( rule__Instruction__Group_5__5__Impl rule__Instruction__Group_5__6 )
            // InternalNabla.g:3010:2: rule__Instruction__Group_5__5__Impl rule__Instruction__Group_5__6
            {
            pushFollow(FOLLOW_24);
            rule__Instruction__Group_5__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_5__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5__5"


    // $ANTLR start "rule__Instruction__Group_5__5__Impl"
    // InternalNabla.g:3017:1: rule__Instruction__Group_5__5__Impl : ( ( rule__Instruction__ThenAssignment_5_5 ) ) ;
    public final void rule__Instruction__Group_5__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3021:1: ( ( ( rule__Instruction__ThenAssignment_5_5 ) ) )
            // InternalNabla.g:3022:1: ( ( rule__Instruction__ThenAssignment_5_5 ) )
            {
            // InternalNabla.g:3022:1: ( ( rule__Instruction__ThenAssignment_5_5 ) )
            // InternalNabla.g:3023:2: ( rule__Instruction__ThenAssignment_5_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getThenAssignment_5_5()); 
            }
            // InternalNabla.g:3024:2: ( rule__Instruction__ThenAssignment_5_5 )
            // InternalNabla.g:3024:3: rule__Instruction__ThenAssignment_5_5
            {
            pushFollow(FOLLOW_2);
            rule__Instruction__ThenAssignment_5_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getThenAssignment_5_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5__5__Impl"


    // $ANTLR start "rule__Instruction__Group_5__6"
    // InternalNabla.g:3032:1: rule__Instruction__Group_5__6 : rule__Instruction__Group_5__6__Impl ;
    public final void rule__Instruction__Group_5__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3036:1: ( rule__Instruction__Group_5__6__Impl )
            // InternalNabla.g:3037:2: rule__Instruction__Group_5__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_5__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5__6"


    // $ANTLR start "rule__Instruction__Group_5__6__Impl"
    // InternalNabla.g:3043:1: rule__Instruction__Group_5__6__Impl : ( ( rule__Instruction__Group_5_6__0 )? ) ;
    public final void rule__Instruction__Group_5__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3047:1: ( ( ( rule__Instruction__Group_5_6__0 )? ) )
            // InternalNabla.g:3048:1: ( ( rule__Instruction__Group_5_6__0 )? )
            {
            // InternalNabla.g:3048:1: ( ( rule__Instruction__Group_5_6__0 )? )
            // InternalNabla.g:3049:2: ( rule__Instruction__Group_5_6__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getGroup_5_6()); 
            }
            // InternalNabla.g:3050:2: ( rule__Instruction__Group_5_6__0 )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==46) ) {
                int LA30_1 = input.LA(2);

                if ( (synpred55_InternalNabla()) ) {
                    alt30=1;
                }
            }
            switch (alt30) {
                case 1 :
                    // InternalNabla.g:3050:3: rule__Instruction__Group_5_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Instruction__Group_5_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getGroup_5_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5__6__Impl"


    // $ANTLR start "rule__Instruction__Group_5_6__0"
    // InternalNabla.g:3059:1: rule__Instruction__Group_5_6__0 : rule__Instruction__Group_5_6__0__Impl rule__Instruction__Group_5_6__1 ;
    public final void rule__Instruction__Group_5_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3063:1: ( rule__Instruction__Group_5_6__0__Impl rule__Instruction__Group_5_6__1 )
            // InternalNabla.g:3064:2: rule__Instruction__Group_5_6__0__Impl rule__Instruction__Group_5_6__1
            {
            pushFollow(FOLLOW_15);
            rule__Instruction__Group_5_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_5_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5_6__0"


    // $ANTLR start "rule__Instruction__Group_5_6__0__Impl"
    // InternalNabla.g:3071:1: rule__Instruction__Group_5_6__0__Impl : ( ( 'else' ) ) ;
    public final void rule__Instruction__Group_5_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3075:1: ( ( ( 'else' ) ) )
            // InternalNabla.g:3076:1: ( ( 'else' ) )
            {
            // InternalNabla.g:3076:1: ( ( 'else' ) )
            // InternalNabla.g:3077:2: ( 'else' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getElseKeyword_5_6_0()); 
            }
            // InternalNabla.g:3078:2: ( 'else' )
            // InternalNabla.g:3078:3: 'else'
            {
            match(input,46,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getElseKeyword_5_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5_6__0__Impl"


    // $ANTLR start "rule__Instruction__Group_5_6__1"
    // InternalNabla.g:3086:1: rule__Instruction__Group_5_6__1 : rule__Instruction__Group_5_6__1__Impl ;
    public final void rule__Instruction__Group_5_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3090:1: ( rule__Instruction__Group_5_6__1__Impl )
            // InternalNabla.g:3091:2: rule__Instruction__Group_5_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_5_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5_6__1"


    // $ANTLR start "rule__Instruction__Group_5_6__1__Impl"
    // InternalNabla.g:3097:1: rule__Instruction__Group_5_6__1__Impl : ( ( rule__Instruction__ElseAssignment_5_6_1 ) ) ;
    public final void rule__Instruction__Group_5_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3101:1: ( ( ( rule__Instruction__ElseAssignment_5_6_1 ) ) )
            // InternalNabla.g:3102:1: ( ( rule__Instruction__ElseAssignment_5_6_1 ) )
            {
            // InternalNabla.g:3102:1: ( ( rule__Instruction__ElseAssignment_5_6_1 ) )
            // InternalNabla.g:3103:2: ( rule__Instruction__ElseAssignment_5_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getElseAssignment_5_6_1()); 
            }
            // InternalNabla.g:3104:2: ( rule__Instruction__ElseAssignment_5_6_1 )
            // InternalNabla.g:3104:3: rule__Instruction__ElseAssignment_5_6_1
            {
            pushFollow(FOLLOW_2);
            rule__Instruction__ElseAssignment_5_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getElseAssignment_5_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5_6__1__Impl"


    // $ANTLR start "rule__TimeIterator__Group__0"
    // InternalNabla.g:3113:1: rule__TimeIterator__Group__0 : rule__TimeIterator__Group__0__Impl rule__TimeIterator__Group__1 ;
    public final void rule__TimeIterator__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3117:1: ( rule__TimeIterator__Group__0__Impl rule__TimeIterator__Group__1 )
            // InternalNabla.g:3118:2: rule__TimeIterator__Group__0__Impl rule__TimeIterator__Group__1
            {
            pushFollow(FOLLOW_25);
            rule__TimeIterator__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeIterator__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIterator__Group__0"


    // $ANTLR start "rule__TimeIterator__Group__0__Impl"
    // InternalNabla.g:3125:1: rule__TimeIterator__Group__0__Impl : ( ( rule__TimeIterator__NameAssignment_0 ) ) ;
    public final void rule__TimeIterator__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3129:1: ( ( ( rule__TimeIterator__NameAssignment_0 ) ) )
            // InternalNabla.g:3130:1: ( ( rule__TimeIterator__NameAssignment_0 ) )
            {
            // InternalNabla.g:3130:1: ( ( rule__TimeIterator__NameAssignment_0 ) )
            // InternalNabla.g:3131:2: ( rule__TimeIterator__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorAccess().getNameAssignment_0()); 
            }
            // InternalNabla.g:3132:2: ( rule__TimeIterator__NameAssignment_0 )
            // InternalNabla.g:3132:3: rule__TimeIterator__NameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__TimeIterator__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorAccess().getNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIterator__Group__0__Impl"


    // $ANTLR start "rule__TimeIterator__Group__1"
    // InternalNabla.g:3140:1: rule__TimeIterator__Group__1 : rule__TimeIterator__Group__1__Impl rule__TimeIterator__Group__2 ;
    public final void rule__TimeIterator__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3144:1: ( rule__TimeIterator__Group__1__Impl rule__TimeIterator__Group__2 )
            // InternalNabla.g:3145:2: rule__TimeIterator__Group__1__Impl rule__TimeIterator__Group__2
            {
            pushFollow(FOLLOW_26);
            rule__TimeIterator__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeIterator__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIterator__Group__1"


    // $ANTLR start "rule__TimeIterator__Group__1__Impl"
    // InternalNabla.g:3152:1: rule__TimeIterator__Group__1__Impl : ( '\\u2208' ) ;
    public final void rule__TimeIterator__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3156:1: ( ( '\\u2208' ) )
            // InternalNabla.g:3157:1: ( '\\u2208' )
            {
            // InternalNabla.g:3157:1: ( '\\u2208' )
            // InternalNabla.g:3158:2: '\\u2208'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorAccess().getElementOfKeyword_1()); 
            }
            match(input,47,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorAccess().getElementOfKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIterator__Group__1__Impl"


    // $ANTLR start "rule__TimeIterator__Group__2"
    // InternalNabla.g:3167:1: rule__TimeIterator__Group__2 : rule__TimeIterator__Group__2__Impl ;
    public final void rule__TimeIterator__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3171:1: ( rule__TimeIterator__Group__2__Impl )
            // InternalNabla.g:3172:2: rule__TimeIterator__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TimeIterator__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIterator__Group__2"


    // $ANTLR start "rule__TimeIterator__Group__2__Impl"
    // InternalNabla.g:3178:1: rule__TimeIterator__Group__2__Impl : ( '\\u2115' ) ;
    public final void rule__TimeIterator__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3182:1: ( ( '\\u2115' ) )
            // InternalNabla.g:3183:1: ( '\\u2115' )
            {
            // InternalNabla.g:3183:1: ( '\\u2115' )
            // InternalNabla.g:3184:2: '\\u2115'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorAccess().getDoubleStruckCapitalNKeyword_2()); 
            }
            match(input,22,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorAccess().getDoubleStruckCapitalNKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIterator__Group__2__Impl"


    // $ANTLR start "rule__SpaceIterator__Group__0"
    // InternalNabla.g:3194:1: rule__SpaceIterator__Group__0 : rule__SpaceIterator__Group__0__Impl rule__SpaceIterator__Group__1 ;
    public final void rule__SpaceIterator__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3198:1: ( rule__SpaceIterator__Group__0__Impl rule__SpaceIterator__Group__1 )
            // InternalNabla.g:3199:2: rule__SpaceIterator__Group__0__Impl rule__SpaceIterator__Group__1
            {
            pushFollow(FOLLOW_25);
            rule__SpaceIterator__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpaceIterator__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIterator__Group__0"


    // $ANTLR start "rule__SpaceIterator__Group__0__Impl"
    // InternalNabla.g:3206:1: rule__SpaceIterator__Group__0__Impl : ( ( rule__SpaceIterator__NameAssignment_0 ) ) ;
    public final void rule__SpaceIterator__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3210:1: ( ( ( rule__SpaceIterator__NameAssignment_0 ) ) )
            // InternalNabla.g:3211:1: ( ( rule__SpaceIterator__NameAssignment_0 ) )
            {
            // InternalNabla.g:3211:1: ( ( rule__SpaceIterator__NameAssignment_0 ) )
            // InternalNabla.g:3212:2: ( rule__SpaceIterator__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorAccess().getNameAssignment_0()); 
            }
            // InternalNabla.g:3213:2: ( rule__SpaceIterator__NameAssignment_0 )
            // InternalNabla.g:3213:3: rule__SpaceIterator__NameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__SpaceIterator__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorAccess().getNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIterator__Group__0__Impl"


    // $ANTLR start "rule__SpaceIterator__Group__1"
    // InternalNabla.g:3221:1: rule__SpaceIterator__Group__1 : rule__SpaceIterator__Group__1__Impl rule__SpaceIterator__Group__2 ;
    public final void rule__SpaceIterator__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3225:1: ( rule__SpaceIterator__Group__1__Impl rule__SpaceIterator__Group__2 )
            // InternalNabla.g:3226:2: rule__SpaceIterator__Group__1__Impl rule__SpaceIterator__Group__2
            {
            pushFollow(FOLLOW_3);
            rule__SpaceIterator__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpaceIterator__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIterator__Group__1"


    // $ANTLR start "rule__SpaceIterator__Group__1__Impl"
    // InternalNabla.g:3233:1: rule__SpaceIterator__Group__1__Impl : ( '\\u2208' ) ;
    public final void rule__SpaceIterator__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3237:1: ( ( '\\u2208' ) )
            // InternalNabla.g:3238:1: ( '\\u2208' )
            {
            // InternalNabla.g:3238:1: ( '\\u2208' )
            // InternalNabla.g:3239:2: '\\u2208'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorAccess().getElementOfKeyword_1()); 
            }
            match(input,47,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorAccess().getElementOfKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIterator__Group__1__Impl"


    // $ANTLR start "rule__SpaceIterator__Group__2"
    // InternalNabla.g:3248:1: rule__SpaceIterator__Group__2 : rule__SpaceIterator__Group__2__Impl ;
    public final void rule__SpaceIterator__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3252:1: ( rule__SpaceIterator__Group__2__Impl )
            // InternalNabla.g:3253:2: rule__SpaceIterator__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SpaceIterator__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIterator__Group__2"


    // $ANTLR start "rule__SpaceIterator__Group__2__Impl"
    // InternalNabla.g:3259:1: rule__SpaceIterator__Group__2__Impl : ( ( rule__SpaceIterator__RangeAssignment_2 ) ) ;
    public final void rule__SpaceIterator__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3263:1: ( ( ( rule__SpaceIterator__RangeAssignment_2 ) ) )
            // InternalNabla.g:3264:1: ( ( rule__SpaceIterator__RangeAssignment_2 ) )
            {
            // InternalNabla.g:3264:1: ( ( rule__SpaceIterator__RangeAssignment_2 ) )
            // InternalNabla.g:3265:2: ( rule__SpaceIterator__RangeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorAccess().getRangeAssignment_2()); 
            }
            // InternalNabla.g:3266:2: ( rule__SpaceIterator__RangeAssignment_2 )
            // InternalNabla.g:3266:3: rule__SpaceIterator__RangeAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__SpaceIterator__RangeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorAccess().getRangeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIterator__Group__2__Impl"


    // $ANTLR start "rule__SpaceIteratorRange__Group__0"
    // InternalNabla.g:3275:1: rule__SpaceIteratorRange__Group__0 : rule__SpaceIteratorRange__Group__0__Impl rule__SpaceIteratorRange__Group__1 ;
    public final void rule__SpaceIteratorRange__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3279:1: ( rule__SpaceIteratorRange__Group__0__Impl rule__SpaceIteratorRange__Group__1 )
            // InternalNabla.g:3280:2: rule__SpaceIteratorRange__Group__0__Impl rule__SpaceIteratorRange__Group__1
            {
            pushFollow(FOLLOW_22);
            rule__SpaceIteratorRange__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRange__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group__0"


    // $ANTLR start "rule__SpaceIteratorRange__Group__0__Impl"
    // InternalNabla.g:3287:1: rule__SpaceIteratorRange__Group__0__Impl : ( ( rule__SpaceIteratorRange__ConnectivityAssignment_0 ) ) ;
    public final void rule__SpaceIteratorRange__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3291:1: ( ( ( rule__SpaceIteratorRange__ConnectivityAssignment_0 ) ) )
            // InternalNabla.g:3292:1: ( ( rule__SpaceIteratorRange__ConnectivityAssignment_0 ) )
            {
            // InternalNabla.g:3292:1: ( ( rule__SpaceIteratorRange__ConnectivityAssignment_0 ) )
            // InternalNabla.g:3293:2: ( rule__SpaceIteratorRange__ConnectivityAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRangeAccess().getConnectivityAssignment_0()); 
            }
            // InternalNabla.g:3294:2: ( rule__SpaceIteratorRange__ConnectivityAssignment_0 )
            // InternalNabla.g:3294:3: rule__SpaceIteratorRange__ConnectivityAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRange__ConnectivityAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRangeAccess().getConnectivityAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group__0__Impl"


    // $ANTLR start "rule__SpaceIteratorRange__Group__1"
    // InternalNabla.g:3302:1: rule__SpaceIteratorRange__Group__1 : rule__SpaceIteratorRange__Group__1__Impl rule__SpaceIteratorRange__Group__2 ;
    public final void rule__SpaceIteratorRange__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3306:1: ( rule__SpaceIteratorRange__Group__1__Impl rule__SpaceIteratorRange__Group__2 )
            // InternalNabla.g:3307:2: rule__SpaceIteratorRange__Group__1__Impl rule__SpaceIteratorRange__Group__2
            {
            pushFollow(FOLLOW_27);
            rule__SpaceIteratorRange__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRange__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group__1"


    // $ANTLR start "rule__SpaceIteratorRange__Group__1__Impl"
    // InternalNabla.g:3314:1: rule__SpaceIteratorRange__Group__1__Impl : ( '(' ) ;
    public final void rule__SpaceIteratorRange__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3318:1: ( ( '(' ) )
            // InternalNabla.g:3319:1: ( '(' )
            {
            // InternalNabla.g:3319:1: ( '(' )
            // InternalNabla.g:3320:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRangeAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRangeAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group__1__Impl"


    // $ANTLR start "rule__SpaceIteratorRange__Group__2"
    // InternalNabla.g:3329:1: rule__SpaceIteratorRange__Group__2 : rule__SpaceIteratorRange__Group__2__Impl rule__SpaceIteratorRange__Group__3 ;
    public final void rule__SpaceIteratorRange__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3333:1: ( rule__SpaceIteratorRange__Group__2__Impl rule__SpaceIteratorRange__Group__3 )
            // InternalNabla.g:3334:2: rule__SpaceIteratorRange__Group__2__Impl rule__SpaceIteratorRange__Group__3
            {
            pushFollow(FOLLOW_27);
            rule__SpaceIteratorRange__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRange__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group__2"


    // $ANTLR start "rule__SpaceIteratorRange__Group__2__Impl"
    // InternalNabla.g:3341:1: rule__SpaceIteratorRange__Group__2__Impl : ( ( rule__SpaceIteratorRange__Group_2__0 )? ) ;
    public final void rule__SpaceIteratorRange__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3345:1: ( ( ( rule__SpaceIteratorRange__Group_2__0 )? ) )
            // InternalNabla.g:3346:1: ( ( rule__SpaceIteratorRange__Group_2__0 )? )
            {
            // InternalNabla.g:3346:1: ( ( rule__SpaceIteratorRange__Group_2__0 )? )
            // InternalNabla.g:3347:2: ( rule__SpaceIteratorRange__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRangeAccess().getGroup_2()); 
            }
            // InternalNabla.g:3348:2: ( rule__SpaceIteratorRange__Group_2__0 )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==RULE_ID||(LA31_0>=58 && LA31_0<=59)) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalNabla.g:3348:3: rule__SpaceIteratorRange__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SpaceIteratorRange__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRangeAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group__2__Impl"


    // $ANTLR start "rule__SpaceIteratorRange__Group__3"
    // InternalNabla.g:3356:1: rule__SpaceIteratorRange__Group__3 : rule__SpaceIteratorRange__Group__3__Impl ;
    public final void rule__SpaceIteratorRange__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3360:1: ( rule__SpaceIteratorRange__Group__3__Impl )
            // InternalNabla.g:3361:2: rule__SpaceIteratorRange__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRange__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group__3"


    // $ANTLR start "rule__SpaceIteratorRange__Group__3__Impl"
    // InternalNabla.g:3367:1: rule__SpaceIteratorRange__Group__3__Impl : ( ')' ) ;
    public final void rule__SpaceIteratorRange__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3371:1: ( ( ')' ) )
            // InternalNabla.g:3372:1: ( ')' )
            {
            // InternalNabla.g:3372:1: ( ')' )
            // InternalNabla.g:3373:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRangeAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRangeAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group__3__Impl"


    // $ANTLR start "rule__SpaceIteratorRange__Group_2__0"
    // InternalNabla.g:3383:1: rule__SpaceIteratorRange__Group_2__0 : rule__SpaceIteratorRange__Group_2__0__Impl rule__SpaceIteratorRange__Group_2__1 ;
    public final void rule__SpaceIteratorRange__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3387:1: ( rule__SpaceIteratorRange__Group_2__0__Impl rule__SpaceIteratorRange__Group_2__1 )
            // InternalNabla.g:3388:2: rule__SpaceIteratorRange__Group_2__0__Impl rule__SpaceIteratorRange__Group_2__1
            {
            pushFollow(FOLLOW_17);
            rule__SpaceIteratorRange__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRange__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group_2__0"


    // $ANTLR start "rule__SpaceIteratorRange__Group_2__0__Impl"
    // InternalNabla.g:3395:1: rule__SpaceIteratorRange__Group_2__0__Impl : ( ( rule__SpaceIteratorRange__ArgsAssignment_2_0 ) ) ;
    public final void rule__SpaceIteratorRange__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3399:1: ( ( ( rule__SpaceIteratorRange__ArgsAssignment_2_0 ) ) )
            // InternalNabla.g:3400:1: ( ( rule__SpaceIteratorRange__ArgsAssignment_2_0 ) )
            {
            // InternalNabla.g:3400:1: ( ( rule__SpaceIteratorRange__ArgsAssignment_2_0 ) )
            // InternalNabla.g:3401:2: ( rule__SpaceIteratorRange__ArgsAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRangeAccess().getArgsAssignment_2_0()); 
            }
            // InternalNabla.g:3402:2: ( rule__SpaceIteratorRange__ArgsAssignment_2_0 )
            // InternalNabla.g:3402:3: rule__SpaceIteratorRange__ArgsAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRange__ArgsAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRangeAccess().getArgsAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group_2__0__Impl"


    // $ANTLR start "rule__SpaceIteratorRange__Group_2__1"
    // InternalNabla.g:3410:1: rule__SpaceIteratorRange__Group_2__1 : rule__SpaceIteratorRange__Group_2__1__Impl ;
    public final void rule__SpaceIteratorRange__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3414:1: ( rule__SpaceIteratorRange__Group_2__1__Impl )
            // InternalNabla.g:3415:2: rule__SpaceIteratorRange__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRange__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group_2__1"


    // $ANTLR start "rule__SpaceIteratorRange__Group_2__1__Impl"
    // InternalNabla.g:3421:1: rule__SpaceIteratorRange__Group_2__1__Impl : ( ( rule__SpaceIteratorRange__Group_2_1__0 )* ) ;
    public final void rule__SpaceIteratorRange__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3425:1: ( ( ( rule__SpaceIteratorRange__Group_2_1__0 )* ) )
            // InternalNabla.g:3426:1: ( ( rule__SpaceIteratorRange__Group_2_1__0 )* )
            {
            // InternalNabla.g:3426:1: ( ( rule__SpaceIteratorRange__Group_2_1__0 )* )
            // InternalNabla.g:3427:2: ( rule__SpaceIteratorRange__Group_2_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRangeAccess().getGroup_2_1()); 
            }
            // InternalNabla.g:3428:2: ( rule__SpaceIteratorRange__Group_2_1__0 )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==41) ) {
                    alt32=1;
                }


                switch (alt32) {
            	case 1 :
            	    // InternalNabla.g:3428:3: rule__SpaceIteratorRange__Group_2_1__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__SpaceIteratorRange__Group_2_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRangeAccess().getGroup_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group_2__1__Impl"


    // $ANTLR start "rule__SpaceIteratorRange__Group_2_1__0"
    // InternalNabla.g:3437:1: rule__SpaceIteratorRange__Group_2_1__0 : rule__SpaceIteratorRange__Group_2_1__0__Impl rule__SpaceIteratorRange__Group_2_1__1 ;
    public final void rule__SpaceIteratorRange__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3441:1: ( rule__SpaceIteratorRange__Group_2_1__0__Impl rule__SpaceIteratorRange__Group_2_1__1 )
            // InternalNabla.g:3442:2: rule__SpaceIteratorRange__Group_2_1__0__Impl rule__SpaceIteratorRange__Group_2_1__1
            {
            pushFollow(FOLLOW_29);
            rule__SpaceIteratorRange__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRange__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group_2_1__0"


    // $ANTLR start "rule__SpaceIteratorRange__Group_2_1__0__Impl"
    // InternalNabla.g:3449:1: rule__SpaceIteratorRange__Group_2_1__0__Impl : ( ',' ) ;
    public final void rule__SpaceIteratorRange__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3453:1: ( ( ',' ) )
            // InternalNabla.g:3454:1: ( ',' )
            {
            // InternalNabla.g:3454:1: ( ',' )
            // InternalNabla.g:3455:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRangeAccess().getCommaKeyword_2_1_0()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRangeAccess().getCommaKeyword_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group_2_1__0__Impl"


    // $ANTLR start "rule__SpaceIteratorRange__Group_2_1__1"
    // InternalNabla.g:3464:1: rule__SpaceIteratorRange__Group_2_1__1 : rule__SpaceIteratorRange__Group_2_1__1__Impl ;
    public final void rule__SpaceIteratorRange__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3468:1: ( rule__SpaceIteratorRange__Group_2_1__1__Impl )
            // InternalNabla.g:3469:2: rule__SpaceIteratorRange__Group_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRange__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group_2_1__1"


    // $ANTLR start "rule__SpaceIteratorRange__Group_2_1__1__Impl"
    // InternalNabla.g:3475:1: rule__SpaceIteratorRange__Group_2_1__1__Impl : ( ( rule__SpaceIteratorRange__ArgsAssignment_2_1_1 ) ) ;
    public final void rule__SpaceIteratorRange__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3479:1: ( ( ( rule__SpaceIteratorRange__ArgsAssignment_2_1_1 ) ) )
            // InternalNabla.g:3480:1: ( ( rule__SpaceIteratorRange__ArgsAssignment_2_1_1 ) )
            {
            // InternalNabla.g:3480:1: ( ( rule__SpaceIteratorRange__ArgsAssignment_2_1_1 ) )
            // InternalNabla.g:3481:2: ( rule__SpaceIteratorRange__ArgsAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRangeAccess().getArgsAssignment_2_1_1()); 
            }
            // InternalNabla.g:3482:2: ( rule__SpaceIteratorRange__ArgsAssignment_2_1_1 )
            // InternalNabla.g:3482:3: rule__SpaceIteratorRange__ArgsAssignment_2_1_1
            {
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRange__ArgsAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRangeAccess().getArgsAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group_2_1__1__Impl"


    // $ANTLR start "rule__SpaceIteratorRef__Group_0__0"
    // InternalNabla.g:3491:1: rule__SpaceIteratorRef__Group_0__0 : rule__SpaceIteratorRef__Group_0__0__Impl rule__SpaceIteratorRef__Group_0__1 ;
    public final void rule__SpaceIteratorRef__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3495:1: ( rule__SpaceIteratorRef__Group_0__0__Impl rule__SpaceIteratorRef__Group_0__1 )
            // InternalNabla.g:3496:2: rule__SpaceIteratorRef__Group_0__0__Impl rule__SpaceIteratorRef__Group_0__1
            {
            pushFollow(FOLLOW_22);
            rule__SpaceIteratorRef__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRef__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRef__Group_0__0"


    // $ANTLR start "rule__SpaceIteratorRef__Group_0__0__Impl"
    // InternalNabla.g:3503:1: rule__SpaceIteratorRef__Group_0__0__Impl : ( ( rule__SpaceIteratorRef__Alternatives_0_0 ) ) ;
    public final void rule__SpaceIteratorRef__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3507:1: ( ( ( rule__SpaceIteratorRef__Alternatives_0_0 ) ) )
            // InternalNabla.g:3508:1: ( ( rule__SpaceIteratorRef__Alternatives_0_0 ) )
            {
            // InternalNabla.g:3508:1: ( ( rule__SpaceIteratorRef__Alternatives_0_0 ) )
            // InternalNabla.g:3509:2: ( rule__SpaceIteratorRef__Alternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRefAccess().getAlternatives_0_0()); 
            }
            // InternalNabla.g:3510:2: ( rule__SpaceIteratorRef__Alternatives_0_0 )
            // InternalNabla.g:3510:3: rule__SpaceIteratorRef__Alternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRef__Alternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRefAccess().getAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRef__Group_0__0__Impl"


    // $ANTLR start "rule__SpaceIteratorRef__Group_0__1"
    // InternalNabla.g:3518:1: rule__SpaceIteratorRef__Group_0__1 : rule__SpaceIteratorRef__Group_0__1__Impl rule__SpaceIteratorRef__Group_0__2 ;
    public final void rule__SpaceIteratorRef__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3522:1: ( rule__SpaceIteratorRef__Group_0__1__Impl rule__SpaceIteratorRef__Group_0__2 )
            // InternalNabla.g:3523:2: rule__SpaceIteratorRef__Group_0__1__Impl rule__SpaceIteratorRef__Group_0__2
            {
            pushFollow(FOLLOW_3);
            rule__SpaceIteratorRef__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRef__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRef__Group_0__1"


    // $ANTLR start "rule__SpaceIteratorRef__Group_0__1__Impl"
    // InternalNabla.g:3530:1: rule__SpaceIteratorRef__Group_0__1__Impl : ( '(' ) ;
    public final void rule__SpaceIteratorRef__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3534:1: ( ( '(' ) )
            // InternalNabla.g:3535:1: ( '(' )
            {
            // InternalNabla.g:3535:1: ( '(' )
            // InternalNabla.g:3536:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRefAccess().getLeftParenthesisKeyword_0_1()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRefAccess().getLeftParenthesisKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRef__Group_0__1__Impl"


    // $ANTLR start "rule__SpaceIteratorRef__Group_0__2"
    // InternalNabla.g:3545:1: rule__SpaceIteratorRef__Group_0__2 : rule__SpaceIteratorRef__Group_0__2__Impl rule__SpaceIteratorRef__Group_0__3 ;
    public final void rule__SpaceIteratorRef__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3549:1: ( rule__SpaceIteratorRef__Group_0__2__Impl rule__SpaceIteratorRef__Group_0__3 )
            // InternalNabla.g:3550:2: rule__SpaceIteratorRef__Group_0__2__Impl rule__SpaceIteratorRef__Group_0__3
            {
            pushFollow(FOLLOW_23);
            rule__SpaceIteratorRef__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRef__Group_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRef__Group_0__2"


    // $ANTLR start "rule__SpaceIteratorRef__Group_0__2__Impl"
    // InternalNabla.g:3557:1: rule__SpaceIteratorRef__Group_0__2__Impl : ( ( rule__SpaceIteratorRef__IteratorAssignment_0_2 ) ) ;
    public final void rule__SpaceIteratorRef__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3561:1: ( ( ( rule__SpaceIteratorRef__IteratorAssignment_0_2 ) ) )
            // InternalNabla.g:3562:1: ( ( rule__SpaceIteratorRef__IteratorAssignment_0_2 ) )
            {
            // InternalNabla.g:3562:1: ( ( rule__SpaceIteratorRef__IteratorAssignment_0_2 ) )
            // InternalNabla.g:3563:2: ( rule__SpaceIteratorRef__IteratorAssignment_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRefAccess().getIteratorAssignment_0_2()); 
            }
            // InternalNabla.g:3564:2: ( rule__SpaceIteratorRef__IteratorAssignment_0_2 )
            // InternalNabla.g:3564:3: rule__SpaceIteratorRef__IteratorAssignment_0_2
            {
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRef__IteratorAssignment_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRefAccess().getIteratorAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRef__Group_0__2__Impl"


    // $ANTLR start "rule__SpaceIteratorRef__Group_0__3"
    // InternalNabla.g:3572:1: rule__SpaceIteratorRef__Group_0__3 : rule__SpaceIteratorRef__Group_0__3__Impl ;
    public final void rule__SpaceIteratorRef__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3576:1: ( rule__SpaceIteratorRef__Group_0__3__Impl )
            // InternalNabla.g:3577:2: rule__SpaceIteratorRef__Group_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRef__Group_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRef__Group_0__3"


    // $ANTLR start "rule__SpaceIteratorRef__Group_0__3__Impl"
    // InternalNabla.g:3583:1: rule__SpaceIteratorRef__Group_0__3__Impl : ( ')' ) ;
    public final void rule__SpaceIteratorRef__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3587:1: ( ( ')' ) )
            // InternalNabla.g:3588:1: ( ')' )
            {
            // InternalNabla.g:3588:1: ( ')' )
            // InternalNabla.g:3589:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRefAccess().getRightParenthesisKeyword_0_3()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRefAccess().getRightParenthesisKeyword_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRef__Group_0__3__Impl"


    // $ANTLR start "rule__ScalarVarDefinition__Group__0"
    // InternalNabla.g:3599:1: rule__ScalarVarDefinition__Group__0 : rule__ScalarVarDefinition__Group__0__Impl rule__ScalarVarDefinition__Group__1 ;
    public final void rule__ScalarVarDefinition__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3603:1: ( rule__ScalarVarDefinition__Group__0__Impl rule__ScalarVarDefinition__Group__1 )
            // InternalNabla.g:3604:2: rule__ScalarVarDefinition__Group__0__Impl rule__ScalarVarDefinition__Group__1
            {
            pushFollow(FOLLOW_30);
            rule__ScalarVarDefinition__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ScalarVarDefinition__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__Group__0"


    // $ANTLR start "rule__ScalarVarDefinition__Group__0__Impl"
    // InternalNabla.g:3611:1: rule__ScalarVarDefinition__Group__0__Impl : ( ( rule__ScalarVarDefinition__ConstAssignment_0 )? ) ;
    public final void rule__ScalarVarDefinition__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3615:1: ( ( ( rule__ScalarVarDefinition__ConstAssignment_0 )? ) )
            // InternalNabla.g:3616:1: ( ( rule__ScalarVarDefinition__ConstAssignment_0 )? )
            {
            // InternalNabla.g:3616:1: ( ( rule__ScalarVarDefinition__ConstAssignment_0 )? )
            // InternalNabla.g:3617:2: ( rule__ScalarVarDefinition__ConstAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarDefinitionAccess().getConstAssignment_0()); 
            }
            // InternalNabla.g:3618:2: ( rule__ScalarVarDefinition__ConstAssignment_0 )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==60) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // InternalNabla.g:3618:3: rule__ScalarVarDefinition__ConstAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarVarDefinition__ConstAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarDefinitionAccess().getConstAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__Group__0__Impl"


    // $ANTLR start "rule__ScalarVarDefinition__Group__1"
    // InternalNabla.g:3626:1: rule__ScalarVarDefinition__Group__1 : rule__ScalarVarDefinition__Group__1__Impl rule__ScalarVarDefinition__Group__2 ;
    public final void rule__ScalarVarDefinition__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3630:1: ( rule__ScalarVarDefinition__Group__1__Impl rule__ScalarVarDefinition__Group__2 )
            // InternalNabla.g:3631:2: rule__ScalarVarDefinition__Group__1__Impl rule__ScalarVarDefinition__Group__2
            {
            pushFollow(FOLLOW_3);
            rule__ScalarVarDefinition__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ScalarVarDefinition__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__Group__1"


    // $ANTLR start "rule__ScalarVarDefinition__Group__1__Impl"
    // InternalNabla.g:3638:1: rule__ScalarVarDefinition__Group__1__Impl : ( ( rule__ScalarVarDefinition__TypeAssignment_1 ) ) ;
    public final void rule__ScalarVarDefinition__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3642:1: ( ( ( rule__ScalarVarDefinition__TypeAssignment_1 ) ) )
            // InternalNabla.g:3643:1: ( ( rule__ScalarVarDefinition__TypeAssignment_1 ) )
            {
            // InternalNabla.g:3643:1: ( ( rule__ScalarVarDefinition__TypeAssignment_1 ) )
            // InternalNabla.g:3644:2: ( rule__ScalarVarDefinition__TypeAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarDefinitionAccess().getTypeAssignment_1()); 
            }
            // InternalNabla.g:3645:2: ( rule__ScalarVarDefinition__TypeAssignment_1 )
            // InternalNabla.g:3645:3: rule__ScalarVarDefinition__TypeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ScalarVarDefinition__TypeAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarDefinitionAccess().getTypeAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__Group__1__Impl"


    // $ANTLR start "rule__ScalarVarDefinition__Group__2"
    // InternalNabla.g:3653:1: rule__ScalarVarDefinition__Group__2 : rule__ScalarVarDefinition__Group__2__Impl rule__ScalarVarDefinition__Group__3 ;
    public final void rule__ScalarVarDefinition__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3657:1: ( rule__ScalarVarDefinition__Group__2__Impl rule__ScalarVarDefinition__Group__3 )
            // InternalNabla.g:3658:2: rule__ScalarVarDefinition__Group__2__Impl rule__ScalarVarDefinition__Group__3
            {
            pushFollow(FOLLOW_20);
            rule__ScalarVarDefinition__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ScalarVarDefinition__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__Group__2"


    // $ANTLR start "rule__ScalarVarDefinition__Group__2__Impl"
    // InternalNabla.g:3665:1: rule__ScalarVarDefinition__Group__2__Impl : ( ( rule__ScalarVarDefinition__VariableAssignment_2 ) ) ;
    public final void rule__ScalarVarDefinition__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3669:1: ( ( ( rule__ScalarVarDefinition__VariableAssignment_2 ) ) )
            // InternalNabla.g:3670:1: ( ( rule__ScalarVarDefinition__VariableAssignment_2 ) )
            {
            // InternalNabla.g:3670:1: ( ( rule__ScalarVarDefinition__VariableAssignment_2 ) )
            // InternalNabla.g:3671:2: ( rule__ScalarVarDefinition__VariableAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarDefinitionAccess().getVariableAssignment_2()); 
            }
            // InternalNabla.g:3672:2: ( rule__ScalarVarDefinition__VariableAssignment_2 )
            // InternalNabla.g:3672:3: rule__ScalarVarDefinition__VariableAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__ScalarVarDefinition__VariableAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarDefinitionAccess().getVariableAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__Group__2__Impl"


    // $ANTLR start "rule__ScalarVarDefinition__Group__3"
    // InternalNabla.g:3680:1: rule__ScalarVarDefinition__Group__3 : rule__ScalarVarDefinition__Group__3__Impl rule__ScalarVarDefinition__Group__4 ;
    public final void rule__ScalarVarDefinition__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3684:1: ( rule__ScalarVarDefinition__Group__3__Impl rule__ScalarVarDefinition__Group__4 )
            // InternalNabla.g:3685:2: rule__ScalarVarDefinition__Group__3__Impl rule__ScalarVarDefinition__Group__4
            {
            pushFollow(FOLLOW_21);
            rule__ScalarVarDefinition__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ScalarVarDefinition__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__Group__3"


    // $ANTLR start "rule__ScalarVarDefinition__Group__3__Impl"
    // InternalNabla.g:3692:1: rule__ScalarVarDefinition__Group__3__Impl : ( '=' ) ;
    public final void rule__ScalarVarDefinition__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3696:1: ( ( '=' ) )
            // InternalNabla.g:3697:1: ( '=' )
            {
            // InternalNabla.g:3697:1: ( '=' )
            // InternalNabla.g:3698:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarDefinitionAccess().getEqualsSignKeyword_3()); 
            }
            match(input,42,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarDefinitionAccess().getEqualsSignKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__Group__3__Impl"


    // $ANTLR start "rule__ScalarVarDefinition__Group__4"
    // InternalNabla.g:3707:1: rule__ScalarVarDefinition__Group__4 : rule__ScalarVarDefinition__Group__4__Impl rule__ScalarVarDefinition__Group__5 ;
    public final void rule__ScalarVarDefinition__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3711:1: ( rule__ScalarVarDefinition__Group__4__Impl rule__ScalarVarDefinition__Group__5 )
            // InternalNabla.g:3712:2: rule__ScalarVarDefinition__Group__4__Impl rule__ScalarVarDefinition__Group__5
            {
            pushFollow(FOLLOW_4);
            rule__ScalarVarDefinition__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ScalarVarDefinition__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__Group__4"


    // $ANTLR start "rule__ScalarVarDefinition__Group__4__Impl"
    // InternalNabla.g:3719:1: rule__ScalarVarDefinition__Group__4__Impl : ( ( rule__ScalarVarDefinition__DefaultValueAssignment_4 ) ) ;
    public final void rule__ScalarVarDefinition__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3723:1: ( ( ( rule__ScalarVarDefinition__DefaultValueAssignment_4 ) ) )
            // InternalNabla.g:3724:1: ( ( rule__ScalarVarDefinition__DefaultValueAssignment_4 ) )
            {
            // InternalNabla.g:3724:1: ( ( rule__ScalarVarDefinition__DefaultValueAssignment_4 ) )
            // InternalNabla.g:3725:2: ( rule__ScalarVarDefinition__DefaultValueAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarDefinitionAccess().getDefaultValueAssignment_4()); 
            }
            // InternalNabla.g:3726:2: ( rule__ScalarVarDefinition__DefaultValueAssignment_4 )
            // InternalNabla.g:3726:3: rule__ScalarVarDefinition__DefaultValueAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__ScalarVarDefinition__DefaultValueAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarDefinitionAccess().getDefaultValueAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__Group__4__Impl"


    // $ANTLR start "rule__ScalarVarDefinition__Group__5"
    // InternalNabla.g:3734:1: rule__ScalarVarDefinition__Group__5 : rule__ScalarVarDefinition__Group__5__Impl ;
    public final void rule__ScalarVarDefinition__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3738:1: ( rule__ScalarVarDefinition__Group__5__Impl )
            // InternalNabla.g:3739:2: rule__ScalarVarDefinition__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ScalarVarDefinition__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__Group__5"


    // $ANTLR start "rule__ScalarVarDefinition__Group__5__Impl"
    // InternalNabla.g:3745:1: rule__ScalarVarDefinition__Group__5__Impl : ( ';' ) ;
    public final void rule__ScalarVarDefinition__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3749:1: ( ( ';' ) )
            // InternalNabla.g:3750:1: ( ';' )
            {
            // InternalNabla.g:3750:1: ( ';' )
            // InternalNabla.g:3751:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarDefinitionAccess().getSemicolonKeyword_5()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarDefinitionAccess().getSemicolonKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__Group__5__Impl"


    // $ANTLR start "rule__VarGroupDeclaration__Group__0"
    // InternalNabla.g:3761:1: rule__VarGroupDeclaration__Group__0 : rule__VarGroupDeclaration__Group__0__Impl rule__VarGroupDeclaration__Group__1 ;
    public final void rule__VarGroupDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3765:1: ( rule__VarGroupDeclaration__Group__0__Impl rule__VarGroupDeclaration__Group__1 )
            // InternalNabla.g:3766:2: rule__VarGroupDeclaration__Group__0__Impl rule__VarGroupDeclaration__Group__1
            {
            pushFollow(FOLLOW_3);
            rule__VarGroupDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarGroupDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarGroupDeclaration__Group__0"


    // $ANTLR start "rule__VarGroupDeclaration__Group__0__Impl"
    // InternalNabla.g:3773:1: rule__VarGroupDeclaration__Group__0__Impl : ( ( rule__VarGroupDeclaration__TypeAssignment_0 ) ) ;
    public final void rule__VarGroupDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3777:1: ( ( ( rule__VarGroupDeclaration__TypeAssignment_0 ) ) )
            // InternalNabla.g:3778:1: ( ( rule__VarGroupDeclaration__TypeAssignment_0 ) )
            {
            // InternalNabla.g:3778:1: ( ( rule__VarGroupDeclaration__TypeAssignment_0 ) )
            // InternalNabla.g:3779:2: ( rule__VarGroupDeclaration__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarGroupDeclarationAccess().getTypeAssignment_0()); 
            }
            // InternalNabla.g:3780:2: ( rule__VarGroupDeclaration__TypeAssignment_0 )
            // InternalNabla.g:3780:3: rule__VarGroupDeclaration__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__VarGroupDeclaration__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarGroupDeclarationAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarGroupDeclaration__Group__0__Impl"


    // $ANTLR start "rule__VarGroupDeclaration__Group__1"
    // InternalNabla.g:3788:1: rule__VarGroupDeclaration__Group__1 : rule__VarGroupDeclaration__Group__1__Impl rule__VarGroupDeclaration__Group__2 ;
    public final void rule__VarGroupDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3792:1: ( rule__VarGroupDeclaration__Group__1__Impl rule__VarGroupDeclaration__Group__2 )
            // InternalNabla.g:3793:2: rule__VarGroupDeclaration__Group__1__Impl rule__VarGroupDeclaration__Group__2
            {
            pushFollow(FOLLOW_31);
            rule__VarGroupDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarGroupDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarGroupDeclaration__Group__1"


    // $ANTLR start "rule__VarGroupDeclaration__Group__1__Impl"
    // InternalNabla.g:3800:1: rule__VarGroupDeclaration__Group__1__Impl : ( ( rule__VarGroupDeclaration__VariablesAssignment_1 ) ) ;
    public final void rule__VarGroupDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3804:1: ( ( ( rule__VarGroupDeclaration__VariablesAssignment_1 ) ) )
            // InternalNabla.g:3805:1: ( ( rule__VarGroupDeclaration__VariablesAssignment_1 ) )
            {
            // InternalNabla.g:3805:1: ( ( rule__VarGroupDeclaration__VariablesAssignment_1 ) )
            // InternalNabla.g:3806:2: ( rule__VarGroupDeclaration__VariablesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarGroupDeclarationAccess().getVariablesAssignment_1()); 
            }
            // InternalNabla.g:3807:2: ( rule__VarGroupDeclaration__VariablesAssignment_1 )
            // InternalNabla.g:3807:3: rule__VarGroupDeclaration__VariablesAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__VarGroupDeclaration__VariablesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarGroupDeclarationAccess().getVariablesAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarGroupDeclaration__Group__1__Impl"


    // $ANTLR start "rule__VarGroupDeclaration__Group__2"
    // InternalNabla.g:3815:1: rule__VarGroupDeclaration__Group__2 : rule__VarGroupDeclaration__Group__2__Impl rule__VarGroupDeclaration__Group__3 ;
    public final void rule__VarGroupDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3819:1: ( rule__VarGroupDeclaration__Group__2__Impl rule__VarGroupDeclaration__Group__3 )
            // InternalNabla.g:3820:2: rule__VarGroupDeclaration__Group__2__Impl rule__VarGroupDeclaration__Group__3
            {
            pushFollow(FOLLOW_31);
            rule__VarGroupDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarGroupDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarGroupDeclaration__Group__2"


    // $ANTLR start "rule__VarGroupDeclaration__Group__2__Impl"
    // InternalNabla.g:3827:1: rule__VarGroupDeclaration__Group__2__Impl : ( ( rule__VarGroupDeclaration__Group_2__0 )* ) ;
    public final void rule__VarGroupDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3831:1: ( ( ( rule__VarGroupDeclaration__Group_2__0 )* ) )
            // InternalNabla.g:3832:1: ( ( rule__VarGroupDeclaration__Group_2__0 )* )
            {
            // InternalNabla.g:3832:1: ( ( rule__VarGroupDeclaration__Group_2__0 )* )
            // InternalNabla.g:3833:2: ( rule__VarGroupDeclaration__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarGroupDeclarationAccess().getGroup_2()); 
            }
            // InternalNabla.g:3834:2: ( rule__VarGroupDeclaration__Group_2__0 )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==41) ) {
                    alt34=1;
                }


                switch (alt34) {
            	case 1 :
            	    // InternalNabla.g:3834:3: rule__VarGroupDeclaration__Group_2__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__VarGroupDeclaration__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarGroupDeclarationAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarGroupDeclaration__Group__2__Impl"


    // $ANTLR start "rule__VarGroupDeclaration__Group__3"
    // InternalNabla.g:3842:1: rule__VarGroupDeclaration__Group__3 : rule__VarGroupDeclaration__Group__3__Impl ;
    public final void rule__VarGroupDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3846:1: ( rule__VarGroupDeclaration__Group__3__Impl )
            // InternalNabla.g:3847:2: rule__VarGroupDeclaration__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarGroupDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarGroupDeclaration__Group__3"


    // $ANTLR start "rule__VarGroupDeclaration__Group__3__Impl"
    // InternalNabla.g:3853:1: rule__VarGroupDeclaration__Group__3__Impl : ( ';' ) ;
    public final void rule__VarGroupDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3857:1: ( ( ';' ) )
            // InternalNabla.g:3858:1: ( ';' )
            {
            // InternalNabla.g:3858:1: ( ';' )
            // InternalNabla.g:3859:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarGroupDeclarationAccess().getSemicolonKeyword_3()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarGroupDeclarationAccess().getSemicolonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarGroupDeclaration__Group__3__Impl"


    // $ANTLR start "rule__VarGroupDeclaration__Group_2__0"
    // InternalNabla.g:3869:1: rule__VarGroupDeclaration__Group_2__0 : rule__VarGroupDeclaration__Group_2__0__Impl rule__VarGroupDeclaration__Group_2__1 ;
    public final void rule__VarGroupDeclaration__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3873:1: ( rule__VarGroupDeclaration__Group_2__0__Impl rule__VarGroupDeclaration__Group_2__1 )
            // InternalNabla.g:3874:2: rule__VarGroupDeclaration__Group_2__0__Impl rule__VarGroupDeclaration__Group_2__1
            {
            pushFollow(FOLLOW_3);
            rule__VarGroupDeclaration__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarGroupDeclaration__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarGroupDeclaration__Group_2__0"


    // $ANTLR start "rule__VarGroupDeclaration__Group_2__0__Impl"
    // InternalNabla.g:3881:1: rule__VarGroupDeclaration__Group_2__0__Impl : ( ',' ) ;
    public final void rule__VarGroupDeclaration__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3885:1: ( ( ',' ) )
            // InternalNabla.g:3886:1: ( ',' )
            {
            // InternalNabla.g:3886:1: ( ',' )
            // InternalNabla.g:3887:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarGroupDeclarationAccess().getCommaKeyword_2_0()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarGroupDeclarationAccess().getCommaKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarGroupDeclaration__Group_2__0__Impl"


    // $ANTLR start "rule__VarGroupDeclaration__Group_2__1"
    // InternalNabla.g:3896:1: rule__VarGroupDeclaration__Group_2__1 : rule__VarGroupDeclaration__Group_2__1__Impl ;
    public final void rule__VarGroupDeclaration__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3900:1: ( rule__VarGroupDeclaration__Group_2__1__Impl )
            // InternalNabla.g:3901:2: rule__VarGroupDeclaration__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarGroupDeclaration__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarGroupDeclaration__Group_2__1"


    // $ANTLR start "rule__VarGroupDeclaration__Group_2__1__Impl"
    // InternalNabla.g:3907:1: rule__VarGroupDeclaration__Group_2__1__Impl : ( ( rule__VarGroupDeclaration__VariablesAssignment_2_1 ) ) ;
    public final void rule__VarGroupDeclaration__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3911:1: ( ( ( rule__VarGroupDeclaration__VariablesAssignment_2_1 ) ) )
            // InternalNabla.g:3912:1: ( ( rule__VarGroupDeclaration__VariablesAssignment_2_1 ) )
            {
            // InternalNabla.g:3912:1: ( ( rule__VarGroupDeclaration__VariablesAssignment_2_1 ) )
            // InternalNabla.g:3913:2: ( rule__VarGroupDeclaration__VariablesAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarGroupDeclarationAccess().getVariablesAssignment_2_1()); 
            }
            // InternalNabla.g:3914:2: ( rule__VarGroupDeclaration__VariablesAssignment_2_1 )
            // InternalNabla.g:3914:3: rule__VarGroupDeclaration__VariablesAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__VarGroupDeclaration__VariablesAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarGroupDeclarationAccess().getVariablesAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarGroupDeclaration__Group_2__1__Impl"


    // $ANTLR start "rule__ArrayVar__Group__0"
    // InternalNabla.g:3923:1: rule__ArrayVar__Group__0 : rule__ArrayVar__Group__0__Impl rule__ArrayVar__Group__1 ;
    public final void rule__ArrayVar__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3927:1: ( rule__ArrayVar__Group__0__Impl rule__ArrayVar__Group__1 )
            // InternalNabla.g:3928:2: rule__ArrayVar__Group__0__Impl rule__ArrayVar__Group__1
            {
            pushFollow(FOLLOW_32);
            rule__ArrayVar__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayVar__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__Group__0"


    // $ANTLR start "rule__ArrayVar__Group__0__Impl"
    // InternalNabla.g:3935:1: rule__ArrayVar__Group__0__Impl : ( ( rule__ArrayVar__NameAssignment_0 ) ) ;
    public final void rule__ArrayVar__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3939:1: ( ( ( rule__ArrayVar__NameAssignment_0 ) ) )
            // InternalNabla.g:3940:1: ( ( rule__ArrayVar__NameAssignment_0 ) )
            {
            // InternalNabla.g:3940:1: ( ( rule__ArrayVar__NameAssignment_0 ) )
            // InternalNabla.g:3941:2: ( rule__ArrayVar__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayVarAccess().getNameAssignment_0()); 
            }
            // InternalNabla.g:3942:2: ( rule__ArrayVar__NameAssignment_0 )
            // InternalNabla.g:3942:3: rule__ArrayVar__NameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ArrayVar__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayVarAccess().getNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__Group__0__Impl"


    // $ANTLR start "rule__ArrayVar__Group__1"
    // InternalNabla.g:3950:1: rule__ArrayVar__Group__1 : rule__ArrayVar__Group__1__Impl rule__ArrayVar__Group__2 ;
    public final void rule__ArrayVar__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3954:1: ( rule__ArrayVar__Group__1__Impl rule__ArrayVar__Group__2 )
            // InternalNabla.g:3955:2: rule__ArrayVar__Group__1__Impl rule__ArrayVar__Group__2
            {
            pushFollow(FOLLOW_3);
            rule__ArrayVar__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayVar__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__Group__1"


    // $ANTLR start "rule__ArrayVar__Group__1__Impl"
    // InternalNabla.g:3962:1: rule__ArrayVar__Group__1__Impl : ( '[' ) ;
    public final void rule__ArrayVar__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3966:1: ( ( '[' ) )
            // InternalNabla.g:3967:1: ( '[' )
            {
            // InternalNabla.g:3967:1: ( '[' )
            // InternalNabla.g:3968:2: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayVarAccess().getLeftSquareBracketKeyword_1()); 
            }
            match(input,48,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayVarAccess().getLeftSquareBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__Group__1__Impl"


    // $ANTLR start "rule__ArrayVar__Group__2"
    // InternalNabla.g:3977:1: rule__ArrayVar__Group__2 : rule__ArrayVar__Group__2__Impl rule__ArrayVar__Group__3 ;
    public final void rule__ArrayVar__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3981:1: ( rule__ArrayVar__Group__2__Impl rule__ArrayVar__Group__3 )
            // InternalNabla.g:3982:2: rule__ArrayVar__Group__2__Impl rule__ArrayVar__Group__3
            {
            pushFollow(FOLLOW_33);
            rule__ArrayVar__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayVar__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__Group__2"


    // $ANTLR start "rule__ArrayVar__Group__2__Impl"
    // InternalNabla.g:3989:1: rule__ArrayVar__Group__2__Impl : ( ( rule__ArrayVar__DimensionsAssignment_2 ) ) ;
    public final void rule__ArrayVar__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3993:1: ( ( ( rule__ArrayVar__DimensionsAssignment_2 ) ) )
            // InternalNabla.g:3994:1: ( ( rule__ArrayVar__DimensionsAssignment_2 ) )
            {
            // InternalNabla.g:3994:1: ( ( rule__ArrayVar__DimensionsAssignment_2 ) )
            // InternalNabla.g:3995:2: ( rule__ArrayVar__DimensionsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayVarAccess().getDimensionsAssignment_2()); 
            }
            // InternalNabla.g:3996:2: ( rule__ArrayVar__DimensionsAssignment_2 )
            // InternalNabla.g:3996:3: rule__ArrayVar__DimensionsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__ArrayVar__DimensionsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayVarAccess().getDimensionsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__Group__2__Impl"


    // $ANTLR start "rule__ArrayVar__Group__3"
    // InternalNabla.g:4004:1: rule__ArrayVar__Group__3 : rule__ArrayVar__Group__3__Impl rule__ArrayVar__Group__4 ;
    public final void rule__ArrayVar__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4008:1: ( rule__ArrayVar__Group__3__Impl rule__ArrayVar__Group__4 )
            // InternalNabla.g:4009:2: rule__ArrayVar__Group__3__Impl rule__ArrayVar__Group__4
            {
            pushFollow(FOLLOW_33);
            rule__ArrayVar__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayVar__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__Group__3"


    // $ANTLR start "rule__ArrayVar__Group__3__Impl"
    // InternalNabla.g:4016:1: rule__ArrayVar__Group__3__Impl : ( ( rule__ArrayVar__Group_3__0 )* ) ;
    public final void rule__ArrayVar__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4020:1: ( ( ( rule__ArrayVar__Group_3__0 )* ) )
            // InternalNabla.g:4021:1: ( ( rule__ArrayVar__Group_3__0 )* )
            {
            // InternalNabla.g:4021:1: ( ( rule__ArrayVar__Group_3__0 )* )
            // InternalNabla.g:4022:2: ( rule__ArrayVar__Group_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayVarAccess().getGroup_3()); 
            }
            // InternalNabla.g:4023:2: ( rule__ArrayVar__Group_3__0 )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( (LA35_0==41) ) {
                    alt35=1;
                }


                switch (alt35) {
            	case 1 :
            	    // InternalNabla.g:4023:3: rule__ArrayVar__Group_3__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__ArrayVar__Group_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayVarAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__Group__3__Impl"


    // $ANTLR start "rule__ArrayVar__Group__4"
    // InternalNabla.g:4031:1: rule__ArrayVar__Group__4 : rule__ArrayVar__Group__4__Impl ;
    public final void rule__ArrayVar__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4035:1: ( rule__ArrayVar__Group__4__Impl )
            // InternalNabla.g:4036:2: rule__ArrayVar__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayVar__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__Group__4"


    // $ANTLR start "rule__ArrayVar__Group__4__Impl"
    // InternalNabla.g:4042:1: rule__ArrayVar__Group__4__Impl : ( ']' ) ;
    public final void rule__ArrayVar__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4046:1: ( ( ']' ) )
            // InternalNabla.g:4047:1: ( ']' )
            {
            // InternalNabla.g:4047:1: ( ']' )
            // InternalNabla.g:4048:2: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayVarAccess().getRightSquareBracketKeyword_4()); 
            }
            match(input,49,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayVarAccess().getRightSquareBracketKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__Group__4__Impl"


    // $ANTLR start "rule__ArrayVar__Group_3__0"
    // InternalNabla.g:4058:1: rule__ArrayVar__Group_3__0 : rule__ArrayVar__Group_3__0__Impl rule__ArrayVar__Group_3__1 ;
    public final void rule__ArrayVar__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4062:1: ( rule__ArrayVar__Group_3__0__Impl rule__ArrayVar__Group_3__1 )
            // InternalNabla.g:4063:2: rule__ArrayVar__Group_3__0__Impl rule__ArrayVar__Group_3__1
            {
            pushFollow(FOLLOW_3);
            rule__ArrayVar__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayVar__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__Group_3__0"


    // $ANTLR start "rule__ArrayVar__Group_3__0__Impl"
    // InternalNabla.g:4070:1: rule__ArrayVar__Group_3__0__Impl : ( ',' ) ;
    public final void rule__ArrayVar__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4074:1: ( ( ',' ) )
            // InternalNabla.g:4075:1: ( ',' )
            {
            // InternalNabla.g:4075:1: ( ',' )
            // InternalNabla.g:4076:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayVarAccess().getCommaKeyword_3_0()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayVarAccess().getCommaKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__Group_3__0__Impl"


    // $ANTLR start "rule__ArrayVar__Group_3__1"
    // InternalNabla.g:4085:1: rule__ArrayVar__Group_3__1 : rule__ArrayVar__Group_3__1__Impl ;
    public final void rule__ArrayVar__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4089:1: ( rule__ArrayVar__Group_3__1__Impl )
            // InternalNabla.g:4090:2: rule__ArrayVar__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayVar__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__Group_3__1"


    // $ANTLR start "rule__ArrayVar__Group_3__1__Impl"
    // InternalNabla.g:4096:1: rule__ArrayVar__Group_3__1__Impl : ( ( rule__ArrayVar__DimensionsAssignment_3_1 ) ) ;
    public final void rule__ArrayVar__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4100:1: ( ( ( rule__ArrayVar__DimensionsAssignment_3_1 ) ) )
            // InternalNabla.g:4101:1: ( ( rule__ArrayVar__DimensionsAssignment_3_1 ) )
            {
            // InternalNabla.g:4101:1: ( ( rule__ArrayVar__DimensionsAssignment_3_1 ) )
            // InternalNabla.g:4102:2: ( rule__ArrayVar__DimensionsAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayVarAccess().getDimensionsAssignment_3_1()); 
            }
            // InternalNabla.g:4103:2: ( rule__ArrayVar__DimensionsAssignment_3_1 )
            // InternalNabla.g:4103:3: rule__ArrayVar__DimensionsAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__ArrayVar__DimensionsAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayVarAccess().getDimensionsAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__Group_3__1__Impl"


    // $ANTLR start "rule__Connectivity__Group__0"
    // InternalNabla.g:4112:1: rule__Connectivity__Group__0 : rule__Connectivity__Group__0__Impl rule__Connectivity__Group__1 ;
    public final void rule__Connectivity__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4116:1: ( rule__Connectivity__Group__0__Impl rule__Connectivity__Group__1 )
            // InternalNabla.g:4117:2: rule__Connectivity__Group__0__Impl rule__Connectivity__Group__1
            {
            pushFollow(FOLLOW_14);
            rule__Connectivity__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Connectivity__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__0"


    // $ANTLR start "rule__Connectivity__Group__0__Impl"
    // InternalNabla.g:4124:1: rule__Connectivity__Group__0__Impl : ( ( rule__Connectivity__NameAssignment_0 ) ) ;
    public final void rule__Connectivity__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4128:1: ( ( ( rule__Connectivity__NameAssignment_0 ) ) )
            // InternalNabla.g:4129:1: ( ( rule__Connectivity__NameAssignment_0 ) )
            {
            // InternalNabla.g:4129:1: ( ( rule__Connectivity__NameAssignment_0 ) )
            // InternalNabla.g:4130:2: ( rule__Connectivity__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getNameAssignment_0()); 
            }
            // InternalNabla.g:4131:2: ( rule__Connectivity__NameAssignment_0 )
            // InternalNabla.g:4131:3: rule__Connectivity__NameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Connectivity__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__0__Impl"


    // $ANTLR start "rule__Connectivity__Group__1"
    // InternalNabla.g:4139:1: rule__Connectivity__Group__1 : rule__Connectivity__Group__1__Impl rule__Connectivity__Group__2 ;
    public final void rule__Connectivity__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4143:1: ( rule__Connectivity__Group__1__Impl rule__Connectivity__Group__2 )
            // InternalNabla.g:4144:2: rule__Connectivity__Group__1__Impl rule__Connectivity__Group__2
            {
            pushFollow(FOLLOW_22);
            rule__Connectivity__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Connectivity__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__1"


    // $ANTLR start "rule__Connectivity__Group__1__Impl"
    // InternalNabla.g:4151:1: rule__Connectivity__Group__1__Impl : ( ':' ) ;
    public final void rule__Connectivity__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4155:1: ( ( ':' ) )
            // InternalNabla.g:4156:1: ( ':' )
            {
            // InternalNabla.g:4156:1: ( ':' )
            // InternalNabla.g:4157:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getColonKeyword_1()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getColonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__1__Impl"


    // $ANTLR start "rule__Connectivity__Group__2"
    // InternalNabla.g:4166:1: rule__Connectivity__Group__2 : rule__Connectivity__Group__2__Impl rule__Connectivity__Group__3 ;
    public final void rule__Connectivity__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4170:1: ( rule__Connectivity__Group__2__Impl rule__Connectivity__Group__3 )
            // InternalNabla.g:4171:2: rule__Connectivity__Group__2__Impl rule__Connectivity__Group__3
            {
            pushFollow(FOLLOW_34);
            rule__Connectivity__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Connectivity__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__2"


    // $ANTLR start "rule__Connectivity__Group__2__Impl"
    // InternalNabla.g:4178:1: rule__Connectivity__Group__2__Impl : ( '(' ) ;
    public final void rule__Connectivity__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4182:1: ( ( '(' ) )
            // InternalNabla.g:4183:1: ( '(' )
            {
            // InternalNabla.g:4183:1: ( '(' )
            // InternalNabla.g:4184:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__2__Impl"


    // $ANTLR start "rule__Connectivity__Group__3"
    // InternalNabla.g:4193:1: rule__Connectivity__Group__3 : rule__Connectivity__Group__3__Impl rule__Connectivity__Group__4 ;
    public final void rule__Connectivity__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4197:1: ( rule__Connectivity__Group__3__Impl rule__Connectivity__Group__4 )
            // InternalNabla.g:4198:2: rule__Connectivity__Group__3__Impl rule__Connectivity__Group__4
            {
            pushFollow(FOLLOW_23);
            rule__Connectivity__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Connectivity__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__3"


    // $ANTLR start "rule__Connectivity__Group__3__Impl"
    // InternalNabla.g:4205:1: rule__Connectivity__Group__3__Impl : ( ( rule__Connectivity__Alternatives_3 ) ) ;
    public final void rule__Connectivity__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4209:1: ( ( ( rule__Connectivity__Alternatives_3 ) ) )
            // InternalNabla.g:4210:1: ( ( rule__Connectivity__Alternatives_3 ) )
            {
            // InternalNabla.g:4210:1: ( ( rule__Connectivity__Alternatives_3 ) )
            // InternalNabla.g:4211:2: ( rule__Connectivity__Alternatives_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getAlternatives_3()); 
            }
            // InternalNabla.g:4212:2: ( rule__Connectivity__Alternatives_3 )
            // InternalNabla.g:4212:3: rule__Connectivity__Alternatives_3
            {
            pushFollow(FOLLOW_2);
            rule__Connectivity__Alternatives_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getAlternatives_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__3__Impl"


    // $ANTLR start "rule__Connectivity__Group__4"
    // InternalNabla.g:4220:1: rule__Connectivity__Group__4 : rule__Connectivity__Group__4__Impl rule__Connectivity__Group__5 ;
    public final void rule__Connectivity__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4224:1: ( rule__Connectivity__Group__4__Impl rule__Connectivity__Group__5 )
            // InternalNabla.g:4225:2: rule__Connectivity__Group__4__Impl rule__Connectivity__Group__5
            {
            pushFollow(FOLLOW_35);
            rule__Connectivity__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Connectivity__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__4"


    // $ANTLR start "rule__Connectivity__Group__4__Impl"
    // InternalNabla.g:4232:1: rule__Connectivity__Group__4__Impl : ( ')' ) ;
    public final void rule__Connectivity__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4236:1: ( ( ')' ) )
            // InternalNabla.g:4237:1: ( ')' )
            {
            // InternalNabla.g:4237:1: ( ')' )
            // InternalNabla.g:4238:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__4__Impl"


    // $ANTLR start "rule__Connectivity__Group__5"
    // InternalNabla.g:4247:1: rule__Connectivity__Group__5 : rule__Connectivity__Group__5__Impl rule__Connectivity__Group__6 ;
    public final void rule__Connectivity__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4251:1: ( rule__Connectivity__Group__5__Impl rule__Connectivity__Group__6 )
            // InternalNabla.g:4252:2: rule__Connectivity__Group__5__Impl rule__Connectivity__Group__6
            {
            pushFollow(FOLLOW_36);
            rule__Connectivity__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Connectivity__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__5"


    // $ANTLR start "rule__Connectivity__Group__5__Impl"
    // InternalNabla.g:4259:1: rule__Connectivity__Group__5__Impl : ( '\\u2192' ) ;
    public final void rule__Connectivity__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4263:1: ( ( '\\u2192' ) )
            // InternalNabla.g:4264:1: ( '\\u2192' )
            {
            // InternalNabla.g:4264:1: ( '\\u2192' )
            // InternalNabla.g:4265:2: '\\u2192'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getRightwardsArrowKeyword_5()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getRightwardsArrowKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__5__Impl"


    // $ANTLR start "rule__Connectivity__Group__6"
    // InternalNabla.g:4274:1: rule__Connectivity__Group__6 : rule__Connectivity__Group__6__Impl rule__Connectivity__Group__7 ;
    public final void rule__Connectivity__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4278:1: ( rule__Connectivity__Group__6__Impl rule__Connectivity__Group__7 )
            // InternalNabla.g:4279:2: rule__Connectivity__Group__6__Impl rule__Connectivity__Group__7
            {
            pushFollow(FOLLOW_4);
            rule__Connectivity__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Connectivity__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__6"


    // $ANTLR start "rule__Connectivity__Group__6__Impl"
    // InternalNabla.g:4286:1: rule__Connectivity__Group__6__Impl : ( ( rule__Connectivity__ReturnTypeAssignment_6 ) ) ;
    public final void rule__Connectivity__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4290:1: ( ( ( rule__Connectivity__ReturnTypeAssignment_6 ) ) )
            // InternalNabla.g:4291:1: ( ( rule__Connectivity__ReturnTypeAssignment_6 ) )
            {
            // InternalNabla.g:4291:1: ( ( rule__Connectivity__ReturnTypeAssignment_6 ) )
            // InternalNabla.g:4292:2: ( rule__Connectivity__ReturnTypeAssignment_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getReturnTypeAssignment_6()); 
            }
            // InternalNabla.g:4293:2: ( rule__Connectivity__ReturnTypeAssignment_6 )
            // InternalNabla.g:4293:3: rule__Connectivity__ReturnTypeAssignment_6
            {
            pushFollow(FOLLOW_2);
            rule__Connectivity__ReturnTypeAssignment_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getReturnTypeAssignment_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__6__Impl"


    // $ANTLR start "rule__Connectivity__Group__7"
    // InternalNabla.g:4301:1: rule__Connectivity__Group__7 : rule__Connectivity__Group__7__Impl ;
    public final void rule__Connectivity__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4305:1: ( rule__Connectivity__Group__7__Impl )
            // InternalNabla.g:4306:2: rule__Connectivity__Group__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Connectivity__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__7"


    // $ANTLR start "rule__Connectivity__Group__7__Impl"
    // InternalNabla.g:4312:1: rule__Connectivity__Group__7__Impl : ( ';' ) ;
    public final void rule__Connectivity__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4316:1: ( ( ';' ) )
            // InternalNabla.g:4317:1: ( ';' )
            {
            // InternalNabla.g:4317:1: ( ';' )
            // InternalNabla.g:4318:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getSemicolonKeyword_7()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getSemicolonKeyword_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__7__Impl"


    // $ANTLR start "rule__Connectivity__Group_3_0__0"
    // InternalNabla.g:4328:1: rule__Connectivity__Group_3_0__0 : rule__Connectivity__Group_3_0__0__Impl rule__Connectivity__Group_3_0__1 ;
    public final void rule__Connectivity__Group_3_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4332:1: ( rule__Connectivity__Group_3_0__0__Impl rule__Connectivity__Group_3_0__1 )
            // InternalNabla.g:4333:2: rule__Connectivity__Group_3_0__0__Impl rule__Connectivity__Group_3_0__1
            {
            pushFollow(FOLLOW_17);
            rule__Connectivity__Group_3_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Connectivity__Group_3_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group_3_0__0"


    // $ANTLR start "rule__Connectivity__Group_3_0__0__Impl"
    // InternalNabla.g:4340:1: rule__Connectivity__Group_3_0__0__Impl : ( ( rule__Connectivity__InTypesAssignment_3_0_0 ) ) ;
    public final void rule__Connectivity__Group_3_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4344:1: ( ( ( rule__Connectivity__InTypesAssignment_3_0_0 ) ) )
            // InternalNabla.g:4345:1: ( ( rule__Connectivity__InTypesAssignment_3_0_0 ) )
            {
            // InternalNabla.g:4345:1: ( ( rule__Connectivity__InTypesAssignment_3_0_0 ) )
            // InternalNabla.g:4346:2: ( rule__Connectivity__InTypesAssignment_3_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getInTypesAssignment_3_0_0()); 
            }
            // InternalNabla.g:4347:2: ( rule__Connectivity__InTypesAssignment_3_0_0 )
            // InternalNabla.g:4347:3: rule__Connectivity__InTypesAssignment_3_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Connectivity__InTypesAssignment_3_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getInTypesAssignment_3_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group_3_0__0__Impl"


    // $ANTLR start "rule__Connectivity__Group_3_0__1"
    // InternalNabla.g:4355:1: rule__Connectivity__Group_3_0__1 : rule__Connectivity__Group_3_0__1__Impl ;
    public final void rule__Connectivity__Group_3_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4359:1: ( rule__Connectivity__Group_3_0__1__Impl )
            // InternalNabla.g:4360:2: rule__Connectivity__Group_3_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Connectivity__Group_3_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group_3_0__1"


    // $ANTLR start "rule__Connectivity__Group_3_0__1__Impl"
    // InternalNabla.g:4366:1: rule__Connectivity__Group_3_0__1__Impl : ( ( rule__Connectivity__Group_3_0_1__0 )* ) ;
    public final void rule__Connectivity__Group_3_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4370:1: ( ( ( rule__Connectivity__Group_3_0_1__0 )* ) )
            // InternalNabla.g:4371:1: ( ( rule__Connectivity__Group_3_0_1__0 )* )
            {
            // InternalNabla.g:4371:1: ( ( rule__Connectivity__Group_3_0_1__0 )* )
            // InternalNabla.g:4372:2: ( rule__Connectivity__Group_3_0_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getGroup_3_0_1()); 
            }
            // InternalNabla.g:4373:2: ( rule__Connectivity__Group_3_0_1__0 )*
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( (LA36_0==41) ) {
                    alt36=1;
                }


                switch (alt36) {
            	case 1 :
            	    // InternalNabla.g:4373:3: rule__Connectivity__Group_3_0_1__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__Connectivity__Group_3_0_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop36;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getGroup_3_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group_3_0__1__Impl"


    // $ANTLR start "rule__Connectivity__Group_3_0_1__0"
    // InternalNabla.g:4382:1: rule__Connectivity__Group_3_0_1__0 : rule__Connectivity__Group_3_0_1__0__Impl rule__Connectivity__Group_3_0_1__1 ;
    public final void rule__Connectivity__Group_3_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4386:1: ( rule__Connectivity__Group_3_0_1__0__Impl rule__Connectivity__Group_3_0_1__1 )
            // InternalNabla.g:4387:2: rule__Connectivity__Group_3_0_1__0__Impl rule__Connectivity__Group_3_0_1__1
            {
            pushFollow(FOLLOW_37);
            rule__Connectivity__Group_3_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Connectivity__Group_3_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group_3_0_1__0"


    // $ANTLR start "rule__Connectivity__Group_3_0_1__0__Impl"
    // InternalNabla.g:4394:1: rule__Connectivity__Group_3_0_1__0__Impl : ( ',' ) ;
    public final void rule__Connectivity__Group_3_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4398:1: ( ( ',' ) )
            // InternalNabla.g:4399:1: ( ',' )
            {
            // InternalNabla.g:4399:1: ( ',' )
            // InternalNabla.g:4400:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getCommaKeyword_3_0_1_0()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getCommaKeyword_3_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group_3_0_1__0__Impl"


    // $ANTLR start "rule__Connectivity__Group_3_0_1__1"
    // InternalNabla.g:4409:1: rule__Connectivity__Group_3_0_1__1 : rule__Connectivity__Group_3_0_1__1__Impl ;
    public final void rule__Connectivity__Group_3_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4413:1: ( rule__Connectivity__Group_3_0_1__1__Impl )
            // InternalNabla.g:4414:2: rule__Connectivity__Group_3_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Connectivity__Group_3_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group_3_0_1__1"


    // $ANTLR start "rule__Connectivity__Group_3_0_1__1__Impl"
    // InternalNabla.g:4420:1: rule__Connectivity__Group_3_0_1__1__Impl : ( ( rule__Connectivity__InTypesAssignment_3_0_1_1 ) ) ;
    public final void rule__Connectivity__Group_3_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4424:1: ( ( ( rule__Connectivity__InTypesAssignment_3_0_1_1 ) ) )
            // InternalNabla.g:4425:1: ( ( rule__Connectivity__InTypesAssignment_3_0_1_1 ) )
            {
            // InternalNabla.g:4425:1: ( ( rule__Connectivity__InTypesAssignment_3_0_1_1 ) )
            // InternalNabla.g:4426:2: ( rule__Connectivity__InTypesAssignment_3_0_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getInTypesAssignment_3_0_1_1()); 
            }
            // InternalNabla.g:4427:2: ( rule__Connectivity__InTypesAssignment_3_0_1_1 )
            // InternalNabla.g:4427:3: rule__Connectivity__InTypesAssignment_3_0_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Connectivity__InTypesAssignment_3_0_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getInTypesAssignment_3_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group_3_0_1__1__Impl"


    // $ANTLR start "rule__ItemArgType__Group_0__0"
    // InternalNabla.g:4436:1: rule__ItemArgType__Group_0__0 : rule__ItemArgType__Group_0__0__Impl rule__ItemArgType__Group_0__1 ;
    public final void rule__ItemArgType__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4440:1: ( rule__ItemArgType__Group_0__0__Impl rule__ItemArgType__Group_0__1 )
            // InternalNabla.g:4441:2: rule__ItemArgType__Group_0__0__Impl rule__ItemArgType__Group_0__1
            {
            pushFollow(FOLLOW_37);
            rule__ItemArgType__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ItemArgType__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItemArgType__Group_0__0"


    // $ANTLR start "rule__ItemArgType__Group_0__0__Impl"
    // InternalNabla.g:4448:1: rule__ItemArgType__Group_0__0__Impl : ( ( rule__ItemArgType__MultipleAssignment_0_0 ) ) ;
    public final void rule__ItemArgType__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4452:1: ( ( ( rule__ItemArgType__MultipleAssignment_0_0 ) ) )
            // InternalNabla.g:4453:1: ( ( rule__ItemArgType__MultipleAssignment_0_0 ) )
            {
            // InternalNabla.g:4453:1: ( ( rule__ItemArgType__MultipleAssignment_0_0 ) )
            // InternalNabla.g:4454:2: ( rule__ItemArgType__MultipleAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItemArgTypeAccess().getMultipleAssignment_0_0()); 
            }
            // InternalNabla.g:4455:2: ( rule__ItemArgType__MultipleAssignment_0_0 )
            // InternalNabla.g:4455:3: rule__ItemArgType__MultipleAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__ItemArgType__MultipleAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItemArgTypeAccess().getMultipleAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItemArgType__Group_0__0__Impl"


    // $ANTLR start "rule__ItemArgType__Group_0__1"
    // InternalNabla.g:4463:1: rule__ItemArgType__Group_0__1 : rule__ItemArgType__Group_0__1__Impl rule__ItemArgType__Group_0__2 ;
    public final void rule__ItemArgType__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4467:1: ( rule__ItemArgType__Group_0__1__Impl rule__ItemArgType__Group_0__2 )
            // InternalNabla.g:4468:2: rule__ItemArgType__Group_0__1__Impl rule__ItemArgType__Group_0__2
            {
            pushFollow(FOLLOW_18);
            rule__ItemArgType__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ItemArgType__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItemArgType__Group_0__1"


    // $ANTLR start "rule__ItemArgType__Group_0__1__Impl"
    // InternalNabla.g:4475:1: rule__ItemArgType__Group_0__1__Impl : ( ( rule__ItemArgType__TypeAssignment_0_1 ) ) ;
    public final void rule__ItemArgType__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4479:1: ( ( ( rule__ItemArgType__TypeAssignment_0_1 ) ) )
            // InternalNabla.g:4480:1: ( ( rule__ItemArgType__TypeAssignment_0_1 ) )
            {
            // InternalNabla.g:4480:1: ( ( rule__ItemArgType__TypeAssignment_0_1 ) )
            // InternalNabla.g:4481:2: ( rule__ItemArgType__TypeAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItemArgTypeAccess().getTypeAssignment_0_1()); 
            }
            // InternalNabla.g:4482:2: ( rule__ItemArgType__TypeAssignment_0_1 )
            // InternalNabla.g:4482:3: rule__ItemArgType__TypeAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__ItemArgType__TypeAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItemArgTypeAccess().getTypeAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItemArgType__Group_0__1__Impl"


    // $ANTLR start "rule__ItemArgType__Group_0__2"
    // InternalNabla.g:4490:1: rule__ItemArgType__Group_0__2 : rule__ItemArgType__Group_0__2__Impl ;
    public final void rule__ItemArgType__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4494:1: ( rule__ItemArgType__Group_0__2__Impl )
            // InternalNabla.g:4495:2: rule__ItemArgType__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ItemArgType__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItemArgType__Group_0__2"


    // $ANTLR start "rule__ItemArgType__Group_0__2__Impl"
    // InternalNabla.g:4501:1: rule__ItemArgType__Group_0__2__Impl : ( '}' ) ;
    public final void rule__ItemArgType__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4505:1: ( ( '}' ) )
            // InternalNabla.g:4506:1: ( '}' )
            {
            // InternalNabla.g:4506:1: ( '}' )
            // InternalNabla.g:4507:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItemArgTypeAccess().getRightCurlyBracketKeyword_0_2()); 
            }
            match(input,37,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItemArgTypeAccess().getRightCurlyBracketKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItemArgType__Group_0__2__Impl"


    // $ANTLR start "rule__Function__Group__0"
    // InternalNabla.g:4517:1: rule__Function__Group__0 : rule__Function__Group__0__Impl rule__Function__Group__1 ;
    public final void rule__Function__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4521:1: ( rule__Function__Group__0__Impl rule__Function__Group__1 )
            // InternalNabla.g:4522:2: rule__Function__Group__0__Impl rule__Function__Group__1
            {
            pushFollow(FOLLOW_3);
            rule__Function__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__0"


    // $ANTLR start "rule__Function__Group__0__Impl"
    // InternalNabla.g:4529:1: rule__Function__Group__0__Impl : ( () ) ;
    public final void rule__Function__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4533:1: ( ( () ) )
            // InternalNabla.g:4534:1: ( () )
            {
            // InternalNabla.g:4534:1: ( () )
            // InternalNabla.g:4535:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getFunctionAction_0()); 
            }
            // InternalNabla.g:4536:2: ()
            // InternalNabla.g:4536:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getFunctionAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__0__Impl"


    // $ANTLR start "rule__Function__Group__1"
    // InternalNabla.g:4544:1: rule__Function__Group__1 : rule__Function__Group__1__Impl rule__Function__Group__2 ;
    public final void rule__Function__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4548:1: ( rule__Function__Group__1__Impl rule__Function__Group__2 )
            // InternalNabla.g:4549:2: rule__Function__Group__1__Impl rule__Function__Group__2
            {
            pushFollow(FOLLOW_14);
            rule__Function__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__1"


    // $ANTLR start "rule__Function__Group__1__Impl"
    // InternalNabla.g:4556:1: rule__Function__Group__1__Impl : ( ( rule__Function__NameAssignment_1 ) ) ;
    public final void rule__Function__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4560:1: ( ( ( rule__Function__NameAssignment_1 ) ) )
            // InternalNabla.g:4561:1: ( ( rule__Function__NameAssignment_1 ) )
            {
            // InternalNabla.g:4561:1: ( ( rule__Function__NameAssignment_1 ) )
            // InternalNabla.g:4562:2: ( rule__Function__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getNameAssignment_1()); 
            }
            // InternalNabla.g:4563:2: ( rule__Function__NameAssignment_1 )
            // InternalNabla.g:4563:3: rule__Function__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Function__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__1__Impl"


    // $ANTLR start "rule__Function__Group__2"
    // InternalNabla.g:4571:1: rule__Function__Group__2 : rule__Function__Group__2__Impl rule__Function__Group__3 ;
    public final void rule__Function__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4575:1: ( rule__Function__Group__2__Impl rule__Function__Group__3 )
            // InternalNabla.g:4576:2: rule__Function__Group__2__Impl rule__Function__Group__3
            {
            pushFollow(FOLLOW_22);
            rule__Function__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__2"


    // $ANTLR start "rule__Function__Group__2__Impl"
    // InternalNabla.g:4583:1: rule__Function__Group__2__Impl : ( ':' ) ;
    public final void rule__Function__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4587:1: ( ( ':' ) )
            // InternalNabla.g:4588:1: ( ':' )
            {
            // InternalNabla.g:4588:1: ( ':' )
            // InternalNabla.g:4589:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getColonKeyword_2()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getColonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__2__Impl"


    // $ANTLR start "rule__Function__Group__3"
    // InternalNabla.g:4598:1: rule__Function__Group__3 : rule__Function__Group__3__Impl rule__Function__Group__4 ;
    public final void rule__Function__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4602:1: ( rule__Function__Group__3__Impl rule__Function__Group__4 )
            // InternalNabla.g:4603:2: rule__Function__Group__3__Impl rule__Function__Group__4
            {
            pushFollow(FOLLOW_31);
            rule__Function__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__3"


    // $ANTLR start "rule__Function__Group__3__Impl"
    // InternalNabla.g:4610:1: rule__Function__Group__3__Impl : ( ( rule__Function__ArgGroupsAssignment_3 ) ) ;
    public final void rule__Function__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4614:1: ( ( ( rule__Function__ArgGroupsAssignment_3 ) ) )
            // InternalNabla.g:4615:1: ( ( rule__Function__ArgGroupsAssignment_3 ) )
            {
            // InternalNabla.g:4615:1: ( ( rule__Function__ArgGroupsAssignment_3 ) )
            // InternalNabla.g:4616:2: ( rule__Function__ArgGroupsAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getArgGroupsAssignment_3()); 
            }
            // InternalNabla.g:4617:2: ( rule__Function__ArgGroupsAssignment_3 )
            // InternalNabla.g:4617:3: rule__Function__ArgGroupsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Function__ArgGroupsAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getArgGroupsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__3__Impl"


    // $ANTLR start "rule__Function__Group__4"
    // InternalNabla.g:4625:1: rule__Function__Group__4 : rule__Function__Group__4__Impl rule__Function__Group__5 ;
    public final void rule__Function__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4629:1: ( rule__Function__Group__4__Impl rule__Function__Group__5 )
            // InternalNabla.g:4630:2: rule__Function__Group__4__Impl rule__Function__Group__5
            {
            pushFollow(FOLLOW_31);
            rule__Function__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__4"


    // $ANTLR start "rule__Function__Group__4__Impl"
    // InternalNabla.g:4637:1: rule__Function__Group__4__Impl : ( ( rule__Function__Group_4__0 )* ) ;
    public final void rule__Function__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4641:1: ( ( ( rule__Function__Group_4__0 )* ) )
            // InternalNabla.g:4642:1: ( ( rule__Function__Group_4__0 )* )
            {
            // InternalNabla.g:4642:1: ( ( rule__Function__Group_4__0 )* )
            // InternalNabla.g:4643:2: ( rule__Function__Group_4__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGroup_4()); 
            }
            // InternalNabla.g:4644:2: ( rule__Function__Group_4__0 )*
            loop37:
            do {
                int alt37=2;
                int LA37_0 = input.LA(1);

                if ( (LA37_0==41) ) {
                    alt37=1;
                }


                switch (alt37) {
            	case 1 :
            	    // InternalNabla.g:4644:3: rule__Function__Group_4__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__Function__Group_4__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop37;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__4__Impl"


    // $ANTLR start "rule__Function__Group__5"
    // InternalNabla.g:4652:1: rule__Function__Group__5 : rule__Function__Group__5__Impl ;
    public final void rule__Function__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4656:1: ( rule__Function__Group__5__Impl )
            // InternalNabla.g:4657:2: rule__Function__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Function__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__5"


    // $ANTLR start "rule__Function__Group__5__Impl"
    // InternalNabla.g:4663:1: rule__Function__Group__5__Impl : ( ';' ) ;
    public final void rule__Function__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4667:1: ( ( ';' ) )
            // InternalNabla.g:4668:1: ( ';' )
            {
            // InternalNabla.g:4668:1: ( ';' )
            // InternalNabla.g:4669:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getSemicolonKeyword_5()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getSemicolonKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__5__Impl"


    // $ANTLR start "rule__Function__Group_4__0"
    // InternalNabla.g:4679:1: rule__Function__Group_4__0 : rule__Function__Group_4__0__Impl rule__Function__Group_4__1 ;
    public final void rule__Function__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4683:1: ( rule__Function__Group_4__0__Impl rule__Function__Group_4__1 )
            // InternalNabla.g:4684:2: rule__Function__Group_4__0__Impl rule__Function__Group_4__1
            {
            pushFollow(FOLLOW_22);
            rule__Function__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_4__0"


    // $ANTLR start "rule__Function__Group_4__0__Impl"
    // InternalNabla.g:4691:1: rule__Function__Group_4__0__Impl : ( ',' ) ;
    public final void rule__Function__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4695:1: ( ( ',' ) )
            // InternalNabla.g:4696:1: ( ',' )
            {
            // InternalNabla.g:4696:1: ( ',' )
            // InternalNabla.g:4697:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getCommaKeyword_4_0()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getCommaKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_4__0__Impl"


    // $ANTLR start "rule__Function__Group_4__1"
    // InternalNabla.g:4706:1: rule__Function__Group_4__1 : rule__Function__Group_4__1__Impl ;
    public final void rule__Function__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4710:1: ( rule__Function__Group_4__1__Impl )
            // InternalNabla.g:4711:2: rule__Function__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Function__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_4__1"


    // $ANTLR start "rule__Function__Group_4__1__Impl"
    // InternalNabla.g:4717:1: rule__Function__Group_4__1__Impl : ( ( rule__Function__ArgGroupsAssignment_4_1 ) ) ;
    public final void rule__Function__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4721:1: ( ( ( rule__Function__ArgGroupsAssignment_4_1 ) ) )
            // InternalNabla.g:4722:1: ( ( rule__Function__ArgGroupsAssignment_4_1 ) )
            {
            // InternalNabla.g:4722:1: ( ( rule__Function__ArgGroupsAssignment_4_1 ) )
            // InternalNabla.g:4723:2: ( rule__Function__ArgGroupsAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getArgGroupsAssignment_4_1()); 
            }
            // InternalNabla.g:4724:2: ( rule__Function__ArgGroupsAssignment_4_1 )
            // InternalNabla.g:4724:3: rule__Function__ArgGroupsAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__Function__ArgGroupsAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getArgGroupsAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_4__1__Impl"


    // $ANTLR start "rule__FunctionArg__Group__0"
    // InternalNabla.g:4733:1: rule__FunctionArg__Group__0 : rule__FunctionArg__Group__0__Impl rule__FunctionArg__Group__1 ;
    public final void rule__FunctionArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4737:1: ( rule__FunctionArg__Group__0__Impl rule__FunctionArg__Group__1 )
            // InternalNabla.g:4738:2: rule__FunctionArg__Group__0__Impl rule__FunctionArg__Group__1
            {
            pushFollow(FOLLOW_38);
            rule__FunctionArg__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionArg__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group__0"


    // $ANTLR start "rule__FunctionArg__Group__0__Impl"
    // InternalNabla.g:4745:1: rule__FunctionArg__Group__0__Impl : ( '(' ) ;
    public final void rule__FunctionArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4749:1: ( ( '(' ) )
            // InternalNabla.g:4750:1: ( '(' )
            {
            // InternalNabla.g:4750:1: ( '(' )
            // InternalNabla.g:4751:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionArgAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionArgAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group__0__Impl"


    // $ANTLR start "rule__FunctionArg__Group__1"
    // InternalNabla.g:4760:1: rule__FunctionArg__Group__1 : rule__FunctionArg__Group__1__Impl rule__FunctionArg__Group__2 ;
    public final void rule__FunctionArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4764:1: ( rule__FunctionArg__Group__1__Impl rule__FunctionArg__Group__2 )
            // InternalNabla.g:4765:2: rule__FunctionArg__Group__1__Impl rule__FunctionArg__Group__2
            {
            pushFollow(FOLLOW_23);
            rule__FunctionArg__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionArg__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group__1"


    // $ANTLR start "rule__FunctionArg__Group__1__Impl"
    // InternalNabla.g:4772:1: rule__FunctionArg__Group__1__Impl : ( ( rule__FunctionArg__Alternatives_1 ) ) ;
    public final void rule__FunctionArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4776:1: ( ( ( rule__FunctionArg__Alternatives_1 ) ) )
            // InternalNabla.g:4777:1: ( ( rule__FunctionArg__Alternatives_1 ) )
            {
            // InternalNabla.g:4777:1: ( ( rule__FunctionArg__Alternatives_1 ) )
            // InternalNabla.g:4778:2: ( rule__FunctionArg__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionArgAccess().getAlternatives_1()); 
            }
            // InternalNabla.g:4779:2: ( rule__FunctionArg__Alternatives_1 )
            // InternalNabla.g:4779:3: rule__FunctionArg__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__FunctionArg__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionArgAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group__1__Impl"


    // $ANTLR start "rule__FunctionArg__Group__2"
    // InternalNabla.g:4787:1: rule__FunctionArg__Group__2 : rule__FunctionArg__Group__2__Impl rule__FunctionArg__Group__3 ;
    public final void rule__FunctionArg__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4791:1: ( rule__FunctionArg__Group__2__Impl rule__FunctionArg__Group__3 )
            // InternalNabla.g:4792:2: rule__FunctionArg__Group__2__Impl rule__FunctionArg__Group__3
            {
            pushFollow(FOLLOW_35);
            rule__FunctionArg__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionArg__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group__2"


    // $ANTLR start "rule__FunctionArg__Group__2__Impl"
    // InternalNabla.g:4799:1: rule__FunctionArg__Group__2__Impl : ( ')' ) ;
    public final void rule__FunctionArg__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4803:1: ( ( ')' ) )
            // InternalNabla.g:4804:1: ( ')' )
            {
            // InternalNabla.g:4804:1: ( ')' )
            // InternalNabla.g:4805:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionArgAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionArgAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group__2__Impl"


    // $ANTLR start "rule__FunctionArg__Group__3"
    // InternalNabla.g:4814:1: rule__FunctionArg__Group__3 : rule__FunctionArg__Group__3__Impl rule__FunctionArg__Group__4 ;
    public final void rule__FunctionArg__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4818:1: ( rule__FunctionArg__Group__3__Impl rule__FunctionArg__Group__4 )
            // InternalNabla.g:4819:2: rule__FunctionArg__Group__3__Impl rule__FunctionArg__Group__4
            {
            pushFollow(FOLLOW_30);
            rule__FunctionArg__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionArg__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group__3"


    // $ANTLR start "rule__FunctionArg__Group__3__Impl"
    // InternalNabla.g:4826:1: rule__FunctionArg__Group__3__Impl : ( '\\u2192' ) ;
    public final void rule__FunctionArg__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4830:1: ( ( '\\u2192' ) )
            // InternalNabla.g:4831:1: ( '\\u2192' )
            {
            // InternalNabla.g:4831:1: ( '\\u2192' )
            // InternalNabla.g:4832:2: '\\u2192'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionArgAccess().getRightwardsArrowKeyword_3()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionArgAccess().getRightwardsArrowKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group__3__Impl"


    // $ANTLR start "rule__FunctionArg__Group__4"
    // InternalNabla.g:4841:1: rule__FunctionArg__Group__4 : rule__FunctionArg__Group__4__Impl ;
    public final void rule__FunctionArg__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4845:1: ( rule__FunctionArg__Group__4__Impl )
            // InternalNabla.g:4846:2: rule__FunctionArg__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionArg__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group__4"


    // $ANTLR start "rule__FunctionArg__Group__4__Impl"
    // InternalNabla.g:4852:1: rule__FunctionArg__Group__4__Impl : ( ( rule__FunctionArg__ReturnTypeAssignment_4 ) ) ;
    public final void rule__FunctionArg__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4856:1: ( ( ( rule__FunctionArg__ReturnTypeAssignment_4 ) ) )
            // InternalNabla.g:4857:1: ( ( rule__FunctionArg__ReturnTypeAssignment_4 ) )
            {
            // InternalNabla.g:4857:1: ( ( rule__FunctionArg__ReturnTypeAssignment_4 ) )
            // InternalNabla.g:4858:2: ( rule__FunctionArg__ReturnTypeAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionArgAccess().getReturnTypeAssignment_4()); 
            }
            // InternalNabla.g:4859:2: ( rule__FunctionArg__ReturnTypeAssignment_4 )
            // InternalNabla.g:4859:3: rule__FunctionArg__ReturnTypeAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__FunctionArg__ReturnTypeAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionArgAccess().getReturnTypeAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group__4__Impl"


    // $ANTLR start "rule__FunctionArg__Group_1_0__0"
    // InternalNabla.g:4868:1: rule__FunctionArg__Group_1_0__0 : rule__FunctionArg__Group_1_0__0__Impl rule__FunctionArg__Group_1_0__1 ;
    public final void rule__FunctionArg__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4872:1: ( rule__FunctionArg__Group_1_0__0__Impl rule__FunctionArg__Group_1_0__1 )
            // InternalNabla.g:4873:2: rule__FunctionArg__Group_1_0__0__Impl rule__FunctionArg__Group_1_0__1
            {
            pushFollow(FOLLOW_17);
            rule__FunctionArg__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionArg__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group_1_0__0"


    // $ANTLR start "rule__FunctionArg__Group_1_0__0__Impl"
    // InternalNabla.g:4880:1: rule__FunctionArg__Group_1_0__0__Impl : ( ( rule__FunctionArg__InTypesAssignment_1_0_0 ) ) ;
    public final void rule__FunctionArg__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4884:1: ( ( ( rule__FunctionArg__InTypesAssignment_1_0_0 ) ) )
            // InternalNabla.g:4885:1: ( ( rule__FunctionArg__InTypesAssignment_1_0_0 ) )
            {
            // InternalNabla.g:4885:1: ( ( rule__FunctionArg__InTypesAssignment_1_0_0 ) )
            // InternalNabla.g:4886:2: ( rule__FunctionArg__InTypesAssignment_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionArgAccess().getInTypesAssignment_1_0_0()); 
            }
            // InternalNabla.g:4887:2: ( rule__FunctionArg__InTypesAssignment_1_0_0 )
            // InternalNabla.g:4887:3: rule__FunctionArg__InTypesAssignment_1_0_0
            {
            pushFollow(FOLLOW_2);
            rule__FunctionArg__InTypesAssignment_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionArgAccess().getInTypesAssignment_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group_1_0__0__Impl"


    // $ANTLR start "rule__FunctionArg__Group_1_0__1"
    // InternalNabla.g:4895:1: rule__FunctionArg__Group_1_0__1 : rule__FunctionArg__Group_1_0__1__Impl ;
    public final void rule__FunctionArg__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4899:1: ( rule__FunctionArg__Group_1_0__1__Impl )
            // InternalNabla.g:4900:2: rule__FunctionArg__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionArg__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group_1_0__1"


    // $ANTLR start "rule__FunctionArg__Group_1_0__1__Impl"
    // InternalNabla.g:4906:1: rule__FunctionArg__Group_1_0__1__Impl : ( ( rule__FunctionArg__Group_1_0_1__0 )* ) ;
    public final void rule__FunctionArg__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4910:1: ( ( ( rule__FunctionArg__Group_1_0_1__0 )* ) )
            // InternalNabla.g:4911:1: ( ( rule__FunctionArg__Group_1_0_1__0 )* )
            {
            // InternalNabla.g:4911:1: ( ( rule__FunctionArg__Group_1_0_1__0 )* )
            // InternalNabla.g:4912:2: ( rule__FunctionArg__Group_1_0_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionArgAccess().getGroup_1_0_1()); 
            }
            // InternalNabla.g:4913:2: ( rule__FunctionArg__Group_1_0_1__0 )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==41) ) {
                    alt38=1;
                }


                switch (alt38) {
            	case 1 :
            	    // InternalNabla.g:4913:3: rule__FunctionArg__Group_1_0_1__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__FunctionArg__Group_1_0_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionArgAccess().getGroup_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group_1_0__1__Impl"


    // $ANTLR start "rule__FunctionArg__Group_1_0_1__0"
    // InternalNabla.g:4922:1: rule__FunctionArg__Group_1_0_1__0 : rule__FunctionArg__Group_1_0_1__0__Impl rule__FunctionArg__Group_1_0_1__1 ;
    public final void rule__FunctionArg__Group_1_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4926:1: ( rule__FunctionArg__Group_1_0_1__0__Impl rule__FunctionArg__Group_1_0_1__1 )
            // InternalNabla.g:4927:2: rule__FunctionArg__Group_1_0_1__0__Impl rule__FunctionArg__Group_1_0_1__1
            {
            pushFollow(FOLLOW_30);
            rule__FunctionArg__Group_1_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionArg__Group_1_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group_1_0_1__0"


    // $ANTLR start "rule__FunctionArg__Group_1_0_1__0__Impl"
    // InternalNabla.g:4934:1: rule__FunctionArg__Group_1_0_1__0__Impl : ( ',' ) ;
    public final void rule__FunctionArg__Group_1_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4938:1: ( ( ',' ) )
            // InternalNabla.g:4939:1: ( ',' )
            {
            // InternalNabla.g:4939:1: ( ',' )
            // InternalNabla.g:4940:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionArgAccess().getCommaKeyword_1_0_1_0()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionArgAccess().getCommaKeyword_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group_1_0_1__0__Impl"


    // $ANTLR start "rule__FunctionArg__Group_1_0_1__1"
    // InternalNabla.g:4949:1: rule__FunctionArg__Group_1_0_1__1 : rule__FunctionArg__Group_1_0_1__1__Impl ;
    public final void rule__FunctionArg__Group_1_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4953:1: ( rule__FunctionArg__Group_1_0_1__1__Impl )
            // InternalNabla.g:4954:2: rule__FunctionArg__Group_1_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionArg__Group_1_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group_1_0_1__1"


    // $ANTLR start "rule__FunctionArg__Group_1_0_1__1__Impl"
    // InternalNabla.g:4960:1: rule__FunctionArg__Group_1_0_1__1__Impl : ( ( rule__FunctionArg__InTypesAssignment_1_0_1_1 ) ) ;
    public final void rule__FunctionArg__Group_1_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4964:1: ( ( ( rule__FunctionArg__InTypesAssignment_1_0_1_1 ) ) )
            // InternalNabla.g:4965:1: ( ( rule__FunctionArg__InTypesAssignment_1_0_1_1 ) )
            {
            // InternalNabla.g:4965:1: ( ( rule__FunctionArg__InTypesAssignment_1_0_1_1 ) )
            // InternalNabla.g:4966:2: ( rule__FunctionArg__InTypesAssignment_1_0_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionArgAccess().getInTypesAssignment_1_0_1_1()); 
            }
            // InternalNabla.g:4967:2: ( rule__FunctionArg__InTypesAssignment_1_0_1_1 )
            // InternalNabla.g:4967:3: rule__FunctionArg__InTypesAssignment_1_0_1_1
            {
            pushFollow(FOLLOW_2);
            rule__FunctionArg__InTypesAssignment_1_0_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionArgAccess().getInTypesAssignment_1_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group_1_0_1__1__Impl"


    // $ANTLR start "rule__Reduction__Group__0"
    // InternalNabla.g:4976:1: rule__Reduction__Group__0 : rule__Reduction__Group__0__Impl rule__Reduction__Group__1 ;
    public final void rule__Reduction__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4980:1: ( rule__Reduction__Group__0__Impl rule__Reduction__Group__1 )
            // InternalNabla.g:4981:2: rule__Reduction__Group__0__Impl rule__Reduction__Group__1
            {
            pushFollow(FOLLOW_3);
            rule__Reduction__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Reduction__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group__0"


    // $ANTLR start "rule__Reduction__Group__0__Impl"
    // InternalNabla.g:4988:1: rule__Reduction__Group__0__Impl : ( () ) ;
    public final void rule__Reduction__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4992:1: ( ( () ) )
            // InternalNabla.g:4993:1: ( () )
            {
            // InternalNabla.g:4993:1: ( () )
            // InternalNabla.g:4994:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionAccess().getReductionAction_0()); 
            }
            // InternalNabla.g:4995:2: ()
            // InternalNabla.g:4995:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionAccess().getReductionAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group__0__Impl"


    // $ANTLR start "rule__Reduction__Group__1"
    // InternalNabla.g:5003:1: rule__Reduction__Group__1 : rule__Reduction__Group__1__Impl rule__Reduction__Group__2 ;
    public final void rule__Reduction__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5007:1: ( rule__Reduction__Group__1__Impl rule__Reduction__Group__2 )
            // InternalNabla.g:5008:2: rule__Reduction__Group__1__Impl rule__Reduction__Group__2
            {
            pushFollow(FOLLOW_14);
            rule__Reduction__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Reduction__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group__1"


    // $ANTLR start "rule__Reduction__Group__1__Impl"
    // InternalNabla.g:5015:1: rule__Reduction__Group__1__Impl : ( ( rule__Reduction__NameAssignment_1 ) ) ;
    public final void rule__Reduction__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5019:1: ( ( ( rule__Reduction__NameAssignment_1 ) ) )
            // InternalNabla.g:5020:1: ( ( rule__Reduction__NameAssignment_1 ) )
            {
            // InternalNabla.g:5020:1: ( ( rule__Reduction__NameAssignment_1 ) )
            // InternalNabla.g:5021:2: ( rule__Reduction__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionAccess().getNameAssignment_1()); 
            }
            // InternalNabla.g:5022:2: ( rule__Reduction__NameAssignment_1 )
            // InternalNabla.g:5022:3: rule__Reduction__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Reduction__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group__1__Impl"


    // $ANTLR start "rule__Reduction__Group__2"
    // InternalNabla.g:5030:1: rule__Reduction__Group__2 : rule__Reduction__Group__2__Impl rule__Reduction__Group__3 ;
    public final void rule__Reduction__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5034:1: ( rule__Reduction__Group__2__Impl rule__Reduction__Group__3 )
            // InternalNabla.g:5035:2: rule__Reduction__Group__2__Impl rule__Reduction__Group__3
            {
            pushFollow(FOLLOW_22);
            rule__Reduction__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Reduction__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group__2"


    // $ANTLR start "rule__Reduction__Group__2__Impl"
    // InternalNabla.g:5042:1: rule__Reduction__Group__2__Impl : ( ':' ) ;
    public final void rule__Reduction__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5046:1: ( ( ':' ) )
            // InternalNabla.g:5047:1: ( ':' )
            {
            // InternalNabla.g:5047:1: ( ':' )
            // InternalNabla.g:5048:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionAccess().getColonKeyword_2()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionAccess().getColonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group__2__Impl"


    // $ANTLR start "rule__Reduction__Group__3"
    // InternalNabla.g:5057:1: rule__Reduction__Group__3 : rule__Reduction__Group__3__Impl rule__Reduction__Group__4 ;
    public final void rule__Reduction__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5061:1: ( rule__Reduction__Group__3__Impl rule__Reduction__Group__4 )
            // InternalNabla.g:5062:2: rule__Reduction__Group__3__Impl rule__Reduction__Group__4
            {
            pushFollow(FOLLOW_31);
            rule__Reduction__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Reduction__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group__3"


    // $ANTLR start "rule__Reduction__Group__3__Impl"
    // InternalNabla.g:5069:1: rule__Reduction__Group__3__Impl : ( ( rule__Reduction__ArgGroupsAssignment_3 ) ) ;
    public final void rule__Reduction__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5073:1: ( ( ( rule__Reduction__ArgGroupsAssignment_3 ) ) )
            // InternalNabla.g:5074:1: ( ( rule__Reduction__ArgGroupsAssignment_3 ) )
            {
            // InternalNabla.g:5074:1: ( ( rule__Reduction__ArgGroupsAssignment_3 ) )
            // InternalNabla.g:5075:2: ( rule__Reduction__ArgGroupsAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionAccess().getArgGroupsAssignment_3()); 
            }
            // InternalNabla.g:5076:2: ( rule__Reduction__ArgGroupsAssignment_3 )
            // InternalNabla.g:5076:3: rule__Reduction__ArgGroupsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Reduction__ArgGroupsAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionAccess().getArgGroupsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group__3__Impl"


    // $ANTLR start "rule__Reduction__Group__4"
    // InternalNabla.g:5084:1: rule__Reduction__Group__4 : rule__Reduction__Group__4__Impl rule__Reduction__Group__5 ;
    public final void rule__Reduction__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5088:1: ( rule__Reduction__Group__4__Impl rule__Reduction__Group__5 )
            // InternalNabla.g:5089:2: rule__Reduction__Group__4__Impl rule__Reduction__Group__5
            {
            pushFollow(FOLLOW_31);
            rule__Reduction__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Reduction__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group__4"


    // $ANTLR start "rule__Reduction__Group__4__Impl"
    // InternalNabla.g:5096:1: rule__Reduction__Group__4__Impl : ( ( rule__Reduction__Group_4__0 )* ) ;
    public final void rule__Reduction__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5100:1: ( ( ( rule__Reduction__Group_4__0 )* ) )
            // InternalNabla.g:5101:1: ( ( rule__Reduction__Group_4__0 )* )
            {
            // InternalNabla.g:5101:1: ( ( rule__Reduction__Group_4__0 )* )
            // InternalNabla.g:5102:2: ( rule__Reduction__Group_4__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionAccess().getGroup_4()); 
            }
            // InternalNabla.g:5103:2: ( rule__Reduction__Group_4__0 )*
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( (LA39_0==41) ) {
                    alt39=1;
                }


                switch (alt39) {
            	case 1 :
            	    // InternalNabla.g:5103:3: rule__Reduction__Group_4__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__Reduction__Group_4__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group__4__Impl"


    // $ANTLR start "rule__Reduction__Group__5"
    // InternalNabla.g:5111:1: rule__Reduction__Group__5 : rule__Reduction__Group__5__Impl ;
    public final void rule__Reduction__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5115:1: ( rule__Reduction__Group__5__Impl )
            // InternalNabla.g:5116:2: rule__Reduction__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Reduction__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group__5"


    // $ANTLR start "rule__Reduction__Group__5__Impl"
    // InternalNabla.g:5122:1: rule__Reduction__Group__5__Impl : ( ';' ) ;
    public final void rule__Reduction__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5126:1: ( ( ';' ) )
            // InternalNabla.g:5127:1: ( ';' )
            {
            // InternalNabla.g:5127:1: ( ';' )
            // InternalNabla.g:5128:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionAccess().getSemicolonKeyword_5()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionAccess().getSemicolonKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group__5__Impl"


    // $ANTLR start "rule__Reduction__Group_4__0"
    // InternalNabla.g:5138:1: rule__Reduction__Group_4__0 : rule__Reduction__Group_4__0__Impl rule__Reduction__Group_4__1 ;
    public final void rule__Reduction__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5142:1: ( rule__Reduction__Group_4__0__Impl rule__Reduction__Group_4__1 )
            // InternalNabla.g:5143:2: rule__Reduction__Group_4__0__Impl rule__Reduction__Group_4__1
            {
            pushFollow(FOLLOW_22);
            rule__Reduction__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Reduction__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group_4__0"


    // $ANTLR start "rule__Reduction__Group_4__0__Impl"
    // InternalNabla.g:5150:1: rule__Reduction__Group_4__0__Impl : ( ',' ) ;
    public final void rule__Reduction__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5154:1: ( ( ',' ) )
            // InternalNabla.g:5155:1: ( ',' )
            {
            // InternalNabla.g:5155:1: ( ',' )
            // InternalNabla.g:5156:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionAccess().getCommaKeyword_4_0()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionAccess().getCommaKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group_4__0__Impl"


    // $ANTLR start "rule__Reduction__Group_4__1"
    // InternalNabla.g:5165:1: rule__Reduction__Group_4__1 : rule__Reduction__Group_4__1__Impl ;
    public final void rule__Reduction__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5169:1: ( rule__Reduction__Group_4__1__Impl )
            // InternalNabla.g:5170:2: rule__Reduction__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Reduction__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group_4__1"


    // $ANTLR start "rule__Reduction__Group_4__1__Impl"
    // InternalNabla.g:5176:1: rule__Reduction__Group_4__1__Impl : ( ( rule__Reduction__ArgGroupsAssignment_4_1 ) ) ;
    public final void rule__Reduction__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5180:1: ( ( ( rule__Reduction__ArgGroupsAssignment_4_1 ) ) )
            // InternalNabla.g:5181:1: ( ( rule__Reduction__ArgGroupsAssignment_4_1 ) )
            {
            // InternalNabla.g:5181:1: ( ( rule__Reduction__ArgGroupsAssignment_4_1 ) )
            // InternalNabla.g:5182:2: ( rule__Reduction__ArgGroupsAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionAccess().getArgGroupsAssignment_4_1()); 
            }
            // InternalNabla.g:5183:2: ( rule__Reduction__ArgGroupsAssignment_4_1 )
            // InternalNabla.g:5183:3: rule__Reduction__ArgGroupsAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__Reduction__ArgGroupsAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionAccess().getArgGroupsAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group_4__1__Impl"


    // $ANTLR start "rule__ReductionArg__Group__0"
    // InternalNabla.g:5192:1: rule__ReductionArg__Group__0 : rule__ReductionArg__Group__0__Impl rule__ReductionArg__Group__1 ;
    public final void rule__ReductionArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5196:1: ( rule__ReductionArg__Group__0__Impl rule__ReductionArg__Group__1 )
            // InternalNabla.g:5197:2: rule__ReductionArg__Group__0__Impl rule__ReductionArg__Group__1
            {
            pushFollow(FOLLOW_21);
            rule__ReductionArg__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ReductionArg__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__Group__0"


    // $ANTLR start "rule__ReductionArg__Group__0__Impl"
    // InternalNabla.g:5204:1: rule__ReductionArg__Group__0__Impl : ( '(' ) ;
    public final void rule__ReductionArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5208:1: ( ( '(' ) )
            // InternalNabla.g:5209:1: ( '(' )
            {
            // InternalNabla.g:5209:1: ( '(' )
            // InternalNabla.g:5210:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionArgAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionArgAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__Group__0__Impl"


    // $ANTLR start "rule__ReductionArg__Group__1"
    // InternalNabla.g:5219:1: rule__ReductionArg__Group__1 : rule__ReductionArg__Group__1__Impl rule__ReductionArg__Group__2 ;
    public final void rule__ReductionArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5223:1: ( rule__ReductionArg__Group__1__Impl rule__ReductionArg__Group__2 )
            // InternalNabla.g:5224:2: rule__ReductionArg__Group__1__Impl rule__ReductionArg__Group__2
            {
            pushFollow(FOLLOW_17);
            rule__ReductionArg__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ReductionArg__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__Group__1"


    // $ANTLR start "rule__ReductionArg__Group__1__Impl"
    // InternalNabla.g:5231:1: rule__ReductionArg__Group__1__Impl : ( ( rule__ReductionArg__SeedAssignment_1 ) ) ;
    public final void rule__ReductionArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5235:1: ( ( ( rule__ReductionArg__SeedAssignment_1 ) ) )
            // InternalNabla.g:5236:1: ( ( rule__ReductionArg__SeedAssignment_1 ) )
            {
            // InternalNabla.g:5236:1: ( ( rule__ReductionArg__SeedAssignment_1 ) )
            // InternalNabla.g:5237:2: ( rule__ReductionArg__SeedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionArgAccess().getSeedAssignment_1()); 
            }
            // InternalNabla.g:5238:2: ( rule__ReductionArg__SeedAssignment_1 )
            // InternalNabla.g:5238:3: rule__ReductionArg__SeedAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ReductionArg__SeedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionArgAccess().getSeedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__Group__1__Impl"


    // $ANTLR start "rule__ReductionArg__Group__2"
    // InternalNabla.g:5246:1: rule__ReductionArg__Group__2 : rule__ReductionArg__Group__2__Impl rule__ReductionArg__Group__3 ;
    public final void rule__ReductionArg__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5250:1: ( rule__ReductionArg__Group__2__Impl rule__ReductionArg__Group__3 )
            // InternalNabla.g:5251:2: rule__ReductionArg__Group__2__Impl rule__ReductionArg__Group__3
            {
            pushFollow(FOLLOW_30);
            rule__ReductionArg__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ReductionArg__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__Group__2"


    // $ANTLR start "rule__ReductionArg__Group__2__Impl"
    // InternalNabla.g:5258:1: rule__ReductionArg__Group__2__Impl : ( ',' ) ;
    public final void rule__ReductionArg__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5262:1: ( ( ',' ) )
            // InternalNabla.g:5263:1: ( ',' )
            {
            // InternalNabla.g:5263:1: ( ',' )
            // InternalNabla.g:5264:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionArgAccess().getCommaKeyword_2()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionArgAccess().getCommaKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__Group__2__Impl"


    // $ANTLR start "rule__ReductionArg__Group__3"
    // InternalNabla.g:5273:1: rule__ReductionArg__Group__3 : rule__ReductionArg__Group__3__Impl rule__ReductionArg__Group__4 ;
    public final void rule__ReductionArg__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5277:1: ( rule__ReductionArg__Group__3__Impl rule__ReductionArg__Group__4 )
            // InternalNabla.g:5278:2: rule__ReductionArg__Group__3__Impl rule__ReductionArg__Group__4
            {
            pushFollow(FOLLOW_23);
            rule__ReductionArg__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ReductionArg__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__Group__3"


    // $ANTLR start "rule__ReductionArg__Group__3__Impl"
    // InternalNabla.g:5285:1: rule__ReductionArg__Group__3__Impl : ( ( rule__ReductionArg__CollectionTypeAssignment_3 ) ) ;
    public final void rule__ReductionArg__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5289:1: ( ( ( rule__ReductionArg__CollectionTypeAssignment_3 ) ) )
            // InternalNabla.g:5290:1: ( ( rule__ReductionArg__CollectionTypeAssignment_3 ) )
            {
            // InternalNabla.g:5290:1: ( ( rule__ReductionArg__CollectionTypeAssignment_3 ) )
            // InternalNabla.g:5291:2: ( rule__ReductionArg__CollectionTypeAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionArgAccess().getCollectionTypeAssignment_3()); 
            }
            // InternalNabla.g:5292:2: ( rule__ReductionArg__CollectionTypeAssignment_3 )
            // InternalNabla.g:5292:3: rule__ReductionArg__CollectionTypeAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__ReductionArg__CollectionTypeAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionArgAccess().getCollectionTypeAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__Group__3__Impl"


    // $ANTLR start "rule__ReductionArg__Group__4"
    // InternalNabla.g:5300:1: rule__ReductionArg__Group__4 : rule__ReductionArg__Group__4__Impl rule__ReductionArg__Group__5 ;
    public final void rule__ReductionArg__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5304:1: ( rule__ReductionArg__Group__4__Impl rule__ReductionArg__Group__5 )
            // InternalNabla.g:5305:2: rule__ReductionArg__Group__4__Impl rule__ReductionArg__Group__5
            {
            pushFollow(FOLLOW_35);
            rule__ReductionArg__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ReductionArg__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__Group__4"


    // $ANTLR start "rule__ReductionArg__Group__4__Impl"
    // InternalNabla.g:5312:1: rule__ReductionArg__Group__4__Impl : ( ')' ) ;
    public final void rule__ReductionArg__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5316:1: ( ( ')' ) )
            // InternalNabla.g:5317:1: ( ')' )
            {
            // InternalNabla.g:5317:1: ( ')' )
            // InternalNabla.g:5318:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionArgAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionArgAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__Group__4__Impl"


    // $ANTLR start "rule__ReductionArg__Group__5"
    // InternalNabla.g:5327:1: rule__ReductionArg__Group__5 : rule__ReductionArg__Group__5__Impl rule__ReductionArg__Group__6 ;
    public final void rule__ReductionArg__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5331:1: ( rule__ReductionArg__Group__5__Impl rule__ReductionArg__Group__6 )
            // InternalNabla.g:5332:2: rule__ReductionArg__Group__5__Impl rule__ReductionArg__Group__6
            {
            pushFollow(FOLLOW_30);
            rule__ReductionArg__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ReductionArg__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__Group__5"


    // $ANTLR start "rule__ReductionArg__Group__5__Impl"
    // InternalNabla.g:5339:1: rule__ReductionArg__Group__5__Impl : ( '\\u2192' ) ;
    public final void rule__ReductionArg__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5343:1: ( ( '\\u2192' ) )
            // InternalNabla.g:5344:1: ( '\\u2192' )
            {
            // InternalNabla.g:5344:1: ( '\\u2192' )
            // InternalNabla.g:5345:2: '\\u2192'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionArgAccess().getRightwardsArrowKeyword_5()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionArgAccess().getRightwardsArrowKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__Group__5__Impl"


    // $ANTLR start "rule__ReductionArg__Group__6"
    // InternalNabla.g:5354:1: rule__ReductionArg__Group__6 : rule__ReductionArg__Group__6__Impl ;
    public final void rule__ReductionArg__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5358:1: ( rule__ReductionArg__Group__6__Impl )
            // InternalNabla.g:5359:2: rule__ReductionArg__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ReductionArg__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__Group__6"


    // $ANTLR start "rule__ReductionArg__Group__6__Impl"
    // InternalNabla.g:5365:1: rule__ReductionArg__Group__6__Impl : ( ( rule__ReductionArg__ReturnTypeAssignment_6 ) ) ;
    public final void rule__ReductionArg__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5369:1: ( ( ( rule__ReductionArg__ReturnTypeAssignment_6 ) ) )
            // InternalNabla.g:5370:1: ( ( rule__ReductionArg__ReturnTypeAssignment_6 ) )
            {
            // InternalNabla.g:5370:1: ( ( rule__ReductionArg__ReturnTypeAssignment_6 ) )
            // InternalNabla.g:5371:2: ( rule__ReductionArg__ReturnTypeAssignment_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionArgAccess().getReturnTypeAssignment_6()); 
            }
            // InternalNabla.g:5372:2: ( rule__ReductionArg__ReturnTypeAssignment_6 )
            // InternalNabla.g:5372:3: rule__ReductionArg__ReturnTypeAssignment_6
            {
            pushFollow(FOLLOW_2);
            rule__ReductionArg__ReturnTypeAssignment_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionArgAccess().getReturnTypeAssignment_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__Group__6__Impl"


    // $ANTLR start "rule__Or__Group__0"
    // InternalNabla.g:5381:1: rule__Or__Group__0 : rule__Or__Group__0__Impl rule__Or__Group__1 ;
    public final void rule__Or__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5385:1: ( rule__Or__Group__0__Impl rule__Or__Group__1 )
            // InternalNabla.g:5386:2: rule__Or__Group__0__Impl rule__Or__Group__1
            {
            pushFollow(FOLLOW_39);
            rule__Or__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Or__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__0"


    // $ANTLR start "rule__Or__Group__0__Impl"
    // InternalNabla.g:5393:1: rule__Or__Group__0__Impl : ( ruleAnd ) ;
    public final void rule__Or__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5397:1: ( ( ruleAnd ) )
            // InternalNabla.g:5398:1: ( ruleAnd )
            {
            // InternalNabla.g:5398:1: ( ruleAnd )
            // InternalNabla.g:5399:2: ruleAnd
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getAndParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnd();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getAndParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__0__Impl"


    // $ANTLR start "rule__Or__Group__1"
    // InternalNabla.g:5408:1: rule__Or__Group__1 : rule__Or__Group__1__Impl ;
    public final void rule__Or__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5412:1: ( rule__Or__Group__1__Impl )
            // InternalNabla.g:5413:2: rule__Or__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Or__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__1"


    // $ANTLR start "rule__Or__Group__1__Impl"
    // InternalNabla.g:5419:1: rule__Or__Group__1__Impl : ( ( rule__Or__Group_1__0 )* ) ;
    public final void rule__Or__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5423:1: ( ( ( rule__Or__Group_1__0 )* ) )
            // InternalNabla.g:5424:1: ( ( rule__Or__Group_1__0 )* )
            {
            // InternalNabla.g:5424:1: ( ( rule__Or__Group_1__0 )* )
            // InternalNabla.g:5425:2: ( rule__Or__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getGroup_1()); 
            }
            // InternalNabla.g:5426:2: ( rule__Or__Group_1__0 )*
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0==61) ) {
                    alt40=1;
                }


                switch (alt40) {
            	case 1 :
            	    // InternalNabla.g:5426:3: rule__Or__Group_1__0
            	    {
            	    pushFollow(FOLLOW_40);
            	    rule__Or__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__1__Impl"


    // $ANTLR start "rule__Or__Group_1__0"
    // InternalNabla.g:5435:1: rule__Or__Group_1__0 : rule__Or__Group_1__0__Impl rule__Or__Group_1__1 ;
    public final void rule__Or__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5439:1: ( rule__Or__Group_1__0__Impl rule__Or__Group_1__1 )
            // InternalNabla.g:5440:2: rule__Or__Group_1__0__Impl rule__Or__Group_1__1
            {
            pushFollow(FOLLOW_39);
            rule__Or__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Or__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__0"


    // $ANTLR start "rule__Or__Group_1__0__Impl"
    // InternalNabla.g:5447:1: rule__Or__Group_1__0__Impl : ( () ) ;
    public final void rule__Or__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5451:1: ( ( () ) )
            // InternalNabla.g:5452:1: ( () )
            {
            // InternalNabla.g:5452:1: ( () )
            // InternalNabla.g:5453:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getOrLeftAction_1_0()); 
            }
            // InternalNabla.g:5454:2: ()
            // InternalNabla.g:5454:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getOrLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__0__Impl"


    // $ANTLR start "rule__Or__Group_1__1"
    // InternalNabla.g:5462:1: rule__Or__Group_1__1 : rule__Or__Group_1__1__Impl rule__Or__Group_1__2 ;
    public final void rule__Or__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5466:1: ( rule__Or__Group_1__1__Impl rule__Or__Group_1__2 )
            // InternalNabla.g:5467:2: rule__Or__Group_1__1__Impl rule__Or__Group_1__2
            {
            pushFollow(FOLLOW_21);
            rule__Or__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Or__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__1"


    // $ANTLR start "rule__Or__Group_1__1__Impl"
    // InternalNabla.g:5474:1: rule__Or__Group_1__1__Impl : ( ( rule__Or__OpAssignment_1_1 ) ) ;
    public final void rule__Or__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5478:1: ( ( ( rule__Or__OpAssignment_1_1 ) ) )
            // InternalNabla.g:5479:1: ( ( rule__Or__OpAssignment_1_1 ) )
            {
            // InternalNabla.g:5479:1: ( ( rule__Or__OpAssignment_1_1 ) )
            // InternalNabla.g:5480:2: ( rule__Or__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getOpAssignment_1_1()); 
            }
            // InternalNabla.g:5481:2: ( rule__Or__OpAssignment_1_1 )
            // InternalNabla.g:5481:3: rule__Or__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Or__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__1__Impl"


    // $ANTLR start "rule__Or__Group_1__2"
    // InternalNabla.g:5489:1: rule__Or__Group_1__2 : rule__Or__Group_1__2__Impl ;
    public final void rule__Or__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5493:1: ( rule__Or__Group_1__2__Impl )
            // InternalNabla.g:5494:2: rule__Or__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Or__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__2"


    // $ANTLR start "rule__Or__Group_1__2__Impl"
    // InternalNabla.g:5500:1: rule__Or__Group_1__2__Impl : ( ( rule__Or__RightAssignment_1_2 ) ) ;
    public final void rule__Or__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5504:1: ( ( ( rule__Or__RightAssignment_1_2 ) ) )
            // InternalNabla.g:5505:1: ( ( rule__Or__RightAssignment_1_2 ) )
            {
            // InternalNabla.g:5505:1: ( ( rule__Or__RightAssignment_1_2 ) )
            // InternalNabla.g:5506:2: ( rule__Or__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getRightAssignment_1_2()); 
            }
            // InternalNabla.g:5507:2: ( rule__Or__RightAssignment_1_2 )
            // InternalNabla.g:5507:3: rule__Or__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Or__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__2__Impl"


    // $ANTLR start "rule__And__Group__0"
    // InternalNabla.g:5516:1: rule__And__Group__0 : rule__And__Group__0__Impl rule__And__Group__1 ;
    public final void rule__And__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5520:1: ( rule__And__Group__0__Impl rule__And__Group__1 )
            // InternalNabla.g:5521:2: rule__And__Group__0__Impl rule__And__Group__1
            {
            pushFollow(FOLLOW_41);
            rule__And__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__And__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__0"


    // $ANTLR start "rule__And__Group__0__Impl"
    // InternalNabla.g:5528:1: rule__And__Group__0__Impl : ( ruleEquality ) ;
    public final void rule__And__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5532:1: ( ( ruleEquality ) )
            // InternalNabla.g:5533:1: ( ruleEquality )
            {
            // InternalNabla.g:5533:1: ( ruleEquality )
            // InternalNabla.g:5534:2: ruleEquality
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEquality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__0__Impl"


    // $ANTLR start "rule__And__Group__1"
    // InternalNabla.g:5543:1: rule__And__Group__1 : rule__And__Group__1__Impl ;
    public final void rule__And__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5547:1: ( rule__And__Group__1__Impl )
            // InternalNabla.g:5548:2: rule__And__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__And__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__1"


    // $ANTLR start "rule__And__Group__1__Impl"
    // InternalNabla.g:5554:1: rule__And__Group__1__Impl : ( ( rule__And__Group_1__0 )* ) ;
    public final void rule__And__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5558:1: ( ( ( rule__And__Group_1__0 )* ) )
            // InternalNabla.g:5559:1: ( ( rule__And__Group_1__0 )* )
            {
            // InternalNabla.g:5559:1: ( ( rule__And__Group_1__0 )* )
            // InternalNabla.g:5560:2: ( rule__And__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getGroup_1()); 
            }
            // InternalNabla.g:5561:2: ( rule__And__Group_1__0 )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==62) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // InternalNabla.g:5561:3: rule__And__Group_1__0
            	    {
            	    pushFollow(FOLLOW_42);
            	    rule__And__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__1__Impl"


    // $ANTLR start "rule__And__Group_1__0"
    // InternalNabla.g:5570:1: rule__And__Group_1__0 : rule__And__Group_1__0__Impl rule__And__Group_1__1 ;
    public final void rule__And__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5574:1: ( rule__And__Group_1__0__Impl rule__And__Group_1__1 )
            // InternalNabla.g:5575:2: rule__And__Group_1__0__Impl rule__And__Group_1__1
            {
            pushFollow(FOLLOW_41);
            rule__And__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__And__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__0"


    // $ANTLR start "rule__And__Group_1__0__Impl"
    // InternalNabla.g:5582:1: rule__And__Group_1__0__Impl : ( () ) ;
    public final void rule__And__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5586:1: ( ( () ) )
            // InternalNabla.g:5587:1: ( () )
            {
            // InternalNabla.g:5587:1: ( () )
            // InternalNabla.g:5588:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getAndLeftAction_1_0()); 
            }
            // InternalNabla.g:5589:2: ()
            // InternalNabla.g:5589:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getAndLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__0__Impl"


    // $ANTLR start "rule__And__Group_1__1"
    // InternalNabla.g:5597:1: rule__And__Group_1__1 : rule__And__Group_1__1__Impl rule__And__Group_1__2 ;
    public final void rule__And__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5601:1: ( rule__And__Group_1__1__Impl rule__And__Group_1__2 )
            // InternalNabla.g:5602:2: rule__And__Group_1__1__Impl rule__And__Group_1__2
            {
            pushFollow(FOLLOW_21);
            rule__And__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__And__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__1"


    // $ANTLR start "rule__And__Group_1__1__Impl"
    // InternalNabla.g:5609:1: rule__And__Group_1__1__Impl : ( ( rule__And__OpAssignment_1_1 ) ) ;
    public final void rule__And__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5613:1: ( ( ( rule__And__OpAssignment_1_1 ) ) )
            // InternalNabla.g:5614:1: ( ( rule__And__OpAssignment_1_1 ) )
            {
            // InternalNabla.g:5614:1: ( ( rule__And__OpAssignment_1_1 ) )
            // InternalNabla.g:5615:2: ( rule__And__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getOpAssignment_1_1()); 
            }
            // InternalNabla.g:5616:2: ( rule__And__OpAssignment_1_1 )
            // InternalNabla.g:5616:3: rule__And__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__And__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__1__Impl"


    // $ANTLR start "rule__And__Group_1__2"
    // InternalNabla.g:5624:1: rule__And__Group_1__2 : rule__And__Group_1__2__Impl ;
    public final void rule__And__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5628:1: ( rule__And__Group_1__2__Impl )
            // InternalNabla.g:5629:2: rule__And__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__And__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__2"


    // $ANTLR start "rule__And__Group_1__2__Impl"
    // InternalNabla.g:5635:1: rule__And__Group_1__2__Impl : ( ( rule__And__RightAssignment_1_2 ) ) ;
    public final void rule__And__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5639:1: ( ( ( rule__And__RightAssignment_1_2 ) ) )
            // InternalNabla.g:5640:1: ( ( rule__And__RightAssignment_1_2 ) )
            {
            // InternalNabla.g:5640:1: ( ( rule__And__RightAssignment_1_2 ) )
            // InternalNabla.g:5641:2: ( rule__And__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getRightAssignment_1_2()); 
            }
            // InternalNabla.g:5642:2: ( rule__And__RightAssignment_1_2 )
            // InternalNabla.g:5642:3: rule__And__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__And__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__2__Impl"


    // $ANTLR start "rule__Equality__Group__0"
    // InternalNabla.g:5651:1: rule__Equality__Group__0 : rule__Equality__Group__0__Impl rule__Equality__Group__1 ;
    public final void rule__Equality__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5655:1: ( rule__Equality__Group__0__Impl rule__Equality__Group__1 )
            // InternalNabla.g:5656:2: rule__Equality__Group__0__Impl rule__Equality__Group__1
            {
            pushFollow(FOLLOW_43);
            rule__Equality__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Equality__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__0"


    // $ANTLR start "rule__Equality__Group__0__Impl"
    // InternalNabla.g:5663:1: rule__Equality__Group__0__Impl : ( ruleComparison ) ;
    public final void rule__Equality__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5667:1: ( ( ruleComparison ) )
            // InternalNabla.g:5668:1: ( ruleComparison )
            {
            // InternalNabla.g:5668:1: ( ruleComparison )
            // InternalNabla.g:5669:2: ruleComparison
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__0__Impl"


    // $ANTLR start "rule__Equality__Group__1"
    // InternalNabla.g:5678:1: rule__Equality__Group__1 : rule__Equality__Group__1__Impl ;
    public final void rule__Equality__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5682:1: ( rule__Equality__Group__1__Impl )
            // InternalNabla.g:5683:2: rule__Equality__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Equality__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__1"


    // $ANTLR start "rule__Equality__Group__1__Impl"
    // InternalNabla.g:5689:1: rule__Equality__Group__1__Impl : ( ( rule__Equality__Group_1__0 )* ) ;
    public final void rule__Equality__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5693:1: ( ( ( rule__Equality__Group_1__0 )* ) )
            // InternalNabla.g:5694:1: ( ( rule__Equality__Group_1__0 )* )
            {
            // InternalNabla.g:5694:1: ( ( rule__Equality__Group_1__0 )* )
            // InternalNabla.g:5695:2: ( rule__Equality__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAccess().getGroup_1()); 
            }
            // InternalNabla.g:5696:2: ( rule__Equality__Group_1__0 )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( ((LA42_0>=13 && LA42_0<=14)) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // InternalNabla.g:5696:3: rule__Equality__Group_1__0
            	    {
            	    pushFollow(FOLLOW_44);
            	    rule__Equality__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__1__Impl"


    // $ANTLR start "rule__Equality__Group_1__0"
    // InternalNabla.g:5705:1: rule__Equality__Group_1__0 : rule__Equality__Group_1__0__Impl rule__Equality__Group_1__1 ;
    public final void rule__Equality__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5709:1: ( rule__Equality__Group_1__0__Impl rule__Equality__Group_1__1 )
            // InternalNabla.g:5710:2: rule__Equality__Group_1__0__Impl rule__Equality__Group_1__1
            {
            pushFollow(FOLLOW_43);
            rule__Equality__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Equality__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__0"


    // $ANTLR start "rule__Equality__Group_1__0__Impl"
    // InternalNabla.g:5717:1: rule__Equality__Group_1__0__Impl : ( () ) ;
    public final void rule__Equality__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5721:1: ( ( () ) )
            // InternalNabla.g:5722:1: ( () )
            {
            // InternalNabla.g:5722:1: ( () )
            // InternalNabla.g:5723:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0()); 
            }
            // InternalNabla.g:5724:2: ()
            // InternalNabla.g:5724:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__0__Impl"


    // $ANTLR start "rule__Equality__Group_1__1"
    // InternalNabla.g:5732:1: rule__Equality__Group_1__1 : rule__Equality__Group_1__1__Impl rule__Equality__Group_1__2 ;
    public final void rule__Equality__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5736:1: ( rule__Equality__Group_1__1__Impl rule__Equality__Group_1__2 )
            // InternalNabla.g:5737:2: rule__Equality__Group_1__1__Impl rule__Equality__Group_1__2
            {
            pushFollow(FOLLOW_21);
            rule__Equality__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Equality__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__1"


    // $ANTLR start "rule__Equality__Group_1__1__Impl"
    // InternalNabla.g:5744:1: rule__Equality__Group_1__1__Impl : ( ( rule__Equality__OpAssignment_1_1 ) ) ;
    public final void rule__Equality__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5748:1: ( ( ( rule__Equality__OpAssignment_1_1 ) ) )
            // InternalNabla.g:5749:1: ( ( rule__Equality__OpAssignment_1_1 ) )
            {
            // InternalNabla.g:5749:1: ( ( rule__Equality__OpAssignment_1_1 ) )
            // InternalNabla.g:5750:2: ( rule__Equality__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAccess().getOpAssignment_1_1()); 
            }
            // InternalNabla.g:5751:2: ( rule__Equality__OpAssignment_1_1 )
            // InternalNabla.g:5751:3: rule__Equality__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Equality__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__1__Impl"


    // $ANTLR start "rule__Equality__Group_1__2"
    // InternalNabla.g:5759:1: rule__Equality__Group_1__2 : rule__Equality__Group_1__2__Impl ;
    public final void rule__Equality__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5763:1: ( rule__Equality__Group_1__2__Impl )
            // InternalNabla.g:5764:2: rule__Equality__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Equality__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__2"


    // $ANTLR start "rule__Equality__Group_1__2__Impl"
    // InternalNabla.g:5770:1: rule__Equality__Group_1__2__Impl : ( ( rule__Equality__RightAssignment_1_2 ) ) ;
    public final void rule__Equality__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5774:1: ( ( ( rule__Equality__RightAssignment_1_2 ) ) )
            // InternalNabla.g:5775:1: ( ( rule__Equality__RightAssignment_1_2 ) )
            {
            // InternalNabla.g:5775:1: ( ( rule__Equality__RightAssignment_1_2 ) )
            // InternalNabla.g:5776:2: ( rule__Equality__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAccess().getRightAssignment_1_2()); 
            }
            // InternalNabla.g:5777:2: ( rule__Equality__RightAssignment_1_2 )
            // InternalNabla.g:5777:3: rule__Equality__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Equality__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__2__Impl"


    // $ANTLR start "rule__Comparison__Group__0"
    // InternalNabla.g:5786:1: rule__Comparison__Group__0 : rule__Comparison__Group__0__Impl rule__Comparison__Group__1 ;
    public final void rule__Comparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5790:1: ( rule__Comparison__Group__0__Impl rule__Comparison__Group__1 )
            // InternalNabla.g:5791:2: rule__Comparison__Group__0__Impl rule__Comparison__Group__1
            {
            pushFollow(FOLLOW_45);
            rule__Comparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0"


    // $ANTLR start "rule__Comparison__Group__0__Impl"
    // InternalNabla.g:5798:1: rule__Comparison__Group__0__Impl : ( rulePlusOrMinus ) ;
    public final void rule__Comparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5802:1: ( ( rulePlusOrMinus ) )
            // InternalNabla.g:5803:1: ( rulePlusOrMinus )
            {
            // InternalNabla.g:5803:1: ( rulePlusOrMinus )
            // InternalNabla.g:5804:2: rulePlusOrMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePlusOrMinus();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0__Impl"


    // $ANTLR start "rule__Comparison__Group__1"
    // InternalNabla.g:5813:1: rule__Comparison__Group__1 : rule__Comparison__Group__1__Impl ;
    public final void rule__Comparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5817:1: ( rule__Comparison__Group__1__Impl )
            // InternalNabla.g:5818:2: rule__Comparison__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1"


    // $ANTLR start "rule__Comparison__Group__1__Impl"
    // InternalNabla.g:5824:1: rule__Comparison__Group__1__Impl : ( ( rule__Comparison__Group_1__0 )* ) ;
    public final void rule__Comparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5828:1: ( ( ( rule__Comparison__Group_1__0 )* ) )
            // InternalNabla.g:5829:1: ( ( rule__Comparison__Group_1__0 )* )
            {
            // InternalNabla.g:5829:1: ( ( rule__Comparison__Group_1__0 )* )
            // InternalNabla.g:5830:2: ( rule__Comparison__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getGroup_1()); 
            }
            // InternalNabla.g:5831:2: ( rule__Comparison__Group_1__0 )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( ((LA43_0>=15 && LA43_0<=18)) ) {
                    alt43=1;
                }


                switch (alt43) {
            	case 1 :
            	    // InternalNabla.g:5831:3: rule__Comparison__Group_1__0
            	    {
            	    pushFollow(FOLLOW_46);
            	    rule__Comparison__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1__Impl"


    // $ANTLR start "rule__Comparison__Group_1__0"
    // InternalNabla.g:5840:1: rule__Comparison__Group_1__0 : rule__Comparison__Group_1__0__Impl rule__Comparison__Group_1__1 ;
    public final void rule__Comparison__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5844:1: ( rule__Comparison__Group_1__0__Impl rule__Comparison__Group_1__1 )
            // InternalNabla.g:5845:2: rule__Comparison__Group_1__0__Impl rule__Comparison__Group_1__1
            {
            pushFollow(FOLLOW_45);
            rule__Comparison__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Comparison__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__0"


    // $ANTLR start "rule__Comparison__Group_1__0__Impl"
    // InternalNabla.g:5852:1: rule__Comparison__Group_1__0__Impl : ( () ) ;
    public final void rule__Comparison__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5856:1: ( ( () ) )
            // InternalNabla.g:5857:1: ( () )
            {
            // InternalNabla.g:5857:1: ( () )
            // InternalNabla.g:5858:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0()); 
            }
            // InternalNabla.g:5859:2: ()
            // InternalNabla.g:5859:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__0__Impl"


    // $ANTLR start "rule__Comparison__Group_1__1"
    // InternalNabla.g:5867:1: rule__Comparison__Group_1__1 : rule__Comparison__Group_1__1__Impl rule__Comparison__Group_1__2 ;
    public final void rule__Comparison__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5871:1: ( rule__Comparison__Group_1__1__Impl rule__Comparison__Group_1__2 )
            // InternalNabla.g:5872:2: rule__Comparison__Group_1__1__Impl rule__Comparison__Group_1__2
            {
            pushFollow(FOLLOW_21);
            rule__Comparison__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Comparison__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__1"


    // $ANTLR start "rule__Comparison__Group_1__1__Impl"
    // InternalNabla.g:5879:1: rule__Comparison__Group_1__1__Impl : ( ( rule__Comparison__OpAssignment_1_1 ) ) ;
    public final void rule__Comparison__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5883:1: ( ( ( rule__Comparison__OpAssignment_1_1 ) ) )
            // InternalNabla.g:5884:1: ( ( rule__Comparison__OpAssignment_1_1 ) )
            {
            // InternalNabla.g:5884:1: ( ( rule__Comparison__OpAssignment_1_1 ) )
            // InternalNabla.g:5885:2: ( rule__Comparison__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); 
            }
            // InternalNabla.g:5886:2: ( rule__Comparison__OpAssignment_1_1 )
            // InternalNabla.g:5886:3: rule__Comparison__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__1__Impl"


    // $ANTLR start "rule__Comparison__Group_1__2"
    // InternalNabla.g:5894:1: rule__Comparison__Group_1__2 : rule__Comparison__Group_1__2__Impl ;
    public final void rule__Comparison__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5898:1: ( rule__Comparison__Group_1__2__Impl )
            // InternalNabla.g:5899:2: rule__Comparison__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__2"


    // $ANTLR start "rule__Comparison__Group_1__2__Impl"
    // InternalNabla.g:5905:1: rule__Comparison__Group_1__2__Impl : ( ( rule__Comparison__RightAssignment_1_2 ) ) ;
    public final void rule__Comparison__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5909:1: ( ( ( rule__Comparison__RightAssignment_1_2 ) ) )
            // InternalNabla.g:5910:1: ( ( rule__Comparison__RightAssignment_1_2 ) )
            {
            // InternalNabla.g:5910:1: ( ( rule__Comparison__RightAssignment_1_2 ) )
            // InternalNabla.g:5911:2: ( rule__Comparison__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); 
            }
            // InternalNabla.g:5912:2: ( rule__Comparison__RightAssignment_1_2 )
            // InternalNabla.g:5912:3: rule__Comparison__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__2__Impl"


    // $ANTLR start "rule__PlusOrMinus__Group__0"
    // InternalNabla.g:5921:1: rule__PlusOrMinus__Group__0 : rule__PlusOrMinus__Group__0__Impl rule__PlusOrMinus__Group__1 ;
    public final void rule__PlusOrMinus__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5925:1: ( rule__PlusOrMinus__Group__0__Impl rule__PlusOrMinus__Group__1 )
            // InternalNabla.g:5926:2: rule__PlusOrMinus__Group__0__Impl rule__PlusOrMinus__Group__1
            {
            pushFollow(FOLLOW_47);
            rule__PlusOrMinus__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group__0"


    // $ANTLR start "rule__PlusOrMinus__Group__0__Impl"
    // InternalNabla.g:5933:1: rule__PlusOrMinus__Group__0__Impl : ( ruleMulOrDiv ) ;
    public final void rule__PlusOrMinus__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5937:1: ( ( ruleMulOrDiv ) )
            // InternalNabla.g:5938:1: ( ruleMulOrDiv )
            {
            // InternalNabla.g:5938:1: ( ruleMulOrDiv )
            // InternalNabla.g:5939:2: ruleMulOrDiv
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMulOrDiv();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group__0__Impl"


    // $ANTLR start "rule__PlusOrMinus__Group__1"
    // InternalNabla.g:5948:1: rule__PlusOrMinus__Group__1 : rule__PlusOrMinus__Group__1__Impl ;
    public final void rule__PlusOrMinus__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5952:1: ( rule__PlusOrMinus__Group__1__Impl )
            // InternalNabla.g:5953:2: rule__PlusOrMinus__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group__1"


    // $ANTLR start "rule__PlusOrMinus__Group__1__Impl"
    // InternalNabla.g:5959:1: rule__PlusOrMinus__Group__1__Impl : ( ( rule__PlusOrMinus__Group_1__0 )* ) ;
    public final void rule__PlusOrMinus__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5963:1: ( ( ( rule__PlusOrMinus__Group_1__0 )* ) )
            // InternalNabla.g:5964:1: ( ( rule__PlusOrMinus__Group_1__0 )* )
            {
            // InternalNabla.g:5964:1: ( ( rule__PlusOrMinus__Group_1__0 )* )
            // InternalNabla.g:5965:2: ( rule__PlusOrMinus__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getGroup_1()); 
            }
            // InternalNabla.g:5966:2: ( rule__PlusOrMinus__Group_1__0 )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==51||LA44_0==63) ) {
                    alt44=1;
                }


                switch (alt44) {
            	case 1 :
            	    // InternalNabla.g:5966:3: rule__PlusOrMinus__Group_1__0
            	    {
            	    pushFollow(FOLLOW_48);
            	    rule__PlusOrMinus__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group__1__Impl"


    // $ANTLR start "rule__PlusOrMinus__Group_1__0"
    // InternalNabla.g:5975:1: rule__PlusOrMinus__Group_1__0 : rule__PlusOrMinus__Group_1__0__Impl rule__PlusOrMinus__Group_1__1 ;
    public final void rule__PlusOrMinus__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5979:1: ( rule__PlusOrMinus__Group_1__0__Impl rule__PlusOrMinus__Group_1__1 )
            // InternalNabla.g:5980:2: rule__PlusOrMinus__Group_1__0__Impl rule__PlusOrMinus__Group_1__1
            {
            pushFollow(FOLLOW_21);
            rule__PlusOrMinus__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1__0"


    // $ANTLR start "rule__PlusOrMinus__Group_1__0__Impl"
    // InternalNabla.g:5987:1: rule__PlusOrMinus__Group_1__0__Impl : ( ( rule__PlusOrMinus__Alternatives_1_0 ) ) ;
    public final void rule__PlusOrMinus__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5991:1: ( ( ( rule__PlusOrMinus__Alternatives_1_0 ) ) )
            // InternalNabla.g:5992:1: ( ( rule__PlusOrMinus__Alternatives_1_0 ) )
            {
            // InternalNabla.g:5992:1: ( ( rule__PlusOrMinus__Alternatives_1_0 ) )
            // InternalNabla.g:5993:2: ( rule__PlusOrMinus__Alternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getAlternatives_1_0()); 
            }
            // InternalNabla.g:5994:2: ( rule__PlusOrMinus__Alternatives_1_0 )
            // InternalNabla.g:5994:3: rule__PlusOrMinus__Alternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__Alternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1__0__Impl"


    // $ANTLR start "rule__PlusOrMinus__Group_1__1"
    // InternalNabla.g:6002:1: rule__PlusOrMinus__Group_1__1 : rule__PlusOrMinus__Group_1__1__Impl ;
    public final void rule__PlusOrMinus__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6006:1: ( rule__PlusOrMinus__Group_1__1__Impl )
            // InternalNabla.g:6007:2: rule__PlusOrMinus__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1__1"


    // $ANTLR start "rule__PlusOrMinus__Group_1__1__Impl"
    // InternalNabla.g:6013:1: rule__PlusOrMinus__Group_1__1__Impl : ( ( rule__PlusOrMinus__RightAssignment_1_1 ) ) ;
    public final void rule__PlusOrMinus__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6017:1: ( ( ( rule__PlusOrMinus__RightAssignment_1_1 ) ) )
            // InternalNabla.g:6018:1: ( ( rule__PlusOrMinus__RightAssignment_1_1 ) )
            {
            // InternalNabla.g:6018:1: ( ( rule__PlusOrMinus__RightAssignment_1_1 ) )
            // InternalNabla.g:6019:2: ( rule__PlusOrMinus__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getRightAssignment_1_1()); 
            }
            // InternalNabla.g:6020:2: ( rule__PlusOrMinus__RightAssignment_1_1 )
            // InternalNabla.g:6020:3: rule__PlusOrMinus__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1__1__Impl"


    // $ANTLR start "rule__PlusOrMinus__Group_1_0_0__0"
    // InternalNabla.g:6029:1: rule__PlusOrMinus__Group_1_0_0__0 : rule__PlusOrMinus__Group_1_0_0__0__Impl rule__PlusOrMinus__Group_1_0_0__1 ;
    public final void rule__PlusOrMinus__Group_1_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6033:1: ( rule__PlusOrMinus__Group_1_0_0__0__Impl rule__PlusOrMinus__Group_1_0_0__1 )
            // InternalNabla.g:6034:2: rule__PlusOrMinus__Group_1_0_0__0__Impl rule__PlusOrMinus__Group_1_0_0__1
            {
            pushFollow(FOLLOW_49);
            rule__PlusOrMinus__Group_1_0_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__Group_1_0_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1_0_0__0"


    // $ANTLR start "rule__PlusOrMinus__Group_1_0_0__0__Impl"
    // InternalNabla.g:6041:1: rule__PlusOrMinus__Group_1_0_0__0__Impl : ( () ) ;
    public final void rule__PlusOrMinus__Group_1_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6045:1: ( ( () ) )
            // InternalNabla.g:6046:1: ( () )
            {
            // InternalNabla.g:6046:1: ( () )
            // InternalNabla.g:6047:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0()); 
            }
            // InternalNabla.g:6048:2: ()
            // InternalNabla.g:6048:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1_0_0__0__Impl"


    // $ANTLR start "rule__PlusOrMinus__Group_1_0_0__1"
    // InternalNabla.g:6056:1: rule__PlusOrMinus__Group_1_0_0__1 : rule__PlusOrMinus__Group_1_0_0__1__Impl ;
    public final void rule__PlusOrMinus__Group_1_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6060:1: ( rule__PlusOrMinus__Group_1_0_0__1__Impl )
            // InternalNabla.g:6061:2: rule__PlusOrMinus__Group_1_0_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__Group_1_0_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1_0_0__1"


    // $ANTLR start "rule__PlusOrMinus__Group_1_0_0__1__Impl"
    // InternalNabla.g:6067:1: rule__PlusOrMinus__Group_1_0_0__1__Impl : ( ( rule__PlusOrMinus__OpAssignment_1_0_0_1 ) ) ;
    public final void rule__PlusOrMinus__Group_1_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6071:1: ( ( ( rule__PlusOrMinus__OpAssignment_1_0_0_1 ) ) )
            // InternalNabla.g:6072:1: ( ( rule__PlusOrMinus__OpAssignment_1_0_0_1 ) )
            {
            // InternalNabla.g:6072:1: ( ( rule__PlusOrMinus__OpAssignment_1_0_0_1 ) )
            // InternalNabla.g:6073:2: ( rule__PlusOrMinus__OpAssignment_1_0_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getOpAssignment_1_0_0_1()); 
            }
            // InternalNabla.g:6074:2: ( rule__PlusOrMinus__OpAssignment_1_0_0_1 )
            // InternalNabla.g:6074:3: rule__PlusOrMinus__OpAssignment_1_0_0_1
            {
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__OpAssignment_1_0_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getOpAssignment_1_0_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1_0_0__1__Impl"


    // $ANTLR start "rule__PlusOrMinus__Group_1_0_1__0"
    // InternalNabla.g:6083:1: rule__PlusOrMinus__Group_1_0_1__0 : rule__PlusOrMinus__Group_1_0_1__0__Impl rule__PlusOrMinus__Group_1_0_1__1 ;
    public final void rule__PlusOrMinus__Group_1_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6087:1: ( rule__PlusOrMinus__Group_1_0_1__0__Impl rule__PlusOrMinus__Group_1_0_1__1 )
            // InternalNabla.g:6088:2: rule__PlusOrMinus__Group_1_0_1__0__Impl rule__PlusOrMinus__Group_1_0_1__1
            {
            pushFollow(FOLLOW_47);
            rule__PlusOrMinus__Group_1_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__Group_1_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1_0_1__0"


    // $ANTLR start "rule__PlusOrMinus__Group_1_0_1__0__Impl"
    // InternalNabla.g:6095:1: rule__PlusOrMinus__Group_1_0_1__0__Impl : ( () ) ;
    public final void rule__PlusOrMinus__Group_1_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6099:1: ( ( () ) )
            // InternalNabla.g:6100:1: ( () )
            {
            // InternalNabla.g:6100:1: ( () )
            // InternalNabla.g:6101:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0()); 
            }
            // InternalNabla.g:6102:2: ()
            // InternalNabla.g:6102:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1_0_1__0__Impl"


    // $ANTLR start "rule__PlusOrMinus__Group_1_0_1__1"
    // InternalNabla.g:6110:1: rule__PlusOrMinus__Group_1_0_1__1 : rule__PlusOrMinus__Group_1_0_1__1__Impl ;
    public final void rule__PlusOrMinus__Group_1_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6114:1: ( rule__PlusOrMinus__Group_1_0_1__1__Impl )
            // InternalNabla.g:6115:2: rule__PlusOrMinus__Group_1_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__Group_1_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1_0_1__1"


    // $ANTLR start "rule__PlusOrMinus__Group_1_0_1__1__Impl"
    // InternalNabla.g:6121:1: rule__PlusOrMinus__Group_1_0_1__1__Impl : ( ( rule__PlusOrMinus__OpAssignment_1_0_1_1 ) ) ;
    public final void rule__PlusOrMinus__Group_1_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6125:1: ( ( ( rule__PlusOrMinus__OpAssignment_1_0_1_1 ) ) )
            // InternalNabla.g:6126:1: ( ( rule__PlusOrMinus__OpAssignment_1_0_1_1 ) )
            {
            // InternalNabla.g:6126:1: ( ( rule__PlusOrMinus__OpAssignment_1_0_1_1 ) )
            // InternalNabla.g:6127:2: ( rule__PlusOrMinus__OpAssignment_1_0_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getOpAssignment_1_0_1_1()); 
            }
            // InternalNabla.g:6128:2: ( rule__PlusOrMinus__OpAssignment_1_0_1_1 )
            // InternalNabla.g:6128:3: rule__PlusOrMinus__OpAssignment_1_0_1_1
            {
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__OpAssignment_1_0_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getOpAssignment_1_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1_0_1__1__Impl"


    // $ANTLR start "rule__MulOrDiv__Group__0"
    // InternalNabla.g:6137:1: rule__MulOrDiv__Group__0 : rule__MulOrDiv__Group__0__Impl rule__MulOrDiv__Group__1 ;
    public final void rule__MulOrDiv__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6141:1: ( rule__MulOrDiv__Group__0__Impl rule__MulOrDiv__Group__1 )
            // InternalNabla.g:6142:2: rule__MulOrDiv__Group__0__Impl rule__MulOrDiv__Group__1
            {
            pushFollow(FOLLOW_50);
            rule__MulOrDiv__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group__0"


    // $ANTLR start "rule__MulOrDiv__Group__0__Impl"
    // InternalNabla.g:6149:1: rule__MulOrDiv__Group__0__Impl : ( rulePrimary ) ;
    public final void rule__MulOrDiv__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6153:1: ( ( rulePrimary ) )
            // InternalNabla.g:6154:1: ( rulePrimary )
            {
            // InternalNabla.g:6154:1: ( rulePrimary )
            // InternalNabla.g:6155:2: rulePrimary
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivAccess().getPrimaryParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePrimary();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivAccess().getPrimaryParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group__0__Impl"


    // $ANTLR start "rule__MulOrDiv__Group__1"
    // InternalNabla.g:6164:1: rule__MulOrDiv__Group__1 : rule__MulOrDiv__Group__1__Impl ;
    public final void rule__MulOrDiv__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6168:1: ( rule__MulOrDiv__Group__1__Impl )
            // InternalNabla.g:6169:2: rule__MulOrDiv__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group__1"


    // $ANTLR start "rule__MulOrDiv__Group__1__Impl"
    // InternalNabla.g:6175:1: rule__MulOrDiv__Group__1__Impl : ( ( rule__MulOrDiv__Group_1__0 )* ) ;
    public final void rule__MulOrDiv__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6179:1: ( ( ( rule__MulOrDiv__Group_1__0 )* ) )
            // InternalNabla.g:6180:1: ( ( rule__MulOrDiv__Group_1__0 )* )
            {
            // InternalNabla.g:6180:1: ( ( rule__MulOrDiv__Group_1__0 )* )
            // InternalNabla.g:6181:2: ( rule__MulOrDiv__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivAccess().getGroup_1()); 
            }
            // InternalNabla.g:6182:2: ( rule__MulOrDiv__Group_1__0 )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( ((LA45_0>=19 && LA45_0<=20)) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalNabla.g:6182:3: rule__MulOrDiv__Group_1__0
            	    {
            	    pushFollow(FOLLOW_51);
            	    rule__MulOrDiv__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group__1__Impl"


    // $ANTLR start "rule__MulOrDiv__Group_1__0"
    // InternalNabla.g:6191:1: rule__MulOrDiv__Group_1__0 : rule__MulOrDiv__Group_1__0__Impl rule__MulOrDiv__Group_1__1 ;
    public final void rule__MulOrDiv__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6195:1: ( rule__MulOrDiv__Group_1__0__Impl rule__MulOrDiv__Group_1__1 )
            // InternalNabla.g:6196:2: rule__MulOrDiv__Group_1__0__Impl rule__MulOrDiv__Group_1__1
            {
            pushFollow(FOLLOW_50);
            rule__MulOrDiv__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group_1__0"


    // $ANTLR start "rule__MulOrDiv__Group_1__0__Impl"
    // InternalNabla.g:6203:1: rule__MulOrDiv__Group_1__0__Impl : ( () ) ;
    public final void rule__MulOrDiv__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6207:1: ( ( () ) )
            // InternalNabla.g:6208:1: ( () )
            {
            // InternalNabla.g:6208:1: ( () )
            // InternalNabla.g:6209:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivAccess().getMulOrDivLeftAction_1_0()); 
            }
            // InternalNabla.g:6210:2: ()
            // InternalNabla.g:6210:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivAccess().getMulOrDivLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group_1__0__Impl"


    // $ANTLR start "rule__MulOrDiv__Group_1__1"
    // InternalNabla.g:6218:1: rule__MulOrDiv__Group_1__1 : rule__MulOrDiv__Group_1__1__Impl rule__MulOrDiv__Group_1__2 ;
    public final void rule__MulOrDiv__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6222:1: ( rule__MulOrDiv__Group_1__1__Impl rule__MulOrDiv__Group_1__2 )
            // InternalNabla.g:6223:2: rule__MulOrDiv__Group_1__1__Impl rule__MulOrDiv__Group_1__2
            {
            pushFollow(FOLLOW_21);
            rule__MulOrDiv__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group_1__1"


    // $ANTLR start "rule__MulOrDiv__Group_1__1__Impl"
    // InternalNabla.g:6230:1: rule__MulOrDiv__Group_1__1__Impl : ( ( rule__MulOrDiv__OpAssignment_1_1 ) ) ;
    public final void rule__MulOrDiv__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6234:1: ( ( ( rule__MulOrDiv__OpAssignment_1_1 ) ) )
            // InternalNabla.g:6235:1: ( ( rule__MulOrDiv__OpAssignment_1_1 ) )
            {
            // InternalNabla.g:6235:1: ( ( rule__MulOrDiv__OpAssignment_1_1 ) )
            // InternalNabla.g:6236:2: ( rule__MulOrDiv__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivAccess().getOpAssignment_1_1()); 
            }
            // InternalNabla.g:6237:2: ( rule__MulOrDiv__OpAssignment_1_1 )
            // InternalNabla.g:6237:3: rule__MulOrDiv__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group_1__1__Impl"


    // $ANTLR start "rule__MulOrDiv__Group_1__2"
    // InternalNabla.g:6245:1: rule__MulOrDiv__Group_1__2 : rule__MulOrDiv__Group_1__2__Impl ;
    public final void rule__MulOrDiv__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6249:1: ( rule__MulOrDiv__Group_1__2__Impl )
            // InternalNabla.g:6250:2: rule__MulOrDiv__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group_1__2"


    // $ANTLR start "rule__MulOrDiv__Group_1__2__Impl"
    // InternalNabla.g:6256:1: rule__MulOrDiv__Group_1__2__Impl : ( ( rule__MulOrDiv__RightAssignment_1_2 ) ) ;
    public final void rule__MulOrDiv__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6260:1: ( ( ( rule__MulOrDiv__RightAssignment_1_2 ) ) )
            // InternalNabla.g:6261:1: ( ( rule__MulOrDiv__RightAssignment_1_2 ) )
            {
            // InternalNabla.g:6261:1: ( ( rule__MulOrDiv__RightAssignment_1_2 ) )
            // InternalNabla.g:6262:2: ( rule__MulOrDiv__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivAccess().getRightAssignment_1_2()); 
            }
            // InternalNabla.g:6263:2: ( rule__MulOrDiv__RightAssignment_1_2 )
            // InternalNabla.g:6263:3: rule__MulOrDiv__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group_1__2__Impl"


    // $ANTLR start "rule__Primary__Group_0__0"
    // InternalNabla.g:6272:1: rule__Primary__Group_0__0 : rule__Primary__Group_0__0__Impl rule__Primary__Group_0__1 ;
    public final void rule__Primary__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6276:1: ( rule__Primary__Group_0__0__Impl rule__Primary__Group_0__1 )
            // InternalNabla.g:6277:2: rule__Primary__Group_0__0__Impl rule__Primary__Group_0__1
            {
            pushFollow(FOLLOW_22);
            rule__Primary__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__0"


    // $ANTLR start "rule__Primary__Group_0__0__Impl"
    // InternalNabla.g:6284:1: rule__Primary__Group_0__0__Impl : ( () ) ;
    public final void rule__Primary__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6288:1: ( ( () ) )
            // InternalNabla.g:6289:1: ( () )
            {
            // InternalNabla.g:6289:1: ( () )
            // InternalNabla.g:6290:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getParenthesisAction_0_0()); 
            }
            // InternalNabla.g:6291:2: ()
            // InternalNabla.g:6291:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getParenthesisAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__0__Impl"


    // $ANTLR start "rule__Primary__Group_0__1"
    // InternalNabla.g:6299:1: rule__Primary__Group_0__1 : rule__Primary__Group_0__1__Impl rule__Primary__Group_0__2 ;
    public final void rule__Primary__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6303:1: ( rule__Primary__Group_0__1__Impl rule__Primary__Group_0__2 )
            // InternalNabla.g:6304:2: rule__Primary__Group_0__1__Impl rule__Primary__Group_0__2
            {
            pushFollow(FOLLOW_21);
            rule__Primary__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__1"


    // $ANTLR start "rule__Primary__Group_0__1__Impl"
    // InternalNabla.g:6311:1: rule__Primary__Group_0__1__Impl : ( '(' ) ;
    public final void rule__Primary__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6315:1: ( ( '(' ) )
            // InternalNabla.g:6316:1: ( '(' )
            {
            // InternalNabla.g:6316:1: ( '(' )
            // InternalNabla.g:6317:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_1()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__1__Impl"


    // $ANTLR start "rule__Primary__Group_0__2"
    // InternalNabla.g:6326:1: rule__Primary__Group_0__2 : rule__Primary__Group_0__2__Impl rule__Primary__Group_0__3 ;
    public final void rule__Primary__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6330:1: ( rule__Primary__Group_0__2__Impl rule__Primary__Group_0__3 )
            // InternalNabla.g:6331:2: rule__Primary__Group_0__2__Impl rule__Primary__Group_0__3
            {
            pushFollow(FOLLOW_23);
            rule__Primary__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__2"


    // $ANTLR start "rule__Primary__Group_0__2__Impl"
    // InternalNabla.g:6338:1: rule__Primary__Group_0__2__Impl : ( ( rule__Primary__ExpressionAssignment_0_2 ) ) ;
    public final void rule__Primary__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6342:1: ( ( ( rule__Primary__ExpressionAssignment_0_2 ) ) )
            // InternalNabla.g:6343:1: ( ( rule__Primary__ExpressionAssignment_0_2 ) )
            {
            // InternalNabla.g:6343:1: ( ( rule__Primary__ExpressionAssignment_0_2 ) )
            // InternalNabla.g:6344:2: ( rule__Primary__ExpressionAssignment_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getExpressionAssignment_0_2()); 
            }
            // InternalNabla.g:6345:2: ( rule__Primary__ExpressionAssignment_0_2 )
            // InternalNabla.g:6345:3: rule__Primary__ExpressionAssignment_0_2
            {
            pushFollow(FOLLOW_2);
            rule__Primary__ExpressionAssignment_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getExpressionAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__2__Impl"


    // $ANTLR start "rule__Primary__Group_0__3"
    // InternalNabla.g:6353:1: rule__Primary__Group_0__3 : rule__Primary__Group_0__3__Impl ;
    public final void rule__Primary__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6357:1: ( rule__Primary__Group_0__3__Impl )
            // InternalNabla.g:6358:2: rule__Primary__Group_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__3"


    // $ANTLR start "rule__Primary__Group_0__3__Impl"
    // InternalNabla.g:6364:1: rule__Primary__Group_0__3__Impl : ( ')' ) ;
    public final void rule__Primary__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6368:1: ( ( ')' ) )
            // InternalNabla.g:6369:1: ( ')' )
            {
            // InternalNabla.g:6369:1: ( ')' )
            // InternalNabla.g:6370:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_3()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__3__Impl"


    // $ANTLR start "rule__Primary__Group_1__0"
    // InternalNabla.g:6380:1: rule__Primary__Group_1__0 : rule__Primary__Group_1__0__Impl rule__Primary__Group_1__1 ;
    public final void rule__Primary__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6384:1: ( rule__Primary__Group_1__0__Impl rule__Primary__Group_1__1 )
            // InternalNabla.g:6385:2: rule__Primary__Group_1__0__Impl rule__Primary__Group_1__1
            {
            pushFollow(FOLLOW_52);
            rule__Primary__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Primary__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__0"


    // $ANTLR start "rule__Primary__Group_1__0__Impl"
    // InternalNabla.g:6392:1: rule__Primary__Group_1__0__Impl : ( () ) ;
    public final void rule__Primary__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6396:1: ( ( () ) )
            // InternalNabla.g:6397:1: ( () )
            {
            // InternalNabla.g:6397:1: ( () )
            // InternalNabla.g:6398:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getUnaryMinusAction_1_0()); 
            }
            // InternalNabla.g:6399:2: ()
            // InternalNabla.g:6399:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getUnaryMinusAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__0__Impl"


    // $ANTLR start "rule__Primary__Group_1__1"
    // InternalNabla.g:6407:1: rule__Primary__Group_1__1 : rule__Primary__Group_1__1__Impl rule__Primary__Group_1__2 ;
    public final void rule__Primary__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6411:1: ( rule__Primary__Group_1__1__Impl rule__Primary__Group_1__2 )
            // InternalNabla.g:6412:2: rule__Primary__Group_1__1__Impl rule__Primary__Group_1__2
            {
            pushFollow(FOLLOW_21);
            rule__Primary__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Primary__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__1"


    // $ANTLR start "rule__Primary__Group_1__1__Impl"
    // InternalNabla.g:6419:1: rule__Primary__Group_1__1__Impl : ( '-' ) ;
    public final void rule__Primary__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6423:1: ( ( '-' ) )
            // InternalNabla.g:6424:1: ( '-' )
            {
            // InternalNabla.g:6424:1: ( '-' )
            // InternalNabla.g:6425:2: '-'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getHyphenMinusKeyword_1_1()); 
            }
            match(input,51,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getHyphenMinusKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__1__Impl"


    // $ANTLR start "rule__Primary__Group_1__2"
    // InternalNabla.g:6434:1: rule__Primary__Group_1__2 : rule__Primary__Group_1__2__Impl ;
    public final void rule__Primary__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6438:1: ( rule__Primary__Group_1__2__Impl )
            // InternalNabla.g:6439:2: rule__Primary__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__2"


    // $ANTLR start "rule__Primary__Group_1__2__Impl"
    // InternalNabla.g:6445:1: rule__Primary__Group_1__2__Impl : ( ( rule__Primary__ExpressionAssignment_1_2 ) ) ;
    public final void rule__Primary__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6449:1: ( ( ( rule__Primary__ExpressionAssignment_1_2 ) ) )
            // InternalNabla.g:6450:1: ( ( rule__Primary__ExpressionAssignment_1_2 ) )
            {
            // InternalNabla.g:6450:1: ( ( rule__Primary__ExpressionAssignment_1_2 ) )
            // InternalNabla.g:6451:2: ( rule__Primary__ExpressionAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2()); 
            }
            // InternalNabla.g:6452:2: ( rule__Primary__ExpressionAssignment_1_2 )
            // InternalNabla.g:6452:3: rule__Primary__ExpressionAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Primary__ExpressionAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__2__Impl"


    // $ANTLR start "rule__Primary__Group_2__0"
    // InternalNabla.g:6461:1: rule__Primary__Group_2__0 : rule__Primary__Group_2__0__Impl rule__Primary__Group_2__1 ;
    public final void rule__Primary__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6465:1: ( rule__Primary__Group_2__0__Impl rule__Primary__Group_2__1 )
            // InternalNabla.g:6466:2: rule__Primary__Group_2__0__Impl rule__Primary__Group_2__1
            {
            pushFollow(FOLLOW_53);
            rule__Primary__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Primary__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__0"


    // $ANTLR start "rule__Primary__Group_2__0__Impl"
    // InternalNabla.g:6473:1: rule__Primary__Group_2__0__Impl : ( () ) ;
    public final void rule__Primary__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6477:1: ( ( () ) )
            // InternalNabla.g:6478:1: ( () )
            {
            // InternalNabla.g:6478:1: ( () )
            // InternalNabla.g:6479:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getNotAction_2_0()); 
            }
            // InternalNabla.g:6480:2: ()
            // InternalNabla.g:6480:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getNotAction_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__0__Impl"


    // $ANTLR start "rule__Primary__Group_2__1"
    // InternalNabla.g:6488:1: rule__Primary__Group_2__1 : rule__Primary__Group_2__1__Impl rule__Primary__Group_2__2 ;
    public final void rule__Primary__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6492:1: ( rule__Primary__Group_2__1__Impl rule__Primary__Group_2__2 )
            // InternalNabla.g:6493:2: rule__Primary__Group_2__1__Impl rule__Primary__Group_2__2
            {
            pushFollow(FOLLOW_21);
            rule__Primary__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Primary__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__1"


    // $ANTLR start "rule__Primary__Group_2__1__Impl"
    // InternalNabla.g:6500:1: rule__Primary__Group_2__1__Impl : ( '!' ) ;
    public final void rule__Primary__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6504:1: ( ( '!' ) )
            // InternalNabla.g:6505:1: ( '!' )
            {
            // InternalNabla.g:6505:1: ( '!' )
            // InternalNabla.g:6506:2: '!'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_2_1()); 
            }
            match(input,52,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__1__Impl"


    // $ANTLR start "rule__Primary__Group_2__2"
    // InternalNabla.g:6515:1: rule__Primary__Group_2__2 : rule__Primary__Group_2__2__Impl ;
    public final void rule__Primary__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6519:1: ( rule__Primary__Group_2__2__Impl )
            // InternalNabla.g:6520:2: rule__Primary__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__2"


    // $ANTLR start "rule__Primary__Group_2__2__Impl"
    // InternalNabla.g:6526:1: rule__Primary__Group_2__2__Impl : ( ( rule__Primary__ExpressionAssignment_2_2 ) ) ;
    public final void rule__Primary__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6530:1: ( ( ( rule__Primary__ExpressionAssignment_2_2 ) ) )
            // InternalNabla.g:6531:1: ( ( rule__Primary__ExpressionAssignment_2_2 ) )
            {
            // InternalNabla.g:6531:1: ( ( rule__Primary__ExpressionAssignment_2_2 ) )
            // InternalNabla.g:6532:2: ( rule__Primary__ExpressionAssignment_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getExpressionAssignment_2_2()); 
            }
            // InternalNabla.g:6533:2: ( rule__Primary__ExpressionAssignment_2_2 )
            // InternalNabla.g:6533:3: rule__Primary__ExpressionAssignment_2_2
            {
            pushFollow(FOLLOW_2);
            rule__Primary__ExpressionAssignment_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getExpressionAssignment_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__2__Impl"


    // $ANTLR start "rule__Atomic__Group_0__0"
    // InternalNabla.g:6542:1: rule__Atomic__Group_0__0 : rule__Atomic__Group_0__0__Impl rule__Atomic__Group_0__1 ;
    public final void rule__Atomic__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6546:1: ( rule__Atomic__Group_0__0__Impl rule__Atomic__Group_0__1 )
            // InternalNabla.g:6547:2: rule__Atomic__Group_0__0__Impl rule__Atomic__Group_0__1
            {
            pushFollow(FOLLOW_54);
            rule__Atomic__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_0__0"


    // $ANTLR start "rule__Atomic__Group_0__0__Impl"
    // InternalNabla.g:6554:1: rule__Atomic__Group_0__0__Impl : ( () ) ;
    public final void rule__Atomic__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6558:1: ( ( () ) )
            // InternalNabla.g:6559:1: ( () )
            {
            // InternalNabla.g:6559:1: ( () )
            // InternalNabla.g:6560:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getIntConstantAction_0_0()); 
            }
            // InternalNabla.g:6561:2: ()
            // InternalNabla.g:6561:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getIntConstantAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_0__0__Impl"


    // $ANTLR start "rule__Atomic__Group_0__1"
    // InternalNabla.g:6569:1: rule__Atomic__Group_0__1 : rule__Atomic__Group_0__1__Impl ;
    public final void rule__Atomic__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6573:1: ( rule__Atomic__Group_0__1__Impl )
            // InternalNabla.g:6574:2: rule__Atomic__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_0__1"


    // $ANTLR start "rule__Atomic__Group_0__1__Impl"
    // InternalNabla.g:6580:1: rule__Atomic__Group_0__1__Impl : ( ( rule__Atomic__ValueAssignment_0_1 ) ) ;
    public final void rule__Atomic__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6584:1: ( ( ( rule__Atomic__ValueAssignment_0_1 ) ) )
            // InternalNabla.g:6585:1: ( ( rule__Atomic__ValueAssignment_0_1 ) )
            {
            // InternalNabla.g:6585:1: ( ( rule__Atomic__ValueAssignment_0_1 ) )
            // InternalNabla.g:6586:2: ( rule__Atomic__ValueAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); 
            }
            // InternalNabla.g:6587:2: ( rule__Atomic__ValueAssignment_0_1 )
            // InternalNabla.g:6587:3: rule__Atomic__ValueAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__ValueAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_0__1__Impl"


    // $ANTLR start "rule__Atomic__Group_1__0"
    // InternalNabla.g:6596:1: rule__Atomic__Group_1__0 : rule__Atomic__Group_1__0__Impl rule__Atomic__Group_1__1 ;
    public final void rule__Atomic__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6600:1: ( rule__Atomic__Group_1__0__Impl rule__Atomic__Group_1__1 )
            // InternalNabla.g:6601:2: rule__Atomic__Group_1__0__Impl rule__Atomic__Group_1__1
            {
            pushFollow(FOLLOW_55);
            rule__Atomic__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_1__0"


    // $ANTLR start "rule__Atomic__Group_1__0__Impl"
    // InternalNabla.g:6608:1: rule__Atomic__Group_1__0__Impl : ( () ) ;
    public final void rule__Atomic__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6612:1: ( ( () ) )
            // InternalNabla.g:6613:1: ( () )
            {
            // InternalNabla.g:6613:1: ( () )
            // InternalNabla.g:6614:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getRealConstantAction_1_0()); 
            }
            // InternalNabla.g:6615:2: ()
            // InternalNabla.g:6615:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getRealConstantAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_1__0__Impl"


    // $ANTLR start "rule__Atomic__Group_1__1"
    // InternalNabla.g:6623:1: rule__Atomic__Group_1__1 : rule__Atomic__Group_1__1__Impl ;
    public final void rule__Atomic__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6627:1: ( rule__Atomic__Group_1__1__Impl )
            // InternalNabla.g:6628:2: rule__Atomic__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_1__1"


    // $ANTLR start "rule__Atomic__Group_1__1__Impl"
    // InternalNabla.g:6634:1: rule__Atomic__Group_1__1__Impl : ( ( rule__Atomic__ValueAssignment_1_1 ) ) ;
    public final void rule__Atomic__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6638:1: ( ( ( rule__Atomic__ValueAssignment_1_1 ) ) )
            // InternalNabla.g:6639:1: ( ( rule__Atomic__ValueAssignment_1_1 ) )
            {
            // InternalNabla.g:6639:1: ( ( rule__Atomic__ValueAssignment_1_1 ) )
            // InternalNabla.g:6640:2: ( rule__Atomic__ValueAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); 
            }
            // InternalNabla.g:6641:2: ( rule__Atomic__ValueAssignment_1_1 )
            // InternalNabla.g:6641:3: rule__Atomic__ValueAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__ValueAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_1__1__Impl"


    // $ANTLR start "rule__Atomic__Group_4__0"
    // InternalNabla.g:6650:1: rule__Atomic__Group_4__0 : rule__Atomic__Group_4__0__Impl rule__Atomic__Group_4__1 ;
    public final void rule__Atomic__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6654:1: ( rule__Atomic__Group_4__0__Impl rule__Atomic__Group_4__1 )
            // InternalNabla.g:6655:2: rule__Atomic__Group_4__0__Impl rule__Atomic__Group_4__1
            {
            pushFollow(FOLLOW_56);
            rule__Atomic__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_4__0"


    // $ANTLR start "rule__Atomic__Group_4__0__Impl"
    // InternalNabla.g:6662:1: rule__Atomic__Group_4__0__Impl : ( () ) ;
    public final void rule__Atomic__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6666:1: ( ( () ) )
            // InternalNabla.g:6667:1: ( () )
            {
            // InternalNabla.g:6667:1: ( () )
            // InternalNabla.g:6668:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getBoolConstantAction_4_0()); 
            }
            // InternalNabla.g:6669:2: ()
            // InternalNabla.g:6669:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getBoolConstantAction_4_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_4__0__Impl"


    // $ANTLR start "rule__Atomic__Group_4__1"
    // InternalNabla.g:6677:1: rule__Atomic__Group_4__1 : rule__Atomic__Group_4__1__Impl ;
    public final void rule__Atomic__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6681:1: ( rule__Atomic__Group_4__1__Impl )
            // InternalNabla.g:6682:2: rule__Atomic__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_4__1"


    // $ANTLR start "rule__Atomic__Group_4__1__Impl"
    // InternalNabla.g:6688:1: rule__Atomic__Group_4__1__Impl : ( ( rule__Atomic__Alternatives_4_1 ) ) ;
    public final void rule__Atomic__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6692:1: ( ( ( rule__Atomic__Alternatives_4_1 ) ) )
            // InternalNabla.g:6693:1: ( ( rule__Atomic__Alternatives_4_1 ) )
            {
            // InternalNabla.g:6693:1: ( ( rule__Atomic__Alternatives_4_1 ) )
            // InternalNabla.g:6694:2: ( rule__Atomic__Alternatives_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getAlternatives_4_1()); 
            }
            // InternalNabla.g:6695:2: ( rule__Atomic__Alternatives_4_1 )
            // InternalNabla.g:6695:3: rule__Atomic__Alternatives_4_1
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Alternatives_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getAlternatives_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_4__1__Impl"


    // $ANTLR start "rule__Atomic__Group_5__0"
    // InternalNabla.g:6704:1: rule__Atomic__Group_5__0 : rule__Atomic__Group_5__0__Impl rule__Atomic__Group_5__1 ;
    public final void rule__Atomic__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6708:1: ( rule__Atomic__Group_5__0__Impl rule__Atomic__Group_5__1 )
            // InternalNabla.g:6709:2: rule__Atomic__Group_5__0__Impl rule__Atomic__Group_5__1
            {
            pushFollow(FOLLOW_11);
            rule__Atomic__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_5__0"


    // $ANTLR start "rule__Atomic__Group_5__0__Impl"
    // InternalNabla.g:6716:1: rule__Atomic__Group_5__0__Impl : ( () ) ;
    public final void rule__Atomic__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6720:1: ( ( () ) )
            // InternalNabla.g:6721:1: ( () )
            {
            // InternalNabla.g:6721:1: ( () )
            // InternalNabla.g:6722:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getReal2x2ConstantAction_5_0()); 
            }
            // InternalNabla.g:6723:2: ()
            // InternalNabla.g:6723:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getReal2x2ConstantAction_5_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_5__0__Impl"


    // $ANTLR start "rule__Atomic__Group_5__1"
    // InternalNabla.g:6731:1: rule__Atomic__Group_5__1 : rule__Atomic__Group_5__1__Impl rule__Atomic__Group_5__2 ;
    public final void rule__Atomic__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6735:1: ( rule__Atomic__Group_5__1__Impl rule__Atomic__Group_5__2 )
            // InternalNabla.g:6736:2: rule__Atomic__Group_5__1__Impl rule__Atomic__Group_5__2
            {
            pushFollow(FOLLOW_11);
            rule__Atomic__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_5__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_5__1"


    // $ANTLR start "rule__Atomic__Group_5__1__Impl"
    // InternalNabla.g:6743:1: rule__Atomic__Group_5__1__Impl : ( '{' ) ;
    public final void rule__Atomic__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6747:1: ( ( '{' ) )
            // InternalNabla.g:6748:1: ( '{' )
            {
            // InternalNabla.g:6748:1: ( '{' )
            // InternalNabla.g:6749:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getLeftCurlyBracketKeyword_5_1()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getLeftCurlyBracketKeyword_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_5__1__Impl"


    // $ANTLR start "rule__Atomic__Group_5__2"
    // InternalNabla.g:6758:1: rule__Atomic__Group_5__2 : rule__Atomic__Group_5__2__Impl rule__Atomic__Group_5__3 ;
    public final void rule__Atomic__Group_5__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6762:1: ( rule__Atomic__Group_5__2__Impl rule__Atomic__Group_5__3 )
            // InternalNabla.g:6763:2: rule__Atomic__Group_5__2__Impl rule__Atomic__Group_5__3
            {
            pushFollow(FOLLOW_17);
            rule__Atomic__Group_5__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_5__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_5__2"


    // $ANTLR start "rule__Atomic__Group_5__2__Impl"
    // InternalNabla.g:6770:1: rule__Atomic__Group_5__2__Impl : ( ( rule__Atomic__XAssignment_5_2 ) ) ;
    public final void rule__Atomic__Group_5__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6774:1: ( ( ( rule__Atomic__XAssignment_5_2 ) ) )
            // InternalNabla.g:6775:1: ( ( rule__Atomic__XAssignment_5_2 ) )
            {
            // InternalNabla.g:6775:1: ( ( rule__Atomic__XAssignment_5_2 ) )
            // InternalNabla.g:6776:2: ( rule__Atomic__XAssignment_5_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getXAssignment_5_2()); 
            }
            // InternalNabla.g:6777:2: ( rule__Atomic__XAssignment_5_2 )
            // InternalNabla.g:6777:3: rule__Atomic__XAssignment_5_2
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__XAssignment_5_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getXAssignment_5_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_5__2__Impl"


    // $ANTLR start "rule__Atomic__Group_5__3"
    // InternalNabla.g:6785:1: rule__Atomic__Group_5__3 : rule__Atomic__Group_5__3__Impl rule__Atomic__Group_5__4 ;
    public final void rule__Atomic__Group_5__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6789:1: ( rule__Atomic__Group_5__3__Impl rule__Atomic__Group_5__4 )
            // InternalNabla.g:6790:2: rule__Atomic__Group_5__3__Impl rule__Atomic__Group_5__4
            {
            pushFollow(FOLLOW_11);
            rule__Atomic__Group_5__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_5__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_5__3"


    // $ANTLR start "rule__Atomic__Group_5__3__Impl"
    // InternalNabla.g:6797:1: rule__Atomic__Group_5__3__Impl : ( ',' ) ;
    public final void rule__Atomic__Group_5__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6801:1: ( ( ',' ) )
            // InternalNabla.g:6802:1: ( ',' )
            {
            // InternalNabla.g:6802:1: ( ',' )
            // InternalNabla.g:6803:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getCommaKeyword_5_3()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getCommaKeyword_5_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_5__3__Impl"


    // $ANTLR start "rule__Atomic__Group_5__4"
    // InternalNabla.g:6812:1: rule__Atomic__Group_5__4 : rule__Atomic__Group_5__4__Impl rule__Atomic__Group_5__5 ;
    public final void rule__Atomic__Group_5__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6816:1: ( rule__Atomic__Group_5__4__Impl rule__Atomic__Group_5__5 )
            // InternalNabla.g:6817:2: rule__Atomic__Group_5__4__Impl rule__Atomic__Group_5__5
            {
            pushFollow(FOLLOW_18);
            rule__Atomic__Group_5__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_5__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_5__4"


    // $ANTLR start "rule__Atomic__Group_5__4__Impl"
    // InternalNabla.g:6824:1: rule__Atomic__Group_5__4__Impl : ( ( rule__Atomic__YAssignment_5_4 ) ) ;
    public final void rule__Atomic__Group_5__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6828:1: ( ( ( rule__Atomic__YAssignment_5_4 ) ) )
            // InternalNabla.g:6829:1: ( ( rule__Atomic__YAssignment_5_4 ) )
            {
            // InternalNabla.g:6829:1: ( ( rule__Atomic__YAssignment_5_4 ) )
            // InternalNabla.g:6830:2: ( rule__Atomic__YAssignment_5_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getYAssignment_5_4()); 
            }
            // InternalNabla.g:6831:2: ( rule__Atomic__YAssignment_5_4 )
            // InternalNabla.g:6831:3: rule__Atomic__YAssignment_5_4
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__YAssignment_5_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getYAssignment_5_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_5__4__Impl"


    // $ANTLR start "rule__Atomic__Group_5__5"
    // InternalNabla.g:6839:1: rule__Atomic__Group_5__5 : rule__Atomic__Group_5__5__Impl ;
    public final void rule__Atomic__Group_5__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6843:1: ( rule__Atomic__Group_5__5__Impl )
            // InternalNabla.g:6844:2: rule__Atomic__Group_5__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_5__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_5__5"


    // $ANTLR start "rule__Atomic__Group_5__5__Impl"
    // InternalNabla.g:6850:1: rule__Atomic__Group_5__5__Impl : ( '}' ) ;
    public final void rule__Atomic__Group_5__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6854:1: ( ( '}' ) )
            // InternalNabla.g:6855:1: ( '}' )
            {
            // InternalNabla.g:6855:1: ( '}' )
            // InternalNabla.g:6856:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getRightCurlyBracketKeyword_5_5()); 
            }
            match(input,37,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getRightCurlyBracketKeyword_5_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_5__5__Impl"


    // $ANTLR start "rule__Atomic__Group_6__0"
    // InternalNabla.g:6866:1: rule__Atomic__Group_6__0 : rule__Atomic__Group_6__0__Impl rule__Atomic__Group_6__1 ;
    public final void rule__Atomic__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6870:1: ( rule__Atomic__Group_6__0__Impl rule__Atomic__Group_6__1 )
            // InternalNabla.g:6871:2: rule__Atomic__Group_6__0__Impl rule__Atomic__Group_6__1
            {
            pushFollow(FOLLOW_11);
            rule__Atomic__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__0"


    // $ANTLR start "rule__Atomic__Group_6__0__Impl"
    // InternalNabla.g:6878:1: rule__Atomic__Group_6__0__Impl : ( () ) ;
    public final void rule__Atomic__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6882:1: ( ( () ) )
            // InternalNabla.g:6883:1: ( () )
            {
            // InternalNabla.g:6883:1: ( () )
            // InternalNabla.g:6884:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getReal3x3ConstantAction_6_0()); 
            }
            // InternalNabla.g:6885:2: ()
            // InternalNabla.g:6885:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getReal3x3ConstantAction_6_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__0__Impl"


    // $ANTLR start "rule__Atomic__Group_6__1"
    // InternalNabla.g:6893:1: rule__Atomic__Group_6__1 : rule__Atomic__Group_6__1__Impl rule__Atomic__Group_6__2 ;
    public final void rule__Atomic__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6897:1: ( rule__Atomic__Group_6__1__Impl rule__Atomic__Group_6__2 )
            // InternalNabla.g:6898:2: rule__Atomic__Group_6__1__Impl rule__Atomic__Group_6__2
            {
            pushFollow(FOLLOW_11);
            rule__Atomic__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_6__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__1"


    // $ANTLR start "rule__Atomic__Group_6__1__Impl"
    // InternalNabla.g:6905:1: rule__Atomic__Group_6__1__Impl : ( '{' ) ;
    public final void rule__Atomic__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6909:1: ( ( '{' ) )
            // InternalNabla.g:6910:1: ( '{' )
            {
            // InternalNabla.g:6910:1: ( '{' )
            // InternalNabla.g:6911:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getLeftCurlyBracketKeyword_6_1()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getLeftCurlyBracketKeyword_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__1__Impl"


    // $ANTLR start "rule__Atomic__Group_6__2"
    // InternalNabla.g:6920:1: rule__Atomic__Group_6__2 : rule__Atomic__Group_6__2__Impl rule__Atomic__Group_6__3 ;
    public final void rule__Atomic__Group_6__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6924:1: ( rule__Atomic__Group_6__2__Impl rule__Atomic__Group_6__3 )
            // InternalNabla.g:6925:2: rule__Atomic__Group_6__2__Impl rule__Atomic__Group_6__3
            {
            pushFollow(FOLLOW_17);
            rule__Atomic__Group_6__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_6__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__2"


    // $ANTLR start "rule__Atomic__Group_6__2__Impl"
    // InternalNabla.g:6932:1: rule__Atomic__Group_6__2__Impl : ( ( rule__Atomic__XAssignment_6_2 ) ) ;
    public final void rule__Atomic__Group_6__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6936:1: ( ( ( rule__Atomic__XAssignment_6_2 ) ) )
            // InternalNabla.g:6937:1: ( ( rule__Atomic__XAssignment_6_2 ) )
            {
            // InternalNabla.g:6937:1: ( ( rule__Atomic__XAssignment_6_2 ) )
            // InternalNabla.g:6938:2: ( rule__Atomic__XAssignment_6_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getXAssignment_6_2()); 
            }
            // InternalNabla.g:6939:2: ( rule__Atomic__XAssignment_6_2 )
            // InternalNabla.g:6939:3: rule__Atomic__XAssignment_6_2
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__XAssignment_6_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getXAssignment_6_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__2__Impl"


    // $ANTLR start "rule__Atomic__Group_6__3"
    // InternalNabla.g:6947:1: rule__Atomic__Group_6__3 : rule__Atomic__Group_6__3__Impl rule__Atomic__Group_6__4 ;
    public final void rule__Atomic__Group_6__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6951:1: ( rule__Atomic__Group_6__3__Impl rule__Atomic__Group_6__4 )
            // InternalNabla.g:6952:2: rule__Atomic__Group_6__3__Impl rule__Atomic__Group_6__4
            {
            pushFollow(FOLLOW_11);
            rule__Atomic__Group_6__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_6__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__3"


    // $ANTLR start "rule__Atomic__Group_6__3__Impl"
    // InternalNabla.g:6959:1: rule__Atomic__Group_6__3__Impl : ( ',' ) ;
    public final void rule__Atomic__Group_6__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6963:1: ( ( ',' ) )
            // InternalNabla.g:6964:1: ( ',' )
            {
            // InternalNabla.g:6964:1: ( ',' )
            // InternalNabla.g:6965:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getCommaKeyword_6_3()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getCommaKeyword_6_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__3__Impl"


    // $ANTLR start "rule__Atomic__Group_6__4"
    // InternalNabla.g:6974:1: rule__Atomic__Group_6__4 : rule__Atomic__Group_6__4__Impl rule__Atomic__Group_6__5 ;
    public final void rule__Atomic__Group_6__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6978:1: ( rule__Atomic__Group_6__4__Impl rule__Atomic__Group_6__5 )
            // InternalNabla.g:6979:2: rule__Atomic__Group_6__4__Impl rule__Atomic__Group_6__5
            {
            pushFollow(FOLLOW_17);
            rule__Atomic__Group_6__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_6__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__4"


    // $ANTLR start "rule__Atomic__Group_6__4__Impl"
    // InternalNabla.g:6986:1: rule__Atomic__Group_6__4__Impl : ( ( rule__Atomic__YAssignment_6_4 ) ) ;
    public final void rule__Atomic__Group_6__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6990:1: ( ( ( rule__Atomic__YAssignment_6_4 ) ) )
            // InternalNabla.g:6991:1: ( ( rule__Atomic__YAssignment_6_4 ) )
            {
            // InternalNabla.g:6991:1: ( ( rule__Atomic__YAssignment_6_4 ) )
            // InternalNabla.g:6992:2: ( rule__Atomic__YAssignment_6_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getYAssignment_6_4()); 
            }
            // InternalNabla.g:6993:2: ( rule__Atomic__YAssignment_6_4 )
            // InternalNabla.g:6993:3: rule__Atomic__YAssignment_6_4
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__YAssignment_6_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getYAssignment_6_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__4__Impl"


    // $ANTLR start "rule__Atomic__Group_6__5"
    // InternalNabla.g:7001:1: rule__Atomic__Group_6__5 : rule__Atomic__Group_6__5__Impl rule__Atomic__Group_6__6 ;
    public final void rule__Atomic__Group_6__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7005:1: ( rule__Atomic__Group_6__5__Impl rule__Atomic__Group_6__6 )
            // InternalNabla.g:7006:2: rule__Atomic__Group_6__5__Impl rule__Atomic__Group_6__6
            {
            pushFollow(FOLLOW_11);
            rule__Atomic__Group_6__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_6__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__5"


    // $ANTLR start "rule__Atomic__Group_6__5__Impl"
    // InternalNabla.g:7013:1: rule__Atomic__Group_6__5__Impl : ( ',' ) ;
    public final void rule__Atomic__Group_6__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7017:1: ( ( ',' ) )
            // InternalNabla.g:7018:1: ( ',' )
            {
            // InternalNabla.g:7018:1: ( ',' )
            // InternalNabla.g:7019:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getCommaKeyword_6_5()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getCommaKeyword_6_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__5__Impl"


    // $ANTLR start "rule__Atomic__Group_6__6"
    // InternalNabla.g:7028:1: rule__Atomic__Group_6__6 : rule__Atomic__Group_6__6__Impl rule__Atomic__Group_6__7 ;
    public final void rule__Atomic__Group_6__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7032:1: ( rule__Atomic__Group_6__6__Impl rule__Atomic__Group_6__7 )
            // InternalNabla.g:7033:2: rule__Atomic__Group_6__6__Impl rule__Atomic__Group_6__7
            {
            pushFollow(FOLLOW_18);
            rule__Atomic__Group_6__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_6__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__6"


    // $ANTLR start "rule__Atomic__Group_6__6__Impl"
    // InternalNabla.g:7040:1: rule__Atomic__Group_6__6__Impl : ( ( rule__Atomic__ZAssignment_6_6 ) ) ;
    public final void rule__Atomic__Group_6__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7044:1: ( ( ( rule__Atomic__ZAssignment_6_6 ) ) )
            // InternalNabla.g:7045:1: ( ( rule__Atomic__ZAssignment_6_6 ) )
            {
            // InternalNabla.g:7045:1: ( ( rule__Atomic__ZAssignment_6_6 ) )
            // InternalNabla.g:7046:2: ( rule__Atomic__ZAssignment_6_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getZAssignment_6_6()); 
            }
            // InternalNabla.g:7047:2: ( rule__Atomic__ZAssignment_6_6 )
            // InternalNabla.g:7047:3: rule__Atomic__ZAssignment_6_6
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__ZAssignment_6_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getZAssignment_6_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__6__Impl"


    // $ANTLR start "rule__Atomic__Group_6__7"
    // InternalNabla.g:7055:1: rule__Atomic__Group_6__7 : rule__Atomic__Group_6__7__Impl ;
    public final void rule__Atomic__Group_6__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7059:1: ( rule__Atomic__Group_6__7__Impl )
            // InternalNabla.g:7060:2: rule__Atomic__Group_6__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_6__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__7"


    // $ANTLR start "rule__Atomic__Group_6__7__Impl"
    // InternalNabla.g:7066:1: rule__Atomic__Group_6__7__Impl : ( '}' ) ;
    public final void rule__Atomic__Group_6__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7070:1: ( ( '}' ) )
            // InternalNabla.g:7071:1: ( '}' )
            {
            // InternalNabla.g:7071:1: ( '}' )
            // InternalNabla.g:7072:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getRightCurlyBracketKeyword_6_7()); 
            }
            match(input,37,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getRightCurlyBracketKeyword_6_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__7__Impl"


    // $ANTLR start "rule__Atomic__Group_7__0"
    // InternalNabla.g:7082:1: rule__Atomic__Group_7__0 : rule__Atomic__Group_7__0__Impl rule__Atomic__Group_7__1 ;
    public final void rule__Atomic__Group_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7086:1: ( rule__Atomic__Group_7__0__Impl rule__Atomic__Group_7__1 )
            // InternalNabla.g:7087:2: rule__Atomic__Group_7__0__Impl rule__Atomic__Group_7__1
            {
            pushFollow(FOLLOW_30);
            rule__Atomic__Group_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_7__0"


    // $ANTLR start "rule__Atomic__Group_7__0__Impl"
    // InternalNabla.g:7094:1: rule__Atomic__Group_7__0__Impl : ( () ) ;
    public final void rule__Atomic__Group_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7098:1: ( ( () ) )
            // InternalNabla.g:7099:1: ( () )
            {
            // InternalNabla.g:7099:1: ( () )
            // InternalNabla.g:7100:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getRealXCompactConstantAction_7_0()); 
            }
            // InternalNabla.g:7101:2: ()
            // InternalNabla.g:7101:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getRealXCompactConstantAction_7_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_7__0__Impl"


    // $ANTLR start "rule__Atomic__Group_7__1"
    // InternalNabla.g:7109:1: rule__Atomic__Group_7__1 : rule__Atomic__Group_7__1__Impl rule__Atomic__Group_7__2 ;
    public final void rule__Atomic__Group_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7113:1: ( rule__Atomic__Group_7__1__Impl rule__Atomic__Group_7__2 )
            // InternalNabla.g:7114:2: rule__Atomic__Group_7__1__Impl rule__Atomic__Group_7__2
            {
            pushFollow(FOLLOW_22);
            rule__Atomic__Group_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_7__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_7__1"


    // $ANTLR start "rule__Atomic__Group_7__1__Impl"
    // InternalNabla.g:7121:1: rule__Atomic__Group_7__1__Impl : ( ( rule__Atomic__TypeAssignment_7_1 ) ) ;
    public final void rule__Atomic__Group_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7125:1: ( ( ( rule__Atomic__TypeAssignment_7_1 ) ) )
            // InternalNabla.g:7126:1: ( ( rule__Atomic__TypeAssignment_7_1 ) )
            {
            // InternalNabla.g:7126:1: ( ( rule__Atomic__TypeAssignment_7_1 ) )
            // InternalNabla.g:7127:2: ( rule__Atomic__TypeAssignment_7_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getTypeAssignment_7_1()); 
            }
            // InternalNabla.g:7128:2: ( rule__Atomic__TypeAssignment_7_1 )
            // InternalNabla.g:7128:3: rule__Atomic__TypeAssignment_7_1
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__TypeAssignment_7_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getTypeAssignment_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_7__1__Impl"


    // $ANTLR start "rule__Atomic__Group_7__2"
    // InternalNabla.g:7136:1: rule__Atomic__Group_7__2 : rule__Atomic__Group_7__2__Impl rule__Atomic__Group_7__3 ;
    public final void rule__Atomic__Group_7__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7140:1: ( rule__Atomic__Group_7__2__Impl rule__Atomic__Group_7__3 )
            // InternalNabla.g:7141:2: rule__Atomic__Group_7__2__Impl rule__Atomic__Group_7__3
            {
            pushFollow(FOLLOW_55);
            rule__Atomic__Group_7__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_7__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_7__2"


    // $ANTLR start "rule__Atomic__Group_7__2__Impl"
    // InternalNabla.g:7148:1: rule__Atomic__Group_7__2__Impl : ( '(' ) ;
    public final void rule__Atomic__Group_7__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7152:1: ( ( '(' ) )
            // InternalNabla.g:7153:1: ( '(' )
            {
            // InternalNabla.g:7153:1: ( '(' )
            // InternalNabla.g:7154:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_7_2()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_7_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_7__2__Impl"


    // $ANTLR start "rule__Atomic__Group_7__3"
    // InternalNabla.g:7163:1: rule__Atomic__Group_7__3 : rule__Atomic__Group_7__3__Impl rule__Atomic__Group_7__4 ;
    public final void rule__Atomic__Group_7__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7167:1: ( rule__Atomic__Group_7__3__Impl rule__Atomic__Group_7__4 )
            // InternalNabla.g:7168:2: rule__Atomic__Group_7__3__Impl rule__Atomic__Group_7__4
            {
            pushFollow(FOLLOW_23);
            rule__Atomic__Group_7__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_7__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_7__3"


    // $ANTLR start "rule__Atomic__Group_7__3__Impl"
    // InternalNabla.g:7175:1: rule__Atomic__Group_7__3__Impl : ( ( rule__Atomic__ValueAssignment_7_3 ) ) ;
    public final void rule__Atomic__Group_7__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7179:1: ( ( ( rule__Atomic__ValueAssignment_7_3 ) ) )
            // InternalNabla.g:7180:1: ( ( rule__Atomic__ValueAssignment_7_3 ) )
            {
            // InternalNabla.g:7180:1: ( ( rule__Atomic__ValueAssignment_7_3 ) )
            // InternalNabla.g:7181:2: ( rule__Atomic__ValueAssignment_7_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getValueAssignment_7_3()); 
            }
            // InternalNabla.g:7182:2: ( rule__Atomic__ValueAssignment_7_3 )
            // InternalNabla.g:7182:3: rule__Atomic__ValueAssignment_7_3
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__ValueAssignment_7_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getValueAssignment_7_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_7__3__Impl"


    // $ANTLR start "rule__Atomic__Group_7__4"
    // InternalNabla.g:7190:1: rule__Atomic__Group_7__4 : rule__Atomic__Group_7__4__Impl ;
    public final void rule__Atomic__Group_7__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7194:1: ( rule__Atomic__Group_7__4__Impl )
            // InternalNabla.g:7195:2: rule__Atomic__Group_7__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_7__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_7__4"


    // $ANTLR start "rule__Atomic__Group_7__4__Impl"
    // InternalNabla.g:7201:1: rule__Atomic__Group_7__4__Impl : ( ')' ) ;
    public final void rule__Atomic__Group_7__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7205:1: ( ( ')' ) )
            // InternalNabla.g:7206:1: ( ')' )
            {
            // InternalNabla.g:7206:1: ( ')' )
            // InternalNabla.g:7207:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getRightParenthesisKeyword_7_4()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getRightParenthesisKeyword_7_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_7__4__Impl"


    // $ANTLR start "rule__Atomic__Group_8__0"
    // InternalNabla.g:7217:1: rule__Atomic__Group_8__0 : rule__Atomic__Group_8__0__Impl rule__Atomic__Group_8__1 ;
    public final void rule__Atomic__Group_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7221:1: ( rule__Atomic__Group_8__0__Impl rule__Atomic__Group_8__1 )
            // InternalNabla.g:7222:2: rule__Atomic__Group_8__0__Impl rule__Atomic__Group_8__1
            {
            pushFollow(FOLLOW_30);
            rule__Atomic__Group_8__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_8__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_8__0"


    // $ANTLR start "rule__Atomic__Group_8__0__Impl"
    // InternalNabla.g:7229:1: rule__Atomic__Group_8__0__Impl : ( () ) ;
    public final void rule__Atomic__Group_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7233:1: ( ( () ) )
            // InternalNabla.g:7234:1: ( () )
            {
            // InternalNabla.g:7234:1: ( () )
            // InternalNabla.g:7235:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getMinConstantAction_8_0()); 
            }
            // InternalNabla.g:7236:2: ()
            // InternalNabla.g:7236:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getMinConstantAction_8_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_8__0__Impl"


    // $ANTLR start "rule__Atomic__Group_8__1"
    // InternalNabla.g:7244:1: rule__Atomic__Group_8__1 : rule__Atomic__Group_8__1__Impl rule__Atomic__Group_8__2 ;
    public final void rule__Atomic__Group_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7248:1: ( rule__Atomic__Group_8__1__Impl rule__Atomic__Group_8__2 )
            // InternalNabla.g:7249:2: rule__Atomic__Group_8__1__Impl rule__Atomic__Group_8__2
            {
            pushFollow(FOLLOW_57);
            rule__Atomic__Group_8__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_8__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_8__1"


    // $ANTLR start "rule__Atomic__Group_8__1__Impl"
    // InternalNabla.g:7256:1: rule__Atomic__Group_8__1__Impl : ( ( rule__Atomic__TypeAssignment_8_1 ) ) ;
    public final void rule__Atomic__Group_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7260:1: ( ( ( rule__Atomic__TypeAssignment_8_1 ) ) )
            // InternalNabla.g:7261:1: ( ( rule__Atomic__TypeAssignment_8_1 ) )
            {
            // InternalNabla.g:7261:1: ( ( rule__Atomic__TypeAssignment_8_1 ) )
            // InternalNabla.g:7262:2: ( rule__Atomic__TypeAssignment_8_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getTypeAssignment_8_1()); 
            }
            // InternalNabla.g:7263:2: ( rule__Atomic__TypeAssignment_8_1 )
            // InternalNabla.g:7263:3: rule__Atomic__TypeAssignment_8_1
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__TypeAssignment_8_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getTypeAssignment_8_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_8__1__Impl"


    // $ANTLR start "rule__Atomic__Group_8__2"
    // InternalNabla.g:7271:1: rule__Atomic__Group_8__2 : rule__Atomic__Group_8__2__Impl ;
    public final void rule__Atomic__Group_8__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7275:1: ( rule__Atomic__Group_8__2__Impl )
            // InternalNabla.g:7276:2: rule__Atomic__Group_8__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_8__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_8__2"


    // $ANTLR start "rule__Atomic__Group_8__2__Impl"
    // InternalNabla.g:7282:1: rule__Atomic__Group_8__2__Impl : ( '.MinValue' ) ;
    public final void rule__Atomic__Group_8__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7286:1: ( ( '.MinValue' ) )
            // InternalNabla.g:7287:1: ( '.MinValue' )
            {
            // InternalNabla.g:7287:1: ( '.MinValue' )
            // InternalNabla.g:7288:2: '.MinValue'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getMinValueKeyword_8_2()); 
            }
            match(input,53,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getMinValueKeyword_8_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_8__2__Impl"


    // $ANTLR start "rule__Atomic__Group_9__0"
    // InternalNabla.g:7298:1: rule__Atomic__Group_9__0 : rule__Atomic__Group_9__0__Impl rule__Atomic__Group_9__1 ;
    public final void rule__Atomic__Group_9__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7302:1: ( rule__Atomic__Group_9__0__Impl rule__Atomic__Group_9__1 )
            // InternalNabla.g:7303:2: rule__Atomic__Group_9__0__Impl rule__Atomic__Group_9__1
            {
            pushFollow(FOLLOW_30);
            rule__Atomic__Group_9__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_9__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_9__0"


    // $ANTLR start "rule__Atomic__Group_9__0__Impl"
    // InternalNabla.g:7310:1: rule__Atomic__Group_9__0__Impl : ( () ) ;
    public final void rule__Atomic__Group_9__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7314:1: ( ( () ) )
            // InternalNabla.g:7315:1: ( () )
            {
            // InternalNabla.g:7315:1: ( () )
            // InternalNabla.g:7316:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getMaxConstantAction_9_0()); 
            }
            // InternalNabla.g:7317:2: ()
            // InternalNabla.g:7317:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getMaxConstantAction_9_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_9__0__Impl"


    // $ANTLR start "rule__Atomic__Group_9__1"
    // InternalNabla.g:7325:1: rule__Atomic__Group_9__1 : rule__Atomic__Group_9__1__Impl rule__Atomic__Group_9__2 ;
    public final void rule__Atomic__Group_9__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7329:1: ( rule__Atomic__Group_9__1__Impl rule__Atomic__Group_9__2 )
            // InternalNabla.g:7330:2: rule__Atomic__Group_9__1__Impl rule__Atomic__Group_9__2
            {
            pushFollow(FOLLOW_58);
            rule__Atomic__Group_9__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_9__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_9__1"


    // $ANTLR start "rule__Atomic__Group_9__1__Impl"
    // InternalNabla.g:7337:1: rule__Atomic__Group_9__1__Impl : ( ( rule__Atomic__TypeAssignment_9_1 ) ) ;
    public final void rule__Atomic__Group_9__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7341:1: ( ( ( rule__Atomic__TypeAssignment_9_1 ) ) )
            // InternalNabla.g:7342:1: ( ( rule__Atomic__TypeAssignment_9_1 ) )
            {
            // InternalNabla.g:7342:1: ( ( rule__Atomic__TypeAssignment_9_1 ) )
            // InternalNabla.g:7343:2: ( rule__Atomic__TypeAssignment_9_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getTypeAssignment_9_1()); 
            }
            // InternalNabla.g:7344:2: ( rule__Atomic__TypeAssignment_9_1 )
            // InternalNabla.g:7344:3: rule__Atomic__TypeAssignment_9_1
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__TypeAssignment_9_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getTypeAssignment_9_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_9__1__Impl"


    // $ANTLR start "rule__Atomic__Group_9__2"
    // InternalNabla.g:7352:1: rule__Atomic__Group_9__2 : rule__Atomic__Group_9__2__Impl ;
    public final void rule__Atomic__Group_9__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7356:1: ( rule__Atomic__Group_9__2__Impl )
            // InternalNabla.g:7357:2: rule__Atomic__Group_9__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_9__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_9__2"


    // $ANTLR start "rule__Atomic__Group_9__2__Impl"
    // InternalNabla.g:7363:1: rule__Atomic__Group_9__2__Impl : ( '.MaxValue' ) ;
    public final void rule__Atomic__Group_9__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7367:1: ( ( '.MaxValue' ) )
            // InternalNabla.g:7368:1: ( '.MaxValue' )
            {
            // InternalNabla.g:7368:1: ( '.MaxValue' )
            // InternalNabla.g:7369:2: '.MaxValue'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getMaxValueKeyword_9_2()); 
            }
            match(input,54,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getMaxValueKeyword_9_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_9__2__Impl"


    // $ANTLR start "rule__Atomic__Group_10__0"
    // InternalNabla.g:7379:1: rule__Atomic__Group_10__0 : rule__Atomic__Group_10__0__Impl rule__Atomic__Group_10__1 ;
    public final void rule__Atomic__Group_10__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7383:1: ( rule__Atomic__Group_10__0__Impl rule__Atomic__Group_10__1 )
            // InternalNabla.g:7384:2: rule__Atomic__Group_10__0__Impl rule__Atomic__Group_10__1
            {
            pushFollow(FOLLOW_3);
            rule__Atomic__Group_10__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_10__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10__0"


    // $ANTLR start "rule__Atomic__Group_10__0__Impl"
    // InternalNabla.g:7391:1: rule__Atomic__Group_10__0__Impl : ( () ) ;
    public final void rule__Atomic__Group_10__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7395:1: ( ( () ) )
            // InternalNabla.g:7396:1: ( () )
            {
            // InternalNabla.g:7396:1: ( () )
            // InternalNabla.g:7397:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getFunctionCallAction_10_0()); 
            }
            // InternalNabla.g:7398:2: ()
            // InternalNabla.g:7398:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getFunctionCallAction_10_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10__0__Impl"


    // $ANTLR start "rule__Atomic__Group_10__1"
    // InternalNabla.g:7406:1: rule__Atomic__Group_10__1 : rule__Atomic__Group_10__1__Impl rule__Atomic__Group_10__2 ;
    public final void rule__Atomic__Group_10__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7410:1: ( rule__Atomic__Group_10__1__Impl rule__Atomic__Group_10__2 )
            // InternalNabla.g:7411:2: rule__Atomic__Group_10__1__Impl rule__Atomic__Group_10__2
            {
            pushFollow(FOLLOW_22);
            rule__Atomic__Group_10__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_10__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10__1"


    // $ANTLR start "rule__Atomic__Group_10__1__Impl"
    // InternalNabla.g:7418:1: rule__Atomic__Group_10__1__Impl : ( ( rule__Atomic__FunctionAssignment_10_1 ) ) ;
    public final void rule__Atomic__Group_10__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7422:1: ( ( ( rule__Atomic__FunctionAssignment_10_1 ) ) )
            // InternalNabla.g:7423:1: ( ( rule__Atomic__FunctionAssignment_10_1 ) )
            {
            // InternalNabla.g:7423:1: ( ( rule__Atomic__FunctionAssignment_10_1 ) )
            // InternalNabla.g:7424:2: ( rule__Atomic__FunctionAssignment_10_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getFunctionAssignment_10_1()); 
            }
            // InternalNabla.g:7425:2: ( rule__Atomic__FunctionAssignment_10_1 )
            // InternalNabla.g:7425:3: rule__Atomic__FunctionAssignment_10_1
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__FunctionAssignment_10_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getFunctionAssignment_10_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10__1__Impl"


    // $ANTLR start "rule__Atomic__Group_10__2"
    // InternalNabla.g:7433:1: rule__Atomic__Group_10__2 : rule__Atomic__Group_10__2__Impl rule__Atomic__Group_10__3 ;
    public final void rule__Atomic__Group_10__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7437:1: ( rule__Atomic__Group_10__2__Impl rule__Atomic__Group_10__3 )
            // InternalNabla.g:7438:2: rule__Atomic__Group_10__2__Impl rule__Atomic__Group_10__3
            {
            pushFollow(FOLLOW_59);
            rule__Atomic__Group_10__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_10__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10__2"


    // $ANTLR start "rule__Atomic__Group_10__2__Impl"
    // InternalNabla.g:7445:1: rule__Atomic__Group_10__2__Impl : ( '(' ) ;
    public final void rule__Atomic__Group_10__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7449:1: ( ( '(' ) )
            // InternalNabla.g:7450:1: ( '(' )
            {
            // InternalNabla.g:7450:1: ( '(' )
            // InternalNabla.g:7451:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_10_2()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_10_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10__2__Impl"


    // $ANTLR start "rule__Atomic__Group_10__3"
    // InternalNabla.g:7460:1: rule__Atomic__Group_10__3 : rule__Atomic__Group_10__3__Impl rule__Atomic__Group_10__4 ;
    public final void rule__Atomic__Group_10__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7464:1: ( rule__Atomic__Group_10__3__Impl rule__Atomic__Group_10__4 )
            // InternalNabla.g:7465:2: rule__Atomic__Group_10__3__Impl rule__Atomic__Group_10__4
            {
            pushFollow(FOLLOW_59);
            rule__Atomic__Group_10__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_10__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10__3"


    // $ANTLR start "rule__Atomic__Group_10__3__Impl"
    // InternalNabla.g:7472:1: rule__Atomic__Group_10__3__Impl : ( ( rule__Atomic__Group_10_3__0 )? ) ;
    public final void rule__Atomic__Group_10__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7476:1: ( ( ( rule__Atomic__Group_10_3__0 )? ) )
            // InternalNabla.g:7477:1: ( ( rule__Atomic__Group_10_3__0 )? )
            {
            // InternalNabla.g:7477:1: ( ( rule__Atomic__Group_10_3__0 )? )
            // InternalNabla.g:7478:2: ( rule__Atomic__Group_10_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getGroup_10_3()); 
            }
            // InternalNabla.g:7479:2: ( rule__Atomic__Group_10_3__0 )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( ((LA46_0>=RULE_ID && LA46_0<=RULE_REAL)||(LA46_0>=21 && LA46_0<=28)||LA46_0==36||LA46_0==44||(LA46_0>=51 && LA46_0<=52)||LA46_0==64) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalNabla.g:7479:3: rule__Atomic__Group_10_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Atomic__Group_10_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getGroup_10_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10__3__Impl"


    // $ANTLR start "rule__Atomic__Group_10__4"
    // InternalNabla.g:7487:1: rule__Atomic__Group_10__4 : rule__Atomic__Group_10__4__Impl ;
    public final void rule__Atomic__Group_10__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7491:1: ( rule__Atomic__Group_10__4__Impl )
            // InternalNabla.g:7492:2: rule__Atomic__Group_10__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_10__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10__4"


    // $ANTLR start "rule__Atomic__Group_10__4__Impl"
    // InternalNabla.g:7498:1: rule__Atomic__Group_10__4__Impl : ( ')' ) ;
    public final void rule__Atomic__Group_10__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7502:1: ( ( ')' ) )
            // InternalNabla.g:7503:1: ( ')' )
            {
            // InternalNabla.g:7503:1: ( ')' )
            // InternalNabla.g:7504:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getRightParenthesisKeyword_10_4()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getRightParenthesisKeyword_10_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10__4__Impl"


    // $ANTLR start "rule__Atomic__Group_10_3__0"
    // InternalNabla.g:7514:1: rule__Atomic__Group_10_3__0 : rule__Atomic__Group_10_3__0__Impl rule__Atomic__Group_10_3__1 ;
    public final void rule__Atomic__Group_10_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7518:1: ( rule__Atomic__Group_10_3__0__Impl rule__Atomic__Group_10_3__1 )
            // InternalNabla.g:7519:2: rule__Atomic__Group_10_3__0__Impl rule__Atomic__Group_10_3__1
            {
            pushFollow(FOLLOW_17);
            rule__Atomic__Group_10_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_10_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10_3__0"


    // $ANTLR start "rule__Atomic__Group_10_3__0__Impl"
    // InternalNabla.g:7526:1: rule__Atomic__Group_10_3__0__Impl : ( ( rule__Atomic__ArgsAssignment_10_3_0 ) ) ;
    public final void rule__Atomic__Group_10_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7530:1: ( ( ( rule__Atomic__ArgsAssignment_10_3_0 ) ) )
            // InternalNabla.g:7531:1: ( ( rule__Atomic__ArgsAssignment_10_3_0 ) )
            {
            // InternalNabla.g:7531:1: ( ( rule__Atomic__ArgsAssignment_10_3_0 ) )
            // InternalNabla.g:7532:2: ( rule__Atomic__ArgsAssignment_10_3_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getArgsAssignment_10_3_0()); 
            }
            // InternalNabla.g:7533:2: ( rule__Atomic__ArgsAssignment_10_3_0 )
            // InternalNabla.g:7533:3: rule__Atomic__ArgsAssignment_10_3_0
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__ArgsAssignment_10_3_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getArgsAssignment_10_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10_3__0__Impl"


    // $ANTLR start "rule__Atomic__Group_10_3__1"
    // InternalNabla.g:7541:1: rule__Atomic__Group_10_3__1 : rule__Atomic__Group_10_3__1__Impl ;
    public final void rule__Atomic__Group_10_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7545:1: ( rule__Atomic__Group_10_3__1__Impl )
            // InternalNabla.g:7546:2: rule__Atomic__Group_10_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_10_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10_3__1"


    // $ANTLR start "rule__Atomic__Group_10_3__1__Impl"
    // InternalNabla.g:7552:1: rule__Atomic__Group_10_3__1__Impl : ( ( rule__Atomic__Group_10_3_1__0 )* ) ;
    public final void rule__Atomic__Group_10_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7556:1: ( ( ( rule__Atomic__Group_10_3_1__0 )* ) )
            // InternalNabla.g:7557:1: ( ( rule__Atomic__Group_10_3_1__0 )* )
            {
            // InternalNabla.g:7557:1: ( ( rule__Atomic__Group_10_3_1__0 )* )
            // InternalNabla.g:7558:2: ( rule__Atomic__Group_10_3_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getGroup_10_3_1()); 
            }
            // InternalNabla.g:7559:2: ( rule__Atomic__Group_10_3_1__0 )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==41) ) {
                    alt47=1;
                }


                switch (alt47) {
            	case 1 :
            	    // InternalNabla.g:7559:3: rule__Atomic__Group_10_3_1__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__Atomic__Group_10_3_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getGroup_10_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10_3__1__Impl"


    // $ANTLR start "rule__Atomic__Group_10_3_1__0"
    // InternalNabla.g:7568:1: rule__Atomic__Group_10_3_1__0 : rule__Atomic__Group_10_3_1__0__Impl rule__Atomic__Group_10_3_1__1 ;
    public final void rule__Atomic__Group_10_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7572:1: ( rule__Atomic__Group_10_3_1__0__Impl rule__Atomic__Group_10_3_1__1 )
            // InternalNabla.g:7573:2: rule__Atomic__Group_10_3_1__0__Impl rule__Atomic__Group_10_3_1__1
            {
            pushFollow(FOLLOW_21);
            rule__Atomic__Group_10_3_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_10_3_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10_3_1__0"


    // $ANTLR start "rule__Atomic__Group_10_3_1__0__Impl"
    // InternalNabla.g:7580:1: rule__Atomic__Group_10_3_1__0__Impl : ( ',' ) ;
    public final void rule__Atomic__Group_10_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7584:1: ( ( ',' ) )
            // InternalNabla.g:7585:1: ( ',' )
            {
            // InternalNabla.g:7585:1: ( ',' )
            // InternalNabla.g:7586:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getCommaKeyword_10_3_1_0()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getCommaKeyword_10_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10_3_1__0__Impl"


    // $ANTLR start "rule__Atomic__Group_10_3_1__1"
    // InternalNabla.g:7595:1: rule__Atomic__Group_10_3_1__1 : rule__Atomic__Group_10_3_1__1__Impl ;
    public final void rule__Atomic__Group_10_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7599:1: ( rule__Atomic__Group_10_3_1__1__Impl )
            // InternalNabla.g:7600:2: rule__Atomic__Group_10_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_10_3_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10_3_1__1"


    // $ANTLR start "rule__Atomic__Group_10_3_1__1__Impl"
    // InternalNabla.g:7606:1: rule__Atomic__Group_10_3_1__1__Impl : ( ( rule__Atomic__ArgsAssignment_10_3_1_1 ) ) ;
    public final void rule__Atomic__Group_10_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7610:1: ( ( ( rule__Atomic__ArgsAssignment_10_3_1_1 ) ) )
            // InternalNabla.g:7611:1: ( ( rule__Atomic__ArgsAssignment_10_3_1_1 ) )
            {
            // InternalNabla.g:7611:1: ( ( rule__Atomic__ArgsAssignment_10_3_1_1 ) )
            // InternalNabla.g:7612:2: ( rule__Atomic__ArgsAssignment_10_3_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getArgsAssignment_10_3_1_1()); 
            }
            // InternalNabla.g:7613:2: ( rule__Atomic__ArgsAssignment_10_3_1_1 )
            // InternalNabla.g:7613:3: rule__Atomic__ArgsAssignment_10_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__ArgsAssignment_10_3_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getArgsAssignment_10_3_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10_3_1__1__Impl"


    // $ANTLR start "rule__Atomic__Group_11__0"
    // InternalNabla.g:7622:1: rule__Atomic__Group_11__0 : rule__Atomic__Group_11__0__Impl rule__Atomic__Group_11__1 ;
    public final void rule__Atomic__Group_11__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7626:1: ( rule__Atomic__Group_11__0__Impl rule__Atomic__Group_11__1 )
            // InternalNabla.g:7627:2: rule__Atomic__Group_11__0__Impl rule__Atomic__Group_11__1
            {
            pushFollow(FOLLOW_3);
            rule__Atomic__Group_11__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_11__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__0"


    // $ANTLR start "rule__Atomic__Group_11__0__Impl"
    // InternalNabla.g:7634:1: rule__Atomic__Group_11__0__Impl : ( () ) ;
    public final void rule__Atomic__Group_11__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7638:1: ( ( () ) )
            // InternalNabla.g:7639:1: ( () )
            {
            // InternalNabla.g:7639:1: ( () )
            // InternalNabla.g:7640:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getReductionCallAction_11_0()); 
            }
            // InternalNabla.g:7641:2: ()
            // InternalNabla.g:7641:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getReductionCallAction_11_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__0__Impl"


    // $ANTLR start "rule__Atomic__Group_11__1"
    // InternalNabla.g:7649:1: rule__Atomic__Group_11__1 : rule__Atomic__Group_11__1__Impl rule__Atomic__Group_11__2 ;
    public final void rule__Atomic__Group_11__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7653:1: ( rule__Atomic__Group_11__1__Impl rule__Atomic__Group_11__2 )
            // InternalNabla.g:7654:2: rule__Atomic__Group_11__1__Impl rule__Atomic__Group_11__2
            {
            pushFollow(FOLLOW_11);
            rule__Atomic__Group_11__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_11__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__1"


    // $ANTLR start "rule__Atomic__Group_11__1__Impl"
    // InternalNabla.g:7661:1: rule__Atomic__Group_11__1__Impl : ( ( rule__Atomic__ReductionAssignment_11_1 ) ) ;
    public final void rule__Atomic__Group_11__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7665:1: ( ( ( rule__Atomic__ReductionAssignment_11_1 ) ) )
            // InternalNabla.g:7666:1: ( ( rule__Atomic__ReductionAssignment_11_1 ) )
            {
            // InternalNabla.g:7666:1: ( ( rule__Atomic__ReductionAssignment_11_1 ) )
            // InternalNabla.g:7667:2: ( rule__Atomic__ReductionAssignment_11_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getReductionAssignment_11_1()); 
            }
            // InternalNabla.g:7668:2: ( rule__Atomic__ReductionAssignment_11_1 )
            // InternalNabla.g:7668:3: rule__Atomic__ReductionAssignment_11_1
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__ReductionAssignment_11_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getReductionAssignment_11_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__1__Impl"


    // $ANTLR start "rule__Atomic__Group_11__2"
    // InternalNabla.g:7676:1: rule__Atomic__Group_11__2 : rule__Atomic__Group_11__2__Impl rule__Atomic__Group_11__3 ;
    public final void rule__Atomic__Group_11__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7680:1: ( rule__Atomic__Group_11__2__Impl rule__Atomic__Group_11__3 )
            // InternalNabla.g:7681:2: rule__Atomic__Group_11__2__Impl rule__Atomic__Group_11__3
            {
            pushFollow(FOLLOW_3);
            rule__Atomic__Group_11__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_11__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__2"


    // $ANTLR start "rule__Atomic__Group_11__2__Impl"
    // InternalNabla.g:7688:1: rule__Atomic__Group_11__2__Impl : ( '{' ) ;
    public final void rule__Atomic__Group_11__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7692:1: ( ( '{' ) )
            // InternalNabla.g:7693:1: ( '{' )
            {
            // InternalNabla.g:7693:1: ( '{' )
            // InternalNabla.g:7694:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getLeftCurlyBracketKeyword_11_2()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getLeftCurlyBracketKeyword_11_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__2__Impl"


    // $ANTLR start "rule__Atomic__Group_11__3"
    // InternalNabla.g:7703:1: rule__Atomic__Group_11__3 : rule__Atomic__Group_11__3__Impl rule__Atomic__Group_11__4 ;
    public final void rule__Atomic__Group_11__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7707:1: ( rule__Atomic__Group_11__3__Impl rule__Atomic__Group_11__4 )
            // InternalNabla.g:7708:2: rule__Atomic__Group_11__3__Impl rule__Atomic__Group_11__4
            {
            pushFollow(FOLLOW_18);
            rule__Atomic__Group_11__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_11__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__3"


    // $ANTLR start "rule__Atomic__Group_11__3__Impl"
    // InternalNabla.g:7715:1: rule__Atomic__Group_11__3__Impl : ( ( rule__Atomic__IteratorAssignment_11_3 ) ) ;
    public final void rule__Atomic__Group_11__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7719:1: ( ( ( rule__Atomic__IteratorAssignment_11_3 ) ) )
            // InternalNabla.g:7720:1: ( ( rule__Atomic__IteratorAssignment_11_3 ) )
            {
            // InternalNabla.g:7720:1: ( ( rule__Atomic__IteratorAssignment_11_3 ) )
            // InternalNabla.g:7721:2: ( rule__Atomic__IteratorAssignment_11_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getIteratorAssignment_11_3()); 
            }
            // InternalNabla.g:7722:2: ( rule__Atomic__IteratorAssignment_11_3 )
            // InternalNabla.g:7722:3: rule__Atomic__IteratorAssignment_11_3
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__IteratorAssignment_11_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getIteratorAssignment_11_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__3__Impl"


    // $ANTLR start "rule__Atomic__Group_11__4"
    // InternalNabla.g:7730:1: rule__Atomic__Group_11__4 : rule__Atomic__Group_11__4__Impl rule__Atomic__Group_11__5 ;
    public final void rule__Atomic__Group_11__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7734:1: ( rule__Atomic__Group_11__4__Impl rule__Atomic__Group_11__5 )
            // InternalNabla.g:7735:2: rule__Atomic__Group_11__4__Impl rule__Atomic__Group_11__5
            {
            pushFollow(FOLLOW_22);
            rule__Atomic__Group_11__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_11__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__4"


    // $ANTLR start "rule__Atomic__Group_11__4__Impl"
    // InternalNabla.g:7742:1: rule__Atomic__Group_11__4__Impl : ( '}' ) ;
    public final void rule__Atomic__Group_11__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7746:1: ( ( '}' ) )
            // InternalNabla.g:7747:1: ( '}' )
            {
            // InternalNabla.g:7747:1: ( '}' )
            // InternalNabla.g:7748:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getRightCurlyBracketKeyword_11_4()); 
            }
            match(input,37,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getRightCurlyBracketKeyword_11_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__4__Impl"


    // $ANTLR start "rule__Atomic__Group_11__5"
    // InternalNabla.g:7757:1: rule__Atomic__Group_11__5 : rule__Atomic__Group_11__5__Impl rule__Atomic__Group_11__6 ;
    public final void rule__Atomic__Group_11__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7761:1: ( rule__Atomic__Group_11__5__Impl rule__Atomic__Group_11__6 )
            // InternalNabla.g:7762:2: rule__Atomic__Group_11__5__Impl rule__Atomic__Group_11__6
            {
            pushFollow(FOLLOW_21);
            rule__Atomic__Group_11__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_11__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__5"


    // $ANTLR start "rule__Atomic__Group_11__5__Impl"
    // InternalNabla.g:7769:1: rule__Atomic__Group_11__5__Impl : ( '(' ) ;
    public final void rule__Atomic__Group_11__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7773:1: ( ( '(' ) )
            // InternalNabla.g:7774:1: ( '(' )
            {
            // InternalNabla.g:7774:1: ( '(' )
            // InternalNabla.g:7775:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_11_5()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_11_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__5__Impl"


    // $ANTLR start "rule__Atomic__Group_11__6"
    // InternalNabla.g:7784:1: rule__Atomic__Group_11__6 : rule__Atomic__Group_11__6__Impl rule__Atomic__Group_11__7 ;
    public final void rule__Atomic__Group_11__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7788:1: ( rule__Atomic__Group_11__6__Impl rule__Atomic__Group_11__7 )
            // InternalNabla.g:7789:2: rule__Atomic__Group_11__6__Impl rule__Atomic__Group_11__7
            {
            pushFollow(FOLLOW_23);
            rule__Atomic__Group_11__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_11__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__6"


    // $ANTLR start "rule__Atomic__Group_11__6__Impl"
    // InternalNabla.g:7796:1: rule__Atomic__Group_11__6__Impl : ( ( rule__Atomic__ArgAssignment_11_6 ) ) ;
    public final void rule__Atomic__Group_11__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7800:1: ( ( ( rule__Atomic__ArgAssignment_11_6 ) ) )
            // InternalNabla.g:7801:1: ( ( rule__Atomic__ArgAssignment_11_6 ) )
            {
            // InternalNabla.g:7801:1: ( ( rule__Atomic__ArgAssignment_11_6 ) )
            // InternalNabla.g:7802:2: ( rule__Atomic__ArgAssignment_11_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getArgAssignment_11_6()); 
            }
            // InternalNabla.g:7803:2: ( rule__Atomic__ArgAssignment_11_6 )
            // InternalNabla.g:7803:3: rule__Atomic__ArgAssignment_11_6
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__ArgAssignment_11_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getArgAssignment_11_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__6__Impl"


    // $ANTLR start "rule__Atomic__Group_11__7"
    // InternalNabla.g:7811:1: rule__Atomic__Group_11__7 : rule__Atomic__Group_11__7__Impl ;
    public final void rule__Atomic__Group_11__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7815:1: ( rule__Atomic__Group_11__7__Impl )
            // InternalNabla.g:7816:2: rule__Atomic__Group_11__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_11__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__7"


    // $ANTLR start "rule__Atomic__Group_11__7__Impl"
    // InternalNabla.g:7822:1: rule__Atomic__Group_11__7__Impl : ( ')' ) ;
    public final void rule__Atomic__Group_11__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7826:1: ( ( ')' ) )
            // InternalNabla.g:7827:1: ( ')' )
            {
            // InternalNabla.g:7827:1: ( ')' )
            // InternalNabla.g:7828:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getRightParenthesisKeyword_11_7()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getRightParenthesisKeyword_11_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__7__Impl"


    // $ANTLR start "rule__Real2Constant__Group__0"
    // InternalNabla.g:7838:1: rule__Real2Constant__Group__0 : rule__Real2Constant__Group__0__Impl rule__Real2Constant__Group__1 ;
    public final void rule__Real2Constant__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7842:1: ( rule__Real2Constant__Group__0__Impl rule__Real2Constant__Group__1 )
            // InternalNabla.g:7843:2: rule__Real2Constant__Group__0__Impl rule__Real2Constant__Group__1
            {
            pushFollow(FOLLOW_55);
            rule__Real2Constant__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Real2Constant__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real2Constant__Group__0"


    // $ANTLR start "rule__Real2Constant__Group__0__Impl"
    // InternalNabla.g:7850:1: rule__Real2Constant__Group__0__Impl : ( '{' ) ;
    public final void rule__Real2Constant__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7854:1: ( ( '{' ) )
            // InternalNabla.g:7855:1: ( '{' )
            {
            // InternalNabla.g:7855:1: ( '{' )
            // InternalNabla.g:7856:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal2ConstantAccess().getLeftCurlyBracketKeyword_0()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal2ConstantAccess().getLeftCurlyBracketKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real2Constant__Group__0__Impl"


    // $ANTLR start "rule__Real2Constant__Group__1"
    // InternalNabla.g:7865:1: rule__Real2Constant__Group__1 : rule__Real2Constant__Group__1__Impl rule__Real2Constant__Group__2 ;
    public final void rule__Real2Constant__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7869:1: ( rule__Real2Constant__Group__1__Impl rule__Real2Constant__Group__2 )
            // InternalNabla.g:7870:2: rule__Real2Constant__Group__1__Impl rule__Real2Constant__Group__2
            {
            pushFollow(FOLLOW_17);
            rule__Real2Constant__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Real2Constant__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real2Constant__Group__1"


    // $ANTLR start "rule__Real2Constant__Group__1__Impl"
    // InternalNabla.g:7877:1: rule__Real2Constant__Group__1__Impl : ( ( rule__Real2Constant__XAssignment_1 ) ) ;
    public final void rule__Real2Constant__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7881:1: ( ( ( rule__Real2Constant__XAssignment_1 ) ) )
            // InternalNabla.g:7882:1: ( ( rule__Real2Constant__XAssignment_1 ) )
            {
            // InternalNabla.g:7882:1: ( ( rule__Real2Constant__XAssignment_1 ) )
            // InternalNabla.g:7883:2: ( rule__Real2Constant__XAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal2ConstantAccess().getXAssignment_1()); 
            }
            // InternalNabla.g:7884:2: ( rule__Real2Constant__XAssignment_1 )
            // InternalNabla.g:7884:3: rule__Real2Constant__XAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Real2Constant__XAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal2ConstantAccess().getXAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real2Constant__Group__1__Impl"


    // $ANTLR start "rule__Real2Constant__Group__2"
    // InternalNabla.g:7892:1: rule__Real2Constant__Group__2 : rule__Real2Constant__Group__2__Impl rule__Real2Constant__Group__3 ;
    public final void rule__Real2Constant__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7896:1: ( rule__Real2Constant__Group__2__Impl rule__Real2Constant__Group__3 )
            // InternalNabla.g:7897:2: rule__Real2Constant__Group__2__Impl rule__Real2Constant__Group__3
            {
            pushFollow(FOLLOW_55);
            rule__Real2Constant__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Real2Constant__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real2Constant__Group__2"


    // $ANTLR start "rule__Real2Constant__Group__2__Impl"
    // InternalNabla.g:7904:1: rule__Real2Constant__Group__2__Impl : ( ',' ) ;
    public final void rule__Real2Constant__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7908:1: ( ( ',' ) )
            // InternalNabla.g:7909:1: ( ',' )
            {
            // InternalNabla.g:7909:1: ( ',' )
            // InternalNabla.g:7910:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal2ConstantAccess().getCommaKeyword_2()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal2ConstantAccess().getCommaKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real2Constant__Group__2__Impl"


    // $ANTLR start "rule__Real2Constant__Group__3"
    // InternalNabla.g:7919:1: rule__Real2Constant__Group__3 : rule__Real2Constant__Group__3__Impl rule__Real2Constant__Group__4 ;
    public final void rule__Real2Constant__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7923:1: ( rule__Real2Constant__Group__3__Impl rule__Real2Constant__Group__4 )
            // InternalNabla.g:7924:2: rule__Real2Constant__Group__3__Impl rule__Real2Constant__Group__4
            {
            pushFollow(FOLLOW_18);
            rule__Real2Constant__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Real2Constant__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real2Constant__Group__3"


    // $ANTLR start "rule__Real2Constant__Group__3__Impl"
    // InternalNabla.g:7931:1: rule__Real2Constant__Group__3__Impl : ( ( rule__Real2Constant__YAssignment_3 ) ) ;
    public final void rule__Real2Constant__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7935:1: ( ( ( rule__Real2Constant__YAssignment_3 ) ) )
            // InternalNabla.g:7936:1: ( ( rule__Real2Constant__YAssignment_3 ) )
            {
            // InternalNabla.g:7936:1: ( ( rule__Real2Constant__YAssignment_3 ) )
            // InternalNabla.g:7937:2: ( rule__Real2Constant__YAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal2ConstantAccess().getYAssignment_3()); 
            }
            // InternalNabla.g:7938:2: ( rule__Real2Constant__YAssignment_3 )
            // InternalNabla.g:7938:3: rule__Real2Constant__YAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Real2Constant__YAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal2ConstantAccess().getYAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real2Constant__Group__3__Impl"


    // $ANTLR start "rule__Real2Constant__Group__4"
    // InternalNabla.g:7946:1: rule__Real2Constant__Group__4 : rule__Real2Constant__Group__4__Impl ;
    public final void rule__Real2Constant__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7950:1: ( rule__Real2Constant__Group__4__Impl )
            // InternalNabla.g:7951:2: rule__Real2Constant__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Real2Constant__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real2Constant__Group__4"


    // $ANTLR start "rule__Real2Constant__Group__4__Impl"
    // InternalNabla.g:7957:1: rule__Real2Constant__Group__4__Impl : ( '}' ) ;
    public final void rule__Real2Constant__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7961:1: ( ( '}' ) )
            // InternalNabla.g:7962:1: ( '}' )
            {
            // InternalNabla.g:7962:1: ( '}' )
            // InternalNabla.g:7963:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal2ConstantAccess().getRightCurlyBracketKeyword_4()); 
            }
            match(input,37,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal2ConstantAccess().getRightCurlyBracketKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real2Constant__Group__4__Impl"


    // $ANTLR start "rule__Real3Constant__Group__0"
    // InternalNabla.g:7973:1: rule__Real3Constant__Group__0 : rule__Real3Constant__Group__0__Impl rule__Real3Constant__Group__1 ;
    public final void rule__Real3Constant__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7977:1: ( rule__Real3Constant__Group__0__Impl rule__Real3Constant__Group__1 )
            // InternalNabla.g:7978:2: rule__Real3Constant__Group__0__Impl rule__Real3Constant__Group__1
            {
            pushFollow(FOLLOW_55);
            rule__Real3Constant__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Real3Constant__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__Group__0"


    // $ANTLR start "rule__Real3Constant__Group__0__Impl"
    // InternalNabla.g:7985:1: rule__Real3Constant__Group__0__Impl : ( '{' ) ;
    public final void rule__Real3Constant__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7989:1: ( ( '{' ) )
            // InternalNabla.g:7990:1: ( '{' )
            {
            // InternalNabla.g:7990:1: ( '{' )
            // InternalNabla.g:7991:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal3ConstantAccess().getLeftCurlyBracketKeyword_0()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal3ConstantAccess().getLeftCurlyBracketKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__Group__0__Impl"


    // $ANTLR start "rule__Real3Constant__Group__1"
    // InternalNabla.g:8000:1: rule__Real3Constant__Group__1 : rule__Real3Constant__Group__1__Impl rule__Real3Constant__Group__2 ;
    public final void rule__Real3Constant__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8004:1: ( rule__Real3Constant__Group__1__Impl rule__Real3Constant__Group__2 )
            // InternalNabla.g:8005:2: rule__Real3Constant__Group__1__Impl rule__Real3Constant__Group__2
            {
            pushFollow(FOLLOW_17);
            rule__Real3Constant__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Real3Constant__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__Group__1"


    // $ANTLR start "rule__Real3Constant__Group__1__Impl"
    // InternalNabla.g:8012:1: rule__Real3Constant__Group__1__Impl : ( ( rule__Real3Constant__XAssignment_1 ) ) ;
    public final void rule__Real3Constant__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8016:1: ( ( ( rule__Real3Constant__XAssignment_1 ) ) )
            // InternalNabla.g:8017:1: ( ( rule__Real3Constant__XAssignment_1 ) )
            {
            // InternalNabla.g:8017:1: ( ( rule__Real3Constant__XAssignment_1 ) )
            // InternalNabla.g:8018:2: ( rule__Real3Constant__XAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal3ConstantAccess().getXAssignment_1()); 
            }
            // InternalNabla.g:8019:2: ( rule__Real3Constant__XAssignment_1 )
            // InternalNabla.g:8019:3: rule__Real3Constant__XAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Real3Constant__XAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal3ConstantAccess().getXAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__Group__1__Impl"


    // $ANTLR start "rule__Real3Constant__Group__2"
    // InternalNabla.g:8027:1: rule__Real3Constant__Group__2 : rule__Real3Constant__Group__2__Impl rule__Real3Constant__Group__3 ;
    public final void rule__Real3Constant__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8031:1: ( rule__Real3Constant__Group__2__Impl rule__Real3Constant__Group__3 )
            // InternalNabla.g:8032:2: rule__Real3Constant__Group__2__Impl rule__Real3Constant__Group__3
            {
            pushFollow(FOLLOW_55);
            rule__Real3Constant__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Real3Constant__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__Group__2"


    // $ANTLR start "rule__Real3Constant__Group__2__Impl"
    // InternalNabla.g:8039:1: rule__Real3Constant__Group__2__Impl : ( ',' ) ;
    public final void rule__Real3Constant__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8043:1: ( ( ',' ) )
            // InternalNabla.g:8044:1: ( ',' )
            {
            // InternalNabla.g:8044:1: ( ',' )
            // InternalNabla.g:8045:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal3ConstantAccess().getCommaKeyword_2()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal3ConstantAccess().getCommaKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__Group__2__Impl"


    // $ANTLR start "rule__Real3Constant__Group__3"
    // InternalNabla.g:8054:1: rule__Real3Constant__Group__3 : rule__Real3Constant__Group__3__Impl rule__Real3Constant__Group__4 ;
    public final void rule__Real3Constant__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8058:1: ( rule__Real3Constant__Group__3__Impl rule__Real3Constant__Group__4 )
            // InternalNabla.g:8059:2: rule__Real3Constant__Group__3__Impl rule__Real3Constant__Group__4
            {
            pushFollow(FOLLOW_17);
            rule__Real3Constant__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Real3Constant__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__Group__3"


    // $ANTLR start "rule__Real3Constant__Group__3__Impl"
    // InternalNabla.g:8066:1: rule__Real3Constant__Group__3__Impl : ( ( rule__Real3Constant__YAssignment_3 ) ) ;
    public final void rule__Real3Constant__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8070:1: ( ( ( rule__Real3Constant__YAssignment_3 ) ) )
            // InternalNabla.g:8071:1: ( ( rule__Real3Constant__YAssignment_3 ) )
            {
            // InternalNabla.g:8071:1: ( ( rule__Real3Constant__YAssignment_3 ) )
            // InternalNabla.g:8072:2: ( rule__Real3Constant__YAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal3ConstantAccess().getYAssignment_3()); 
            }
            // InternalNabla.g:8073:2: ( rule__Real3Constant__YAssignment_3 )
            // InternalNabla.g:8073:3: rule__Real3Constant__YAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Real3Constant__YAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal3ConstantAccess().getYAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__Group__3__Impl"


    // $ANTLR start "rule__Real3Constant__Group__4"
    // InternalNabla.g:8081:1: rule__Real3Constant__Group__4 : rule__Real3Constant__Group__4__Impl rule__Real3Constant__Group__5 ;
    public final void rule__Real3Constant__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8085:1: ( rule__Real3Constant__Group__4__Impl rule__Real3Constant__Group__5 )
            // InternalNabla.g:8086:2: rule__Real3Constant__Group__4__Impl rule__Real3Constant__Group__5
            {
            pushFollow(FOLLOW_55);
            rule__Real3Constant__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Real3Constant__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__Group__4"


    // $ANTLR start "rule__Real3Constant__Group__4__Impl"
    // InternalNabla.g:8093:1: rule__Real3Constant__Group__4__Impl : ( ',' ) ;
    public final void rule__Real3Constant__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8097:1: ( ( ',' ) )
            // InternalNabla.g:8098:1: ( ',' )
            {
            // InternalNabla.g:8098:1: ( ',' )
            // InternalNabla.g:8099:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal3ConstantAccess().getCommaKeyword_4()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal3ConstantAccess().getCommaKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__Group__4__Impl"


    // $ANTLR start "rule__Real3Constant__Group__5"
    // InternalNabla.g:8108:1: rule__Real3Constant__Group__5 : rule__Real3Constant__Group__5__Impl rule__Real3Constant__Group__6 ;
    public final void rule__Real3Constant__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8112:1: ( rule__Real3Constant__Group__5__Impl rule__Real3Constant__Group__6 )
            // InternalNabla.g:8113:2: rule__Real3Constant__Group__5__Impl rule__Real3Constant__Group__6
            {
            pushFollow(FOLLOW_18);
            rule__Real3Constant__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Real3Constant__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__Group__5"


    // $ANTLR start "rule__Real3Constant__Group__5__Impl"
    // InternalNabla.g:8120:1: rule__Real3Constant__Group__5__Impl : ( ( rule__Real3Constant__ZAssignment_5 ) ) ;
    public final void rule__Real3Constant__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8124:1: ( ( ( rule__Real3Constant__ZAssignment_5 ) ) )
            // InternalNabla.g:8125:1: ( ( rule__Real3Constant__ZAssignment_5 ) )
            {
            // InternalNabla.g:8125:1: ( ( rule__Real3Constant__ZAssignment_5 ) )
            // InternalNabla.g:8126:2: ( rule__Real3Constant__ZAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal3ConstantAccess().getZAssignment_5()); 
            }
            // InternalNabla.g:8127:2: ( rule__Real3Constant__ZAssignment_5 )
            // InternalNabla.g:8127:3: rule__Real3Constant__ZAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__Real3Constant__ZAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal3ConstantAccess().getZAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__Group__5__Impl"


    // $ANTLR start "rule__Real3Constant__Group__6"
    // InternalNabla.g:8135:1: rule__Real3Constant__Group__6 : rule__Real3Constant__Group__6__Impl ;
    public final void rule__Real3Constant__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8139:1: ( rule__Real3Constant__Group__6__Impl )
            // InternalNabla.g:8140:2: rule__Real3Constant__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Real3Constant__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__Group__6"


    // $ANTLR start "rule__Real3Constant__Group__6__Impl"
    // InternalNabla.g:8146:1: rule__Real3Constant__Group__6__Impl : ( '}' ) ;
    public final void rule__Real3Constant__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8150:1: ( ( '}' ) )
            // InternalNabla.g:8151:1: ( '}' )
            {
            // InternalNabla.g:8151:1: ( '}' )
            // InternalNabla.g:8152:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal3ConstantAccess().getRightCurlyBracketKeyword_6()); 
            }
            match(input,37,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal3ConstantAccess().getRightCurlyBracketKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__Group__6__Impl"


    // $ANTLR start "rule__VarRef__Group__0"
    // InternalNabla.g:8162:1: rule__VarRef__Group__0 : rule__VarRef__Group__0__Impl rule__VarRef__Group__1 ;
    public final void rule__VarRef__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8166:1: ( rule__VarRef__Group__0__Impl rule__VarRef__Group__1 )
            // InternalNabla.g:8167:2: rule__VarRef__Group__0__Impl rule__VarRef__Group__1
            {
            pushFollow(FOLLOW_60);
            rule__VarRef__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarRef__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group__0"


    // $ANTLR start "rule__VarRef__Group__0__Impl"
    // InternalNabla.g:8174:1: rule__VarRef__Group__0__Impl : ( ( rule__VarRef__VariableAssignment_0 ) ) ;
    public final void rule__VarRef__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8178:1: ( ( ( rule__VarRef__VariableAssignment_0 ) ) )
            // InternalNabla.g:8179:1: ( ( rule__VarRef__VariableAssignment_0 ) )
            {
            // InternalNabla.g:8179:1: ( ( rule__VarRef__VariableAssignment_0 ) )
            // InternalNabla.g:8180:2: ( rule__VarRef__VariableAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getVariableAssignment_0()); 
            }
            // InternalNabla.g:8181:2: ( rule__VarRef__VariableAssignment_0 )
            // InternalNabla.g:8181:3: rule__VarRef__VariableAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__VarRef__VariableAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getVariableAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group__0__Impl"


    // $ANTLR start "rule__VarRef__Group__1"
    // InternalNabla.g:8189:1: rule__VarRef__Group__1 : rule__VarRef__Group__1__Impl rule__VarRef__Group__2 ;
    public final void rule__VarRef__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8193:1: ( rule__VarRef__Group__1__Impl rule__VarRef__Group__2 )
            // InternalNabla.g:8194:2: rule__VarRef__Group__1__Impl rule__VarRef__Group__2
            {
            pushFollow(FOLLOW_60);
            rule__VarRef__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarRef__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group__1"


    // $ANTLR start "rule__VarRef__Group__1__Impl"
    // InternalNabla.g:8201:1: rule__VarRef__Group__1__Impl : ( ( rule__VarRef__Group_1__0 )? ) ;
    public final void rule__VarRef__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8205:1: ( ( ( rule__VarRef__Group_1__0 )? ) )
            // InternalNabla.g:8206:1: ( ( rule__VarRef__Group_1__0 )? )
            {
            // InternalNabla.g:8206:1: ( ( rule__VarRef__Group_1__0 )? )
            // InternalNabla.g:8207:2: ( rule__VarRef__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getGroup_1()); 
            }
            // InternalNabla.g:8208:2: ( rule__VarRef__Group_1__0 )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==36) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalNabla.g:8208:3: rule__VarRef__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarRef__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group__1__Impl"


    // $ANTLR start "rule__VarRef__Group__2"
    // InternalNabla.g:8216:1: rule__VarRef__Group__2 : rule__VarRef__Group__2__Impl rule__VarRef__Group__3 ;
    public final void rule__VarRef__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8220:1: ( rule__VarRef__Group__2__Impl rule__VarRef__Group__3 )
            // InternalNabla.g:8221:2: rule__VarRef__Group__2__Impl rule__VarRef__Group__3
            {
            pushFollow(FOLLOW_60);
            rule__VarRef__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarRef__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group__2"


    // $ANTLR start "rule__VarRef__Group__2__Impl"
    // InternalNabla.g:8228:1: rule__VarRef__Group__2__Impl : ( ( rule__VarRef__Group_2__0 )? ) ;
    public final void rule__VarRef__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8232:1: ( ( ( rule__VarRef__Group_2__0 )? ) )
            // InternalNabla.g:8233:1: ( ( rule__VarRef__Group_2__0 )? )
            {
            // InternalNabla.g:8233:1: ( ( rule__VarRef__Group_2__0 )? )
            // InternalNabla.g:8234:2: ( rule__VarRef__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getGroup_2()); 
            }
            // InternalNabla.g:8235:2: ( rule__VarRef__Group_2__0 )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==55) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalNabla.g:8235:3: rule__VarRef__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarRef__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group__2__Impl"


    // $ANTLR start "rule__VarRef__Group__3"
    // InternalNabla.g:8243:1: rule__VarRef__Group__3 : rule__VarRef__Group__3__Impl ;
    public final void rule__VarRef__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8247:1: ( rule__VarRef__Group__3__Impl )
            // InternalNabla.g:8248:2: rule__VarRef__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarRef__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group__3"


    // $ANTLR start "rule__VarRef__Group__3__Impl"
    // InternalNabla.g:8254:1: rule__VarRef__Group__3__Impl : ( ( rule__VarRef__Group_3__0 )* ) ;
    public final void rule__VarRef__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8258:1: ( ( ( rule__VarRef__Group_3__0 )* ) )
            // InternalNabla.g:8259:1: ( ( rule__VarRef__Group_3__0 )* )
            {
            // InternalNabla.g:8259:1: ( ( rule__VarRef__Group_3__0 )* )
            // InternalNabla.g:8260:2: ( rule__VarRef__Group_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getGroup_3()); 
            }
            // InternalNabla.g:8261:2: ( rule__VarRef__Group_3__0 )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==56) ) {
                    alt50=1;
                }


                switch (alt50) {
            	case 1 :
            	    // InternalNabla.g:8261:3: rule__VarRef__Group_3__0
            	    {
            	    pushFollow(FOLLOW_61);
            	    rule__VarRef__Group_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group__3__Impl"


    // $ANTLR start "rule__VarRef__Group_1__0"
    // InternalNabla.g:8270:1: rule__VarRef__Group_1__0 : rule__VarRef__Group_1__0__Impl rule__VarRef__Group_1__1 ;
    public final void rule__VarRef__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8274:1: ( rule__VarRef__Group_1__0__Impl rule__VarRef__Group_1__1 )
            // InternalNabla.g:8275:2: rule__VarRef__Group_1__0__Impl rule__VarRef__Group_1__1
            {
            pushFollow(FOLLOW_29);
            rule__VarRef__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarRef__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_1__0"


    // $ANTLR start "rule__VarRef__Group_1__0__Impl"
    // InternalNabla.g:8282:1: rule__VarRef__Group_1__0__Impl : ( '{' ) ;
    public final void rule__VarRef__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8286:1: ( ( '{' ) )
            // InternalNabla.g:8287:1: ( '{' )
            {
            // InternalNabla.g:8287:1: ( '{' )
            // InternalNabla.g:8288:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getLeftCurlyBracketKeyword_1_0()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getLeftCurlyBracketKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_1__0__Impl"


    // $ANTLR start "rule__VarRef__Group_1__1"
    // InternalNabla.g:8297:1: rule__VarRef__Group_1__1 : rule__VarRef__Group_1__1__Impl rule__VarRef__Group_1__2 ;
    public final void rule__VarRef__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8301:1: ( rule__VarRef__Group_1__1__Impl rule__VarRef__Group_1__2 )
            // InternalNabla.g:8302:2: rule__VarRef__Group_1__1__Impl rule__VarRef__Group_1__2
            {
            pushFollow(FOLLOW_62);
            rule__VarRef__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarRef__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_1__1"


    // $ANTLR start "rule__VarRef__Group_1__1__Impl"
    // InternalNabla.g:8309:1: rule__VarRef__Group_1__1__Impl : ( ( rule__VarRef__SpaceIteratorsAssignment_1_1 ) ) ;
    public final void rule__VarRef__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8313:1: ( ( ( rule__VarRef__SpaceIteratorsAssignment_1_1 ) ) )
            // InternalNabla.g:8314:1: ( ( rule__VarRef__SpaceIteratorsAssignment_1_1 ) )
            {
            // InternalNabla.g:8314:1: ( ( rule__VarRef__SpaceIteratorsAssignment_1_1 ) )
            // InternalNabla.g:8315:2: ( rule__VarRef__SpaceIteratorsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getSpaceIteratorsAssignment_1_1()); 
            }
            // InternalNabla.g:8316:2: ( rule__VarRef__SpaceIteratorsAssignment_1_1 )
            // InternalNabla.g:8316:3: rule__VarRef__SpaceIteratorsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__VarRef__SpaceIteratorsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getSpaceIteratorsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_1__1__Impl"


    // $ANTLR start "rule__VarRef__Group_1__2"
    // InternalNabla.g:8324:1: rule__VarRef__Group_1__2 : rule__VarRef__Group_1__2__Impl rule__VarRef__Group_1__3 ;
    public final void rule__VarRef__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8328:1: ( rule__VarRef__Group_1__2__Impl rule__VarRef__Group_1__3 )
            // InternalNabla.g:8329:2: rule__VarRef__Group_1__2__Impl rule__VarRef__Group_1__3
            {
            pushFollow(FOLLOW_62);
            rule__VarRef__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarRef__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_1__2"


    // $ANTLR start "rule__VarRef__Group_1__2__Impl"
    // InternalNabla.g:8336:1: rule__VarRef__Group_1__2__Impl : ( ( rule__VarRef__Group_1_2__0 )* ) ;
    public final void rule__VarRef__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8340:1: ( ( ( rule__VarRef__Group_1_2__0 )* ) )
            // InternalNabla.g:8341:1: ( ( rule__VarRef__Group_1_2__0 )* )
            {
            // InternalNabla.g:8341:1: ( ( rule__VarRef__Group_1_2__0 )* )
            // InternalNabla.g:8342:2: ( rule__VarRef__Group_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getGroup_1_2()); 
            }
            // InternalNabla.g:8343:2: ( rule__VarRef__Group_1_2__0 )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==41) ) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalNabla.g:8343:3: rule__VarRef__Group_1_2__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__VarRef__Group_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_1__2__Impl"


    // $ANTLR start "rule__VarRef__Group_1__3"
    // InternalNabla.g:8351:1: rule__VarRef__Group_1__3 : rule__VarRef__Group_1__3__Impl ;
    public final void rule__VarRef__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8355:1: ( rule__VarRef__Group_1__3__Impl )
            // InternalNabla.g:8356:2: rule__VarRef__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarRef__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_1__3"


    // $ANTLR start "rule__VarRef__Group_1__3__Impl"
    // InternalNabla.g:8362:1: rule__VarRef__Group_1__3__Impl : ( '}' ) ;
    public final void rule__VarRef__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8366:1: ( ( '}' ) )
            // InternalNabla.g:8367:1: ( '}' )
            {
            // InternalNabla.g:8367:1: ( '}' )
            // InternalNabla.g:8368:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getRightCurlyBracketKeyword_1_3()); 
            }
            match(input,37,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getRightCurlyBracketKeyword_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_1__3__Impl"


    // $ANTLR start "rule__VarRef__Group_1_2__0"
    // InternalNabla.g:8378:1: rule__VarRef__Group_1_2__0 : rule__VarRef__Group_1_2__0__Impl rule__VarRef__Group_1_2__1 ;
    public final void rule__VarRef__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8382:1: ( rule__VarRef__Group_1_2__0__Impl rule__VarRef__Group_1_2__1 )
            // InternalNabla.g:8383:2: rule__VarRef__Group_1_2__0__Impl rule__VarRef__Group_1_2__1
            {
            pushFollow(FOLLOW_29);
            rule__VarRef__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarRef__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_1_2__0"


    // $ANTLR start "rule__VarRef__Group_1_2__0__Impl"
    // InternalNabla.g:8390:1: rule__VarRef__Group_1_2__0__Impl : ( ',' ) ;
    public final void rule__VarRef__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8394:1: ( ( ',' ) )
            // InternalNabla.g:8395:1: ( ',' )
            {
            // InternalNabla.g:8395:1: ( ',' )
            // InternalNabla.g:8396:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getCommaKeyword_1_2_0()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getCommaKeyword_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_1_2__0__Impl"


    // $ANTLR start "rule__VarRef__Group_1_2__1"
    // InternalNabla.g:8405:1: rule__VarRef__Group_1_2__1 : rule__VarRef__Group_1_2__1__Impl ;
    public final void rule__VarRef__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8409:1: ( rule__VarRef__Group_1_2__1__Impl )
            // InternalNabla.g:8410:2: rule__VarRef__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarRef__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_1_2__1"


    // $ANTLR start "rule__VarRef__Group_1_2__1__Impl"
    // InternalNabla.g:8416:1: rule__VarRef__Group_1_2__1__Impl : ( ( rule__VarRef__SpaceIteratorsAssignment_1_2_1 ) ) ;
    public final void rule__VarRef__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8420:1: ( ( ( rule__VarRef__SpaceIteratorsAssignment_1_2_1 ) ) )
            // InternalNabla.g:8421:1: ( ( rule__VarRef__SpaceIteratorsAssignment_1_2_1 ) )
            {
            // InternalNabla.g:8421:1: ( ( rule__VarRef__SpaceIteratorsAssignment_1_2_1 ) )
            // InternalNabla.g:8422:2: ( rule__VarRef__SpaceIteratorsAssignment_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getSpaceIteratorsAssignment_1_2_1()); 
            }
            // InternalNabla.g:8423:2: ( rule__VarRef__SpaceIteratorsAssignment_1_2_1 )
            // InternalNabla.g:8423:3: rule__VarRef__SpaceIteratorsAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__VarRef__SpaceIteratorsAssignment_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getSpaceIteratorsAssignment_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_1_2__1__Impl"


    // $ANTLR start "rule__VarRef__Group_2__0"
    // InternalNabla.g:8432:1: rule__VarRef__Group_2__0 : rule__VarRef__Group_2__0__Impl rule__VarRef__Group_2__1 ;
    public final void rule__VarRef__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8436:1: ( rule__VarRef__Group_2__0__Impl rule__VarRef__Group_2__1 )
            // InternalNabla.g:8437:2: rule__VarRef__Group_2__0__Impl rule__VarRef__Group_2__1
            {
            pushFollow(FOLLOW_3);
            rule__VarRef__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarRef__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_2__0"


    // $ANTLR start "rule__VarRef__Group_2__0__Impl"
    // InternalNabla.g:8444:1: rule__VarRef__Group_2__0__Impl : ( '^{' ) ;
    public final void rule__VarRef__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8448:1: ( ( '^{' ) )
            // InternalNabla.g:8449:1: ( '^{' )
            {
            // InternalNabla.g:8449:1: ( '^{' )
            // InternalNabla.g:8450:2: '^{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getCircumflexAccentLeftCurlyBracketKeyword_2_0()); 
            }
            match(input,55,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getCircumflexAccentLeftCurlyBracketKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_2__0__Impl"


    // $ANTLR start "rule__VarRef__Group_2__1"
    // InternalNabla.g:8459:1: rule__VarRef__Group_2__1 : rule__VarRef__Group_2__1__Impl rule__VarRef__Group_2__2 ;
    public final void rule__VarRef__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8463:1: ( rule__VarRef__Group_2__1__Impl rule__VarRef__Group_2__2 )
            // InternalNabla.g:8464:2: rule__VarRef__Group_2__1__Impl rule__VarRef__Group_2__2
            {
            pushFollow(FOLLOW_18);
            rule__VarRef__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarRef__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_2__1"


    // $ANTLR start "rule__VarRef__Group_2__1__Impl"
    // InternalNabla.g:8471:1: rule__VarRef__Group_2__1__Impl : ( ( rule__VarRef__TimeIteratorAssignment_2_1 ) ) ;
    public final void rule__VarRef__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8475:1: ( ( ( rule__VarRef__TimeIteratorAssignment_2_1 ) ) )
            // InternalNabla.g:8476:1: ( ( rule__VarRef__TimeIteratorAssignment_2_1 ) )
            {
            // InternalNabla.g:8476:1: ( ( rule__VarRef__TimeIteratorAssignment_2_1 ) )
            // InternalNabla.g:8477:2: ( rule__VarRef__TimeIteratorAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getTimeIteratorAssignment_2_1()); 
            }
            // InternalNabla.g:8478:2: ( rule__VarRef__TimeIteratorAssignment_2_1 )
            // InternalNabla.g:8478:3: rule__VarRef__TimeIteratorAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__VarRef__TimeIteratorAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getTimeIteratorAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_2__1__Impl"


    // $ANTLR start "rule__VarRef__Group_2__2"
    // InternalNabla.g:8486:1: rule__VarRef__Group_2__2 : rule__VarRef__Group_2__2__Impl ;
    public final void rule__VarRef__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8490:1: ( rule__VarRef__Group_2__2__Impl )
            // InternalNabla.g:8491:2: rule__VarRef__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarRef__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_2__2"


    // $ANTLR start "rule__VarRef__Group_2__2__Impl"
    // InternalNabla.g:8497:1: rule__VarRef__Group_2__2__Impl : ( '}' ) ;
    public final void rule__VarRef__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8501:1: ( ( '}' ) )
            // InternalNabla.g:8502:1: ( '}' )
            {
            // InternalNabla.g:8502:1: ( '}' )
            // InternalNabla.g:8503:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getRightCurlyBracketKeyword_2_2()); 
            }
            match(input,37,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getRightCurlyBracketKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_2__2__Impl"


    // $ANTLR start "rule__VarRef__Group_3__0"
    // InternalNabla.g:8513:1: rule__VarRef__Group_3__0 : rule__VarRef__Group_3__0__Impl rule__VarRef__Group_3__1 ;
    public final void rule__VarRef__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8517:1: ( rule__VarRef__Group_3__0__Impl rule__VarRef__Group_3__1 )
            // InternalNabla.g:8518:2: rule__VarRef__Group_3__0__Impl rule__VarRef__Group_3__1
            {
            pushFollow(FOLLOW_3);
            rule__VarRef__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarRef__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_3__0"


    // $ANTLR start "rule__VarRef__Group_3__0__Impl"
    // InternalNabla.g:8525:1: rule__VarRef__Group_3__0__Impl : ( '.' ) ;
    public final void rule__VarRef__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8529:1: ( ( '.' ) )
            // InternalNabla.g:8530:1: ( '.' )
            {
            // InternalNabla.g:8530:1: ( '.' )
            // InternalNabla.g:8531:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getFullStopKeyword_3_0()); 
            }
            match(input,56,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getFullStopKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_3__0__Impl"


    // $ANTLR start "rule__VarRef__Group_3__1"
    // InternalNabla.g:8540:1: rule__VarRef__Group_3__1 : rule__VarRef__Group_3__1__Impl ;
    public final void rule__VarRef__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8544:1: ( rule__VarRef__Group_3__1__Impl )
            // InternalNabla.g:8545:2: rule__VarRef__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarRef__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_3__1"


    // $ANTLR start "rule__VarRef__Group_3__1__Impl"
    // InternalNabla.g:8551:1: rule__VarRef__Group_3__1__Impl : ( ( rule__VarRef__FieldsAssignment_3_1 ) ) ;
    public final void rule__VarRef__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8555:1: ( ( ( rule__VarRef__FieldsAssignment_3_1 ) ) )
            // InternalNabla.g:8556:1: ( ( rule__VarRef__FieldsAssignment_3_1 ) )
            {
            // InternalNabla.g:8556:1: ( ( rule__VarRef__FieldsAssignment_3_1 ) )
            // InternalNabla.g:8557:2: ( rule__VarRef__FieldsAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getFieldsAssignment_3_1()); 
            }
            // InternalNabla.g:8558:2: ( rule__VarRef__FieldsAssignment_3_1 )
            // InternalNabla.g:8558:3: rule__VarRef__FieldsAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__VarRef__FieldsAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getFieldsAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_3__1__Impl"


    // $ANTLR start "rule__TimeIteratorRef__Group__0"
    // InternalNabla.g:8567:1: rule__TimeIteratorRef__Group__0 : rule__TimeIteratorRef__Group__0__Impl rule__TimeIteratorRef__Group__1 ;
    public final void rule__TimeIteratorRef__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8571:1: ( rule__TimeIteratorRef__Group__0__Impl rule__TimeIteratorRef__Group__1 )
            // InternalNabla.g:8572:2: rule__TimeIteratorRef__Group__0__Impl rule__TimeIteratorRef__Group__1
            {
            pushFollow(FOLLOW_63);
            rule__TimeIteratorRef__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeIteratorRef__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIteratorRef__Group__0"


    // $ANTLR start "rule__TimeIteratorRef__Group__0__Impl"
    // InternalNabla.g:8579:1: rule__TimeIteratorRef__Group__0__Impl : ( ( rule__TimeIteratorRef__IteratorAssignment_0 ) ) ;
    public final void rule__TimeIteratorRef__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8583:1: ( ( ( rule__TimeIteratorRef__IteratorAssignment_0 ) ) )
            // InternalNabla.g:8584:1: ( ( rule__TimeIteratorRef__IteratorAssignment_0 ) )
            {
            // InternalNabla.g:8584:1: ( ( rule__TimeIteratorRef__IteratorAssignment_0 ) )
            // InternalNabla.g:8585:2: ( rule__TimeIteratorRef__IteratorAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorRefAccess().getIteratorAssignment_0()); 
            }
            // InternalNabla.g:8586:2: ( rule__TimeIteratorRef__IteratorAssignment_0 )
            // InternalNabla.g:8586:3: rule__TimeIteratorRef__IteratorAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__TimeIteratorRef__IteratorAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorRefAccess().getIteratorAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIteratorRef__Group__0__Impl"


    // $ANTLR start "rule__TimeIteratorRef__Group__1"
    // InternalNabla.g:8594:1: rule__TimeIteratorRef__Group__1 : rule__TimeIteratorRef__Group__1__Impl ;
    public final void rule__TimeIteratorRef__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8598:1: ( rule__TimeIteratorRef__Group__1__Impl )
            // InternalNabla.g:8599:2: rule__TimeIteratorRef__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TimeIteratorRef__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIteratorRef__Group__1"


    // $ANTLR start "rule__TimeIteratorRef__Group__1__Impl"
    // InternalNabla.g:8605:1: rule__TimeIteratorRef__Group__1__Impl : ( ( rule__TimeIteratorRef__Group_1__0 )? ) ;
    public final void rule__TimeIteratorRef__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8609:1: ( ( ( rule__TimeIteratorRef__Group_1__0 )? ) )
            // InternalNabla.g:8610:1: ( ( rule__TimeIteratorRef__Group_1__0 )? )
            {
            // InternalNabla.g:8610:1: ( ( rule__TimeIteratorRef__Group_1__0 )? )
            // InternalNabla.g:8611:2: ( rule__TimeIteratorRef__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorRefAccess().getGroup_1()); 
            }
            // InternalNabla.g:8612:2: ( rule__TimeIteratorRef__Group_1__0 )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==42||LA52_0==63) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalNabla.g:8612:3: rule__TimeIteratorRef__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TimeIteratorRef__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorRefAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIteratorRef__Group__1__Impl"


    // $ANTLR start "rule__TimeIteratorRef__Group_1__0"
    // InternalNabla.g:8621:1: rule__TimeIteratorRef__Group_1__0 : rule__TimeIteratorRef__Group_1__0__Impl rule__TimeIteratorRef__Group_1__1 ;
    public final void rule__TimeIteratorRef__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8625:1: ( rule__TimeIteratorRef__Group_1__0__Impl rule__TimeIteratorRef__Group_1__1 )
            // InternalNabla.g:8626:2: rule__TimeIteratorRef__Group_1__0__Impl rule__TimeIteratorRef__Group_1__1
            {
            pushFollow(FOLLOW_54);
            rule__TimeIteratorRef__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeIteratorRef__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIteratorRef__Group_1__0"


    // $ANTLR start "rule__TimeIteratorRef__Group_1__0__Impl"
    // InternalNabla.g:8633:1: rule__TimeIteratorRef__Group_1__0__Impl : ( ( rule__TimeIteratorRef__Alternatives_1_0 ) ) ;
    public final void rule__TimeIteratorRef__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8637:1: ( ( ( rule__TimeIteratorRef__Alternatives_1_0 ) ) )
            // InternalNabla.g:8638:1: ( ( rule__TimeIteratorRef__Alternatives_1_0 ) )
            {
            // InternalNabla.g:8638:1: ( ( rule__TimeIteratorRef__Alternatives_1_0 ) )
            // InternalNabla.g:8639:2: ( rule__TimeIteratorRef__Alternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorRefAccess().getAlternatives_1_0()); 
            }
            // InternalNabla.g:8640:2: ( rule__TimeIteratorRef__Alternatives_1_0 )
            // InternalNabla.g:8640:3: rule__TimeIteratorRef__Alternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__TimeIteratorRef__Alternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorRefAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIteratorRef__Group_1__0__Impl"


    // $ANTLR start "rule__TimeIteratorRef__Group_1__1"
    // InternalNabla.g:8648:1: rule__TimeIteratorRef__Group_1__1 : rule__TimeIteratorRef__Group_1__1__Impl ;
    public final void rule__TimeIteratorRef__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8652:1: ( rule__TimeIteratorRef__Group_1__1__Impl )
            // InternalNabla.g:8653:2: rule__TimeIteratorRef__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TimeIteratorRef__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIteratorRef__Group_1__1"


    // $ANTLR start "rule__TimeIteratorRef__Group_1__1__Impl"
    // InternalNabla.g:8659:1: rule__TimeIteratorRef__Group_1__1__Impl : ( ( rule__TimeIteratorRef__ValueAssignment_1_1 ) ) ;
    public final void rule__TimeIteratorRef__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8663:1: ( ( ( rule__TimeIteratorRef__ValueAssignment_1_1 ) ) )
            // InternalNabla.g:8664:1: ( ( rule__TimeIteratorRef__ValueAssignment_1_1 ) )
            {
            // InternalNabla.g:8664:1: ( ( rule__TimeIteratorRef__ValueAssignment_1_1 ) )
            // InternalNabla.g:8665:2: ( rule__TimeIteratorRef__ValueAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorRefAccess().getValueAssignment_1_1()); 
            }
            // InternalNabla.g:8666:2: ( rule__TimeIteratorRef__ValueAssignment_1_1 )
            // InternalNabla.g:8666:3: rule__TimeIteratorRef__ValueAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__TimeIteratorRef__ValueAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorRefAccess().getValueAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIteratorRef__Group_1__1__Impl"


    // $ANTLR start "rule__QualifiedName__Group__0"
    // InternalNabla.g:8675:1: rule__QualifiedName__Group__0 : rule__QualifiedName__Group__0__Impl rule__QualifiedName__Group__1 ;
    public final void rule__QualifiedName__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8679:1: ( rule__QualifiedName__Group__0__Impl rule__QualifiedName__Group__1 )
            // InternalNabla.g:8680:2: rule__QualifiedName__Group__0__Impl rule__QualifiedName__Group__1
            {
            pushFollow(FOLLOW_64);
            rule__QualifiedName__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__0"


    // $ANTLR start "rule__QualifiedName__Group__0__Impl"
    // InternalNabla.g:8687:1: rule__QualifiedName__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__QualifiedName__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8691:1: ( ( RULE_ID ) )
            // InternalNabla.g:8692:1: ( RULE_ID )
            {
            // InternalNabla.g:8692:1: ( RULE_ID )
            // InternalNabla.g:8693:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__0__Impl"


    // $ANTLR start "rule__QualifiedName__Group__1"
    // InternalNabla.g:8702:1: rule__QualifiedName__Group__1 : rule__QualifiedName__Group__1__Impl ;
    public final void rule__QualifiedName__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8706:1: ( rule__QualifiedName__Group__1__Impl )
            // InternalNabla.g:8707:2: rule__QualifiedName__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__1"


    // $ANTLR start "rule__QualifiedName__Group__1__Impl"
    // InternalNabla.g:8713:1: rule__QualifiedName__Group__1__Impl : ( ( rule__QualifiedName__Group_1__0 )* ) ;
    public final void rule__QualifiedName__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8717:1: ( ( ( rule__QualifiedName__Group_1__0 )* ) )
            // InternalNabla.g:8718:1: ( ( rule__QualifiedName__Group_1__0 )* )
            {
            // InternalNabla.g:8718:1: ( ( rule__QualifiedName__Group_1__0 )* )
            // InternalNabla.g:8719:2: ( rule__QualifiedName__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameAccess().getGroup_1()); 
            }
            // InternalNabla.g:8720:2: ( rule__QualifiedName__Group_1__0 )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==56) ) {
                    alt53=1;
                }


                switch (alt53) {
            	case 1 :
            	    // InternalNabla.g:8720:3: rule__QualifiedName__Group_1__0
            	    {
            	    pushFollow(FOLLOW_61);
            	    rule__QualifiedName__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__1__Impl"


    // $ANTLR start "rule__QualifiedName__Group_1__0"
    // InternalNabla.g:8729:1: rule__QualifiedName__Group_1__0 : rule__QualifiedName__Group_1__0__Impl rule__QualifiedName__Group_1__1 ;
    public final void rule__QualifiedName__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8733:1: ( rule__QualifiedName__Group_1__0__Impl rule__QualifiedName__Group_1__1 )
            // InternalNabla.g:8734:2: rule__QualifiedName__Group_1__0__Impl rule__QualifiedName__Group_1__1
            {
            pushFollow(FOLLOW_3);
            rule__QualifiedName__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__0"


    // $ANTLR start "rule__QualifiedName__Group_1__0__Impl"
    // InternalNabla.g:8741:1: rule__QualifiedName__Group_1__0__Impl : ( '.' ) ;
    public final void rule__QualifiedName__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8745:1: ( ( '.' ) )
            // InternalNabla.g:8746:1: ( '.' )
            {
            // InternalNabla.g:8746:1: ( '.' )
            // InternalNabla.g:8747:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
            }
            match(input,56,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__0__Impl"


    // $ANTLR start "rule__QualifiedName__Group_1__1"
    // InternalNabla.g:8756:1: rule__QualifiedName__Group_1__1 : rule__QualifiedName__Group_1__1__Impl ;
    public final void rule__QualifiedName__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8760:1: ( rule__QualifiedName__Group_1__1__Impl )
            // InternalNabla.g:8761:2: rule__QualifiedName__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__1"


    // $ANTLR start "rule__QualifiedName__Group_1__1__Impl"
    // InternalNabla.g:8767:1: rule__QualifiedName__Group_1__1__Impl : ( RULE_ID ) ;
    public final void rule__QualifiedName__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8771:1: ( ( RULE_ID ) )
            // InternalNabla.g:8772:1: ( RULE_ID )
            {
            // InternalNabla.g:8772:1: ( RULE_ID )
            // InternalNabla.g:8773:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__1__Impl"


    // $ANTLR start "rule__QualifiedNameWithWildcard__Group__0"
    // InternalNabla.g:8783:1: rule__QualifiedNameWithWildcard__Group__0 : rule__QualifiedNameWithWildcard__Group__0__Impl rule__QualifiedNameWithWildcard__Group__1 ;
    public final void rule__QualifiedNameWithWildcard__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8787:1: ( rule__QualifiedNameWithWildcard__Group__0__Impl rule__QualifiedNameWithWildcard__Group__1 )
            // InternalNabla.g:8788:2: rule__QualifiedNameWithWildcard__Group__0__Impl rule__QualifiedNameWithWildcard__Group__1
            {
            pushFollow(FOLLOW_65);
            rule__QualifiedNameWithWildcard__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QualifiedNameWithWildcard__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameWithWildcard__Group__0"


    // $ANTLR start "rule__QualifiedNameWithWildcard__Group__0__Impl"
    // InternalNabla.g:8795:1: rule__QualifiedNameWithWildcard__Group__0__Impl : ( ruleQualifiedName ) ;
    public final void rule__QualifiedNameWithWildcard__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8799:1: ( ( ruleQualifiedName ) )
            // InternalNabla.g:8800:1: ( ruleQualifiedName )
            {
            // InternalNabla.g:8800:1: ( ruleQualifiedName )
            // InternalNabla.g:8801:2: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameWithWildcard__Group__0__Impl"


    // $ANTLR start "rule__QualifiedNameWithWildcard__Group__1"
    // InternalNabla.g:8810:1: rule__QualifiedNameWithWildcard__Group__1 : rule__QualifiedNameWithWildcard__Group__1__Impl ;
    public final void rule__QualifiedNameWithWildcard__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8814:1: ( rule__QualifiedNameWithWildcard__Group__1__Impl )
            // InternalNabla.g:8815:2: rule__QualifiedNameWithWildcard__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameWithWildcard__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameWithWildcard__Group__1"


    // $ANTLR start "rule__QualifiedNameWithWildcard__Group__1__Impl"
    // InternalNabla.g:8821:1: rule__QualifiedNameWithWildcard__Group__1__Impl : ( ( '.*' )? ) ;
    public final void rule__QualifiedNameWithWildcard__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8825:1: ( ( ( '.*' )? ) )
            // InternalNabla.g:8826:1: ( ( '.*' )? )
            {
            // InternalNabla.g:8826:1: ( ( '.*' )? )
            // InternalNabla.g:8827:2: ( '.*' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); 
            }
            // InternalNabla.g:8828:2: ( '.*' )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==57) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalNabla.g:8828:3: '.*'
                    {
                    match(input,57,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameWithWildcard__Group__1__Impl"


    // $ANTLR start "rule__NablaModule__NameAssignment_1"
    // InternalNabla.g:8837:1: rule__NablaModule__NameAssignment_1 : ( ruleQualifiedName ) ;
    public final void rule__NablaModule__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8841:1: ( ( ruleQualifiedName ) )
            // InternalNabla.g:8842:2: ( ruleQualifiedName )
            {
            // InternalNabla.g:8842:2: ( ruleQualifiedName )
            // InternalNabla.g:8843:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNablaModuleAccess().getNameQualifiedNameParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNablaModuleAccess().getNameQualifiedNameParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__NameAssignment_1"


    // $ANTLR start "rule__NablaModule__ImportsAssignment_3"
    // InternalNabla.g:8852:1: rule__NablaModule__ImportsAssignment_3 : ( ruleImport ) ;
    public final void rule__NablaModule__ImportsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8856:1: ( ( ruleImport ) )
            // InternalNabla.g:8857:2: ( ruleImport )
            {
            // InternalNabla.g:8857:2: ( ruleImport )
            // InternalNabla.g:8858:3: ruleImport
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNablaModuleAccess().getImportsImportParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleImport();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNablaModuleAccess().getImportsImportParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__ImportsAssignment_3"


    // $ANTLR start "rule__NablaModule__BlocksAssignment_4"
    // InternalNabla.g:8867:1: rule__NablaModule__BlocksAssignment_4 : ( ruleDeclarationBlock ) ;
    public final void rule__NablaModule__BlocksAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8871:1: ( ( ruleDeclarationBlock ) )
            // InternalNabla.g:8872:2: ( ruleDeclarationBlock )
            {
            // InternalNabla.g:8872:2: ( ruleDeclarationBlock )
            // InternalNabla.g:8873:3: ruleDeclarationBlock
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNablaModuleAccess().getBlocksDeclarationBlockParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNablaModuleAccess().getBlocksDeclarationBlockParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__BlocksAssignment_4"


    // $ANTLR start "rule__NablaModule__VariablesAssignment_5"
    // InternalNabla.g:8882:1: rule__NablaModule__VariablesAssignment_5 : ( ( rule__NablaModule__VariablesAlternatives_5_0 ) ) ;
    public final void rule__NablaModule__VariablesAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8886:1: ( ( ( rule__NablaModule__VariablesAlternatives_5_0 ) ) )
            // InternalNabla.g:8887:2: ( ( rule__NablaModule__VariablesAlternatives_5_0 ) )
            {
            // InternalNabla.g:8887:2: ( ( rule__NablaModule__VariablesAlternatives_5_0 ) )
            // InternalNabla.g:8888:3: ( rule__NablaModule__VariablesAlternatives_5_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNablaModuleAccess().getVariablesAlternatives_5_0()); 
            }
            // InternalNabla.g:8889:3: ( rule__NablaModule__VariablesAlternatives_5_0 )
            // InternalNabla.g:8889:4: rule__NablaModule__VariablesAlternatives_5_0
            {
            pushFollow(FOLLOW_2);
            rule__NablaModule__VariablesAlternatives_5_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNablaModuleAccess().getVariablesAlternatives_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__VariablesAssignment_5"


    // $ANTLR start "rule__NablaModule__JobsAssignment_6"
    // InternalNabla.g:8897:1: rule__NablaModule__JobsAssignment_6 : ( ruleJob ) ;
    public final void rule__NablaModule__JobsAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8901:1: ( ( ruleJob ) )
            // InternalNabla.g:8902:2: ( ruleJob )
            {
            // InternalNabla.g:8902:2: ( ruleJob )
            // InternalNabla.g:8903:3: ruleJob
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNablaModuleAccess().getJobsJobParserRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleJob();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNablaModuleAccess().getJobsJobParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__JobsAssignment_6"


    // $ANTLR start "rule__Import__ImportedNamespaceAssignment_1"
    // InternalNabla.g:8912:1: rule__Import__ImportedNamespaceAssignment_1 : ( ruleQualifiedNameWithWildcard ) ;
    public final void rule__Import__ImportedNamespaceAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8916:1: ( ( ruleQualifiedNameWithWildcard ) )
            // InternalNabla.g:8917:2: ( ruleQualifiedNameWithWildcard )
            {
            // InternalNabla.g:8917:2: ( ruleQualifiedNameWithWildcard )
            // InternalNabla.g:8918:3: ruleQualifiedNameWithWildcard
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__ImportedNamespaceAssignment_1"


    // $ANTLR start "rule__DeclarationBlock__ConnectivitiesAssignment_0_3"
    // InternalNabla.g:8927:1: rule__DeclarationBlock__ConnectivitiesAssignment_0_3 : ( ruleConnectivity ) ;
    public final void rule__DeclarationBlock__ConnectivitiesAssignment_0_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8931:1: ( ( ruleConnectivity ) )
            // InternalNabla.g:8932:2: ( ruleConnectivity )
            {
            // InternalNabla.g:8932:2: ( ruleConnectivity )
            // InternalNabla.g:8933:3: ruleConnectivity
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationBlockAccess().getConnectivitiesConnectivityParserRuleCall_0_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleConnectivity();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationBlockAccess().getConnectivitiesConnectivityParserRuleCall_0_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__ConnectivitiesAssignment_0_3"


    // $ANTLR start "rule__DeclarationBlock__FunctionsAssignment_1_3"
    // InternalNabla.g:8942:1: rule__DeclarationBlock__FunctionsAssignment_1_3 : ( ( rule__DeclarationBlock__FunctionsAlternatives_1_3_0 ) ) ;
    public final void rule__DeclarationBlock__FunctionsAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8946:1: ( ( ( rule__DeclarationBlock__FunctionsAlternatives_1_3_0 ) ) )
            // InternalNabla.g:8947:2: ( ( rule__DeclarationBlock__FunctionsAlternatives_1_3_0 ) )
            {
            // InternalNabla.g:8947:2: ( ( rule__DeclarationBlock__FunctionsAlternatives_1_3_0 ) )
            // InternalNabla.g:8948:3: ( rule__DeclarationBlock__FunctionsAlternatives_1_3_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationBlockAccess().getFunctionsAlternatives_1_3_0()); 
            }
            // InternalNabla.g:8949:3: ( rule__DeclarationBlock__FunctionsAlternatives_1_3_0 )
            // InternalNabla.g:8949:4: rule__DeclarationBlock__FunctionsAlternatives_1_3_0
            {
            pushFollow(FOLLOW_2);
            rule__DeclarationBlock__FunctionsAlternatives_1_3_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationBlockAccess().getFunctionsAlternatives_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__FunctionsAssignment_1_3"


    // $ANTLR start "rule__Job__NameAssignment_0_1"
    // InternalNabla.g:8957:1: rule__Job__NameAssignment_0_1 : ( RULE_ID ) ;
    public final void rule__Job__NameAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8961:1: ( ( RULE_ID ) )
            // InternalNabla.g:8962:2: ( RULE_ID )
            {
            // InternalNabla.g:8962:2: ( RULE_ID )
            // InternalNabla.g:8963:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getNameIDTerminalRuleCall_0_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getNameIDTerminalRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__NameAssignment_0_1"


    // $ANTLR start "rule__Job__InstructionAssignment_0_3"
    // InternalNabla.g:8972:1: rule__Job__InstructionAssignment_0_3 : ( ruleInstruction ) ;
    public final void rule__Job__InstructionAssignment_0_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8976:1: ( ( ruleInstruction ) )
            // InternalNabla.g:8977:2: ( ruleInstruction )
            {
            // InternalNabla.g:8977:2: ( ruleInstruction )
            // InternalNabla.g:8978:3: ruleInstruction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getInstructionInstructionParserRuleCall_0_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInstruction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getInstructionInstructionParserRuleCall_0_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__InstructionAssignment_0_3"


    // $ANTLR start "rule__Job__NameAssignment_1_1"
    // InternalNabla.g:8987:1: rule__Job__NameAssignment_1_1 : ( RULE_ID ) ;
    public final void rule__Job__NameAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8991:1: ( ( RULE_ID ) )
            // InternalNabla.g:8992:2: ( RULE_ID )
            {
            // InternalNabla.g:8992:2: ( RULE_ID )
            // InternalNabla.g:8993:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getNameIDTerminalRuleCall_1_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getNameIDTerminalRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__NameAssignment_1_1"


    // $ANTLR start "rule__Job__IteratorAssignment_1_4"
    // InternalNabla.g:9002:1: rule__Job__IteratorAssignment_1_4 : ( ruleTimeIterator ) ;
    public final void rule__Job__IteratorAssignment_1_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9006:1: ( ( ruleTimeIterator ) )
            // InternalNabla.g:9007:2: ( ruleTimeIterator )
            {
            // InternalNabla.g:9007:2: ( ruleTimeIterator )
            // InternalNabla.g:9008:3: ruleTimeIterator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getIteratorTimeIteratorParserRuleCall_1_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTimeIterator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getIteratorTimeIteratorParserRuleCall_1_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__IteratorAssignment_1_4"


    // $ANTLR start "rule__Job__InitializationAssignment_1_6"
    // InternalNabla.g:9017:1: rule__Job__InitializationAssignment_1_6 : ( ruleInstruction ) ;
    public final void rule__Job__InitializationAssignment_1_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9021:1: ( ( ruleInstruction ) )
            // InternalNabla.g:9022:2: ( ruleInstruction )
            {
            // InternalNabla.g:9022:2: ( ruleInstruction )
            // InternalNabla.g:9023:3: ruleInstruction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getInitializationInstructionParserRuleCall_1_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInstruction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getInitializationInstructionParserRuleCall_1_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__InitializationAssignment_1_6"


    // $ANTLR start "rule__Job__BodyAssignment_1_8"
    // InternalNabla.g:9032:1: rule__Job__BodyAssignment_1_8 : ( ruleInstruction ) ;
    public final void rule__Job__BodyAssignment_1_8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9036:1: ( ( ruleInstruction ) )
            // InternalNabla.g:9037:2: ( ruleInstruction )
            {
            // InternalNabla.g:9037:2: ( ruleInstruction )
            // InternalNabla.g:9038:3: ruleInstruction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getBodyInstructionParserRuleCall_1_8_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInstruction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getBodyInstructionParserRuleCall_1_8_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__BodyAssignment_1_8"


    // $ANTLR start "rule__Instruction__InstructionsAssignment_2_2"
    // InternalNabla.g:9047:1: rule__Instruction__InstructionsAssignment_2_2 : ( ruleInstruction ) ;
    public final void rule__Instruction__InstructionsAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9051:1: ( ( ruleInstruction ) )
            // InternalNabla.g:9052:2: ( ruleInstruction )
            {
            // InternalNabla.g:9052:2: ( ruleInstruction )
            // InternalNabla.g:9053:3: ruleInstruction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getInstructionsInstructionParserRuleCall_2_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInstruction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getInstructionsInstructionParserRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__InstructionsAssignment_2_2"


    // $ANTLR start "rule__Instruction__VarRefAssignment_3_1"
    // InternalNabla.g:9062:1: rule__Instruction__VarRefAssignment_3_1 : ( ruleVarRef ) ;
    public final void rule__Instruction__VarRefAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9066:1: ( ( ruleVarRef ) )
            // InternalNabla.g:9067:2: ( ruleVarRef )
            {
            // InternalNabla.g:9067:2: ( ruleVarRef )
            // InternalNabla.g:9068:3: ruleVarRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getVarRefVarRefParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVarRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getVarRefVarRefParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__VarRefAssignment_3_1"


    // $ANTLR start "rule__Instruction__ExpressionAssignment_3_3"
    // InternalNabla.g:9077:1: rule__Instruction__ExpressionAssignment_3_3 : ( ruleExpression ) ;
    public final void rule__Instruction__ExpressionAssignment_3_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9081:1: ( ( ruleExpression ) )
            // InternalNabla.g:9082:2: ( ruleExpression )
            {
            // InternalNabla.g:9082:2: ( ruleExpression )
            // InternalNabla.g:9083:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getExpressionExpressionParserRuleCall_3_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getExpressionExpressionParserRuleCall_3_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__ExpressionAssignment_3_3"


    // $ANTLR start "rule__Instruction__IteratorAssignment_4_2"
    // InternalNabla.g:9092:1: rule__Instruction__IteratorAssignment_4_2 : ( ruleSpaceIterator ) ;
    public final void rule__Instruction__IteratorAssignment_4_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9096:1: ( ( ruleSpaceIterator ) )
            // InternalNabla.g:9097:2: ( ruleSpaceIterator )
            {
            // InternalNabla.g:9097:2: ( ruleSpaceIterator )
            // InternalNabla.g:9098:3: ruleSpaceIterator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getIteratorSpaceIteratorParserRuleCall_4_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSpaceIterator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getIteratorSpaceIteratorParserRuleCall_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__IteratorAssignment_4_2"


    // $ANTLR start "rule__Instruction__BodyAssignment_4_4"
    // InternalNabla.g:9107:1: rule__Instruction__BodyAssignment_4_4 : ( ruleInstruction ) ;
    public final void rule__Instruction__BodyAssignment_4_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9111:1: ( ( ruleInstruction ) )
            // InternalNabla.g:9112:2: ( ruleInstruction )
            {
            // InternalNabla.g:9112:2: ( ruleInstruction )
            // InternalNabla.g:9113:3: ruleInstruction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getBodyInstructionParserRuleCall_4_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInstruction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getBodyInstructionParserRuleCall_4_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__BodyAssignment_4_4"


    // $ANTLR start "rule__Instruction__ConditionAssignment_5_3"
    // InternalNabla.g:9122:1: rule__Instruction__ConditionAssignment_5_3 : ( ruleExpression ) ;
    public final void rule__Instruction__ConditionAssignment_5_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9126:1: ( ( ruleExpression ) )
            // InternalNabla.g:9127:2: ( ruleExpression )
            {
            // InternalNabla.g:9127:2: ( ruleExpression )
            // InternalNabla.g:9128:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getConditionExpressionParserRuleCall_5_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getConditionExpressionParserRuleCall_5_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__ConditionAssignment_5_3"


    // $ANTLR start "rule__Instruction__ThenAssignment_5_5"
    // InternalNabla.g:9137:1: rule__Instruction__ThenAssignment_5_5 : ( ruleInstruction ) ;
    public final void rule__Instruction__ThenAssignment_5_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9141:1: ( ( ruleInstruction ) )
            // InternalNabla.g:9142:2: ( ruleInstruction )
            {
            // InternalNabla.g:9142:2: ( ruleInstruction )
            // InternalNabla.g:9143:3: ruleInstruction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getThenInstructionParserRuleCall_5_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInstruction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getThenInstructionParserRuleCall_5_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__ThenAssignment_5_5"


    // $ANTLR start "rule__Instruction__ElseAssignment_5_6_1"
    // InternalNabla.g:9152:1: rule__Instruction__ElseAssignment_5_6_1 : ( ruleInstruction ) ;
    public final void rule__Instruction__ElseAssignment_5_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9156:1: ( ( ruleInstruction ) )
            // InternalNabla.g:9157:2: ( ruleInstruction )
            {
            // InternalNabla.g:9157:2: ( ruleInstruction )
            // InternalNabla.g:9158:3: ruleInstruction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getElseInstructionParserRuleCall_5_6_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInstruction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getElseInstructionParserRuleCall_5_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__ElseAssignment_5_6_1"


    // $ANTLR start "rule__TimeIterator__NameAssignment_0"
    // InternalNabla.g:9167:1: rule__TimeIterator__NameAssignment_0 : ( RULE_ID ) ;
    public final void rule__TimeIterator__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9171:1: ( ( RULE_ID ) )
            // InternalNabla.g:9172:2: ( RULE_ID )
            {
            // InternalNabla.g:9172:2: ( RULE_ID )
            // InternalNabla.g:9173:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorAccess().getNameIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorAccess().getNameIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIterator__NameAssignment_0"


    // $ANTLR start "rule__SpaceIterator__NameAssignment_0"
    // InternalNabla.g:9182:1: rule__SpaceIterator__NameAssignment_0 : ( RULE_ID ) ;
    public final void rule__SpaceIterator__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9186:1: ( ( RULE_ID ) )
            // InternalNabla.g:9187:2: ( RULE_ID )
            {
            // InternalNabla.g:9187:2: ( RULE_ID )
            // InternalNabla.g:9188:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorAccess().getNameIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorAccess().getNameIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIterator__NameAssignment_0"


    // $ANTLR start "rule__SpaceIterator__RangeAssignment_2"
    // InternalNabla.g:9197:1: rule__SpaceIterator__RangeAssignment_2 : ( ruleSpaceIteratorRange ) ;
    public final void rule__SpaceIterator__RangeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9201:1: ( ( ruleSpaceIteratorRange ) )
            // InternalNabla.g:9202:2: ( ruleSpaceIteratorRange )
            {
            // InternalNabla.g:9202:2: ( ruleSpaceIteratorRange )
            // InternalNabla.g:9203:3: ruleSpaceIteratorRange
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorAccess().getRangeSpaceIteratorRangeParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSpaceIteratorRange();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorAccess().getRangeSpaceIteratorRangeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIterator__RangeAssignment_2"


    // $ANTLR start "rule__SpaceIteratorRange__ConnectivityAssignment_0"
    // InternalNabla.g:9212:1: rule__SpaceIteratorRange__ConnectivityAssignment_0 : ( ( RULE_ID ) ) ;
    public final void rule__SpaceIteratorRange__ConnectivityAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9216:1: ( ( ( RULE_ID ) ) )
            // InternalNabla.g:9217:2: ( ( RULE_ID ) )
            {
            // InternalNabla.g:9217:2: ( ( RULE_ID ) )
            // InternalNabla.g:9218:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRangeAccess().getConnectivityConnectivityCrossReference_0_0()); 
            }
            // InternalNabla.g:9219:3: ( RULE_ID )
            // InternalNabla.g:9220:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRangeAccess().getConnectivityConnectivityIDTerminalRuleCall_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRangeAccess().getConnectivityConnectivityIDTerminalRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRangeAccess().getConnectivityConnectivityCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__ConnectivityAssignment_0"


    // $ANTLR start "rule__SpaceIteratorRange__ArgsAssignment_2_0"
    // InternalNabla.g:9231:1: rule__SpaceIteratorRange__ArgsAssignment_2_0 : ( ruleSpaceIteratorRef ) ;
    public final void rule__SpaceIteratorRange__ArgsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9235:1: ( ( ruleSpaceIteratorRef ) )
            // InternalNabla.g:9236:2: ( ruleSpaceIteratorRef )
            {
            // InternalNabla.g:9236:2: ( ruleSpaceIteratorRef )
            // InternalNabla.g:9237:3: ruleSpaceIteratorRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRangeAccess().getArgsSpaceIteratorRefParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSpaceIteratorRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRangeAccess().getArgsSpaceIteratorRefParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__ArgsAssignment_2_0"


    // $ANTLR start "rule__SpaceIteratorRange__ArgsAssignment_2_1_1"
    // InternalNabla.g:9246:1: rule__SpaceIteratorRange__ArgsAssignment_2_1_1 : ( ruleSpaceIteratorRef ) ;
    public final void rule__SpaceIteratorRange__ArgsAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9250:1: ( ( ruleSpaceIteratorRef ) )
            // InternalNabla.g:9251:2: ( ruleSpaceIteratorRef )
            {
            // InternalNabla.g:9251:2: ( ruleSpaceIteratorRef )
            // InternalNabla.g:9252:3: ruleSpaceIteratorRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRangeAccess().getArgsSpaceIteratorRefParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSpaceIteratorRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRangeAccess().getArgsSpaceIteratorRefParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__ArgsAssignment_2_1_1"


    // $ANTLR start "rule__SpaceIteratorRef__PrevAssignment_0_0_0"
    // InternalNabla.g:9261:1: rule__SpaceIteratorRef__PrevAssignment_0_0_0 : ( ( '\\u25C4' ) ) ;
    public final void rule__SpaceIteratorRef__PrevAssignment_0_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9265:1: ( ( ( '\\u25C4' ) ) )
            // InternalNabla.g:9266:2: ( ( '\\u25C4' ) )
            {
            // InternalNabla.g:9266:2: ( ( '\\u25C4' ) )
            // InternalNabla.g:9267:3: ( '\\u25C4' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRefAccess().getPrevBlackLeftPointingPointerKeyword_0_0_0_0()); 
            }
            // InternalNabla.g:9268:3: ( '\\u25C4' )
            // InternalNabla.g:9269:4: '\\u25C4'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRefAccess().getPrevBlackLeftPointingPointerKeyword_0_0_0_0()); 
            }
            match(input,58,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRefAccess().getPrevBlackLeftPointingPointerKeyword_0_0_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRefAccess().getPrevBlackLeftPointingPointerKeyword_0_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRef__PrevAssignment_0_0_0"


    // $ANTLR start "rule__SpaceIteratorRef__NextAssignment_0_0_1"
    // InternalNabla.g:9280:1: rule__SpaceIteratorRef__NextAssignment_0_0_1 : ( ( '\\u25BA' ) ) ;
    public final void rule__SpaceIteratorRef__NextAssignment_0_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9284:1: ( ( ( '\\u25BA' ) ) )
            // InternalNabla.g:9285:2: ( ( '\\u25BA' ) )
            {
            // InternalNabla.g:9285:2: ( ( '\\u25BA' ) )
            // InternalNabla.g:9286:3: ( '\\u25BA' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRefAccess().getNextBlackRightPointingPointerKeyword_0_0_1_0()); 
            }
            // InternalNabla.g:9287:3: ( '\\u25BA' )
            // InternalNabla.g:9288:4: '\\u25BA'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRefAccess().getNextBlackRightPointingPointerKeyword_0_0_1_0()); 
            }
            match(input,59,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRefAccess().getNextBlackRightPointingPointerKeyword_0_0_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRefAccess().getNextBlackRightPointingPointerKeyword_0_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRef__NextAssignment_0_0_1"


    // $ANTLR start "rule__SpaceIteratorRef__IteratorAssignment_0_2"
    // InternalNabla.g:9299:1: rule__SpaceIteratorRef__IteratorAssignment_0_2 : ( ( RULE_ID ) ) ;
    public final void rule__SpaceIteratorRef__IteratorAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9303:1: ( ( ( RULE_ID ) ) )
            // InternalNabla.g:9304:2: ( ( RULE_ID ) )
            {
            // InternalNabla.g:9304:2: ( ( RULE_ID ) )
            // InternalNabla.g:9305:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRefAccess().getIteratorSpaceIteratorCrossReference_0_2_0()); 
            }
            // InternalNabla.g:9306:3: ( RULE_ID )
            // InternalNabla.g:9307:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRefAccess().getIteratorSpaceIteratorIDTerminalRuleCall_0_2_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRefAccess().getIteratorSpaceIteratorIDTerminalRuleCall_0_2_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRefAccess().getIteratorSpaceIteratorCrossReference_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRef__IteratorAssignment_0_2"


    // $ANTLR start "rule__SpaceIteratorRef__IteratorAssignment_1"
    // InternalNabla.g:9318:1: rule__SpaceIteratorRef__IteratorAssignment_1 : ( ( RULE_ID ) ) ;
    public final void rule__SpaceIteratorRef__IteratorAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9322:1: ( ( ( RULE_ID ) ) )
            // InternalNabla.g:9323:2: ( ( RULE_ID ) )
            {
            // InternalNabla.g:9323:2: ( ( RULE_ID ) )
            // InternalNabla.g:9324:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRefAccess().getIteratorSpaceIteratorCrossReference_1_0()); 
            }
            // InternalNabla.g:9325:3: ( RULE_ID )
            // InternalNabla.g:9326:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRefAccess().getIteratorSpaceIteratorIDTerminalRuleCall_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRefAccess().getIteratorSpaceIteratorIDTerminalRuleCall_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRefAccess().getIteratorSpaceIteratorCrossReference_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRef__IteratorAssignment_1"


    // $ANTLR start "rule__ScalarVarDefinition__ConstAssignment_0"
    // InternalNabla.g:9337:1: rule__ScalarVarDefinition__ConstAssignment_0 : ( ( 'const' ) ) ;
    public final void rule__ScalarVarDefinition__ConstAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9341:1: ( ( ( 'const' ) ) )
            // InternalNabla.g:9342:2: ( ( 'const' ) )
            {
            // InternalNabla.g:9342:2: ( ( 'const' ) )
            // InternalNabla.g:9343:3: ( 'const' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarDefinitionAccess().getConstConstKeyword_0_0()); 
            }
            // InternalNabla.g:9344:3: ( 'const' )
            // InternalNabla.g:9345:4: 'const'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarDefinitionAccess().getConstConstKeyword_0_0()); 
            }
            match(input,60,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarDefinitionAccess().getConstConstKeyword_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarDefinitionAccess().getConstConstKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__ConstAssignment_0"


    // $ANTLR start "rule__ScalarVarDefinition__TypeAssignment_1"
    // InternalNabla.g:9356:1: rule__ScalarVarDefinition__TypeAssignment_1 : ( ruleBasicType ) ;
    public final void rule__ScalarVarDefinition__TypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9360:1: ( ( ruleBasicType ) )
            // InternalNabla.g:9361:2: ( ruleBasicType )
            {
            // InternalNabla.g:9361:2: ( ruleBasicType )
            // InternalNabla.g:9362:3: ruleBasicType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarDefinitionAccess().getTypeBasicTypeEnumRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBasicType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarDefinitionAccess().getTypeBasicTypeEnumRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__TypeAssignment_1"


    // $ANTLR start "rule__ScalarVarDefinition__VariableAssignment_2"
    // InternalNabla.g:9371:1: rule__ScalarVarDefinition__VariableAssignment_2 : ( ruleScalarVar ) ;
    public final void rule__ScalarVarDefinition__VariableAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9375:1: ( ( ruleScalarVar ) )
            // InternalNabla.g:9376:2: ( ruleScalarVar )
            {
            // InternalNabla.g:9376:2: ( ruleScalarVar )
            // InternalNabla.g:9377:3: ruleScalarVar
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarDefinitionAccess().getVariableScalarVarParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleScalarVar();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarDefinitionAccess().getVariableScalarVarParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__VariableAssignment_2"


    // $ANTLR start "rule__ScalarVarDefinition__DefaultValueAssignment_4"
    // InternalNabla.g:9386:1: rule__ScalarVarDefinition__DefaultValueAssignment_4 : ( ruleExpression ) ;
    public final void rule__ScalarVarDefinition__DefaultValueAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9390:1: ( ( ruleExpression ) )
            // InternalNabla.g:9391:2: ( ruleExpression )
            {
            // InternalNabla.g:9391:2: ( ruleExpression )
            // InternalNabla.g:9392:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarDefinitionAccess().getDefaultValueExpressionParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarDefinitionAccess().getDefaultValueExpressionParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__DefaultValueAssignment_4"


    // $ANTLR start "rule__VarGroupDeclaration__TypeAssignment_0"
    // InternalNabla.g:9401:1: rule__VarGroupDeclaration__TypeAssignment_0 : ( ruleBasicType ) ;
    public final void rule__VarGroupDeclaration__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9405:1: ( ( ruleBasicType ) )
            // InternalNabla.g:9406:2: ( ruleBasicType )
            {
            // InternalNabla.g:9406:2: ( ruleBasicType )
            // InternalNabla.g:9407:3: ruleBasicType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarGroupDeclarationAccess().getTypeBasicTypeEnumRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBasicType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarGroupDeclarationAccess().getTypeBasicTypeEnumRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarGroupDeclaration__TypeAssignment_0"


    // $ANTLR start "rule__VarGroupDeclaration__VariablesAssignment_1"
    // InternalNabla.g:9416:1: rule__VarGroupDeclaration__VariablesAssignment_1 : ( ruleVar ) ;
    public final void rule__VarGroupDeclaration__VariablesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9420:1: ( ( ruleVar ) )
            // InternalNabla.g:9421:2: ( ruleVar )
            {
            // InternalNabla.g:9421:2: ( ruleVar )
            // InternalNabla.g:9422:3: ruleVar
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarGroupDeclarationAccess().getVariablesVarParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVar();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarGroupDeclarationAccess().getVariablesVarParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarGroupDeclaration__VariablesAssignment_1"


    // $ANTLR start "rule__VarGroupDeclaration__VariablesAssignment_2_1"
    // InternalNabla.g:9431:1: rule__VarGroupDeclaration__VariablesAssignment_2_1 : ( ruleVar ) ;
    public final void rule__VarGroupDeclaration__VariablesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9435:1: ( ( ruleVar ) )
            // InternalNabla.g:9436:2: ( ruleVar )
            {
            // InternalNabla.g:9436:2: ( ruleVar )
            // InternalNabla.g:9437:3: ruleVar
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarGroupDeclarationAccess().getVariablesVarParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVar();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarGroupDeclarationAccess().getVariablesVarParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarGroupDeclaration__VariablesAssignment_2_1"


    // $ANTLR start "rule__ScalarVar__NameAssignment"
    // InternalNabla.g:9446:1: rule__ScalarVar__NameAssignment : ( RULE_ID ) ;
    public final void rule__ScalarVar__NameAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9450:1: ( ( RULE_ID ) )
            // InternalNabla.g:9451:2: ( RULE_ID )
            {
            // InternalNabla.g:9451:2: ( RULE_ID )
            // InternalNabla.g:9452:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarAccess().getNameIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarAccess().getNameIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVar__NameAssignment"


    // $ANTLR start "rule__ArrayVar__NameAssignment_0"
    // InternalNabla.g:9461:1: rule__ArrayVar__NameAssignment_0 : ( RULE_ID ) ;
    public final void rule__ArrayVar__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9465:1: ( ( RULE_ID ) )
            // InternalNabla.g:9466:2: ( RULE_ID )
            {
            // InternalNabla.g:9466:2: ( RULE_ID )
            // InternalNabla.g:9467:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayVarAccess().getNameIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayVarAccess().getNameIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__NameAssignment_0"


    // $ANTLR start "rule__ArrayVar__DimensionsAssignment_2"
    // InternalNabla.g:9476:1: rule__ArrayVar__DimensionsAssignment_2 : ( ( RULE_ID ) ) ;
    public final void rule__ArrayVar__DimensionsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9480:1: ( ( ( RULE_ID ) ) )
            // InternalNabla.g:9481:2: ( ( RULE_ID ) )
            {
            // InternalNabla.g:9481:2: ( ( RULE_ID ) )
            // InternalNabla.g:9482:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayVarAccess().getDimensionsConnectivityCrossReference_2_0()); 
            }
            // InternalNabla.g:9483:3: ( RULE_ID )
            // InternalNabla.g:9484:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayVarAccess().getDimensionsConnectivityIDTerminalRuleCall_2_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayVarAccess().getDimensionsConnectivityIDTerminalRuleCall_2_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayVarAccess().getDimensionsConnectivityCrossReference_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__DimensionsAssignment_2"


    // $ANTLR start "rule__ArrayVar__DimensionsAssignment_3_1"
    // InternalNabla.g:9495:1: rule__ArrayVar__DimensionsAssignment_3_1 : ( ( RULE_ID ) ) ;
    public final void rule__ArrayVar__DimensionsAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9499:1: ( ( ( RULE_ID ) ) )
            // InternalNabla.g:9500:2: ( ( RULE_ID ) )
            {
            // InternalNabla.g:9500:2: ( ( RULE_ID ) )
            // InternalNabla.g:9501:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayVarAccess().getDimensionsConnectivityCrossReference_3_1_0()); 
            }
            // InternalNabla.g:9502:3: ( RULE_ID )
            // InternalNabla.g:9503:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayVarAccess().getDimensionsConnectivityIDTerminalRuleCall_3_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayVarAccess().getDimensionsConnectivityIDTerminalRuleCall_3_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayVarAccess().getDimensionsConnectivityCrossReference_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__DimensionsAssignment_3_1"


    // $ANTLR start "rule__Connectivity__NameAssignment_0"
    // InternalNabla.g:9514:1: rule__Connectivity__NameAssignment_0 : ( RULE_ID ) ;
    public final void rule__Connectivity__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9518:1: ( ( RULE_ID ) )
            // InternalNabla.g:9519:2: ( RULE_ID )
            {
            // InternalNabla.g:9519:2: ( RULE_ID )
            // InternalNabla.g:9520:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getNameIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getNameIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__NameAssignment_0"


    // $ANTLR start "rule__Connectivity__InTypesAssignment_3_0_0"
    // InternalNabla.g:9529:1: rule__Connectivity__InTypesAssignment_3_0_0 : ( ruleItemType ) ;
    public final void rule__Connectivity__InTypesAssignment_3_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9533:1: ( ( ruleItemType ) )
            // InternalNabla.g:9534:2: ( ruleItemType )
            {
            // InternalNabla.g:9534:2: ( ruleItemType )
            // InternalNabla.g:9535:3: ruleItemType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getInTypesItemTypeEnumRuleCall_3_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleItemType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getInTypesItemTypeEnumRuleCall_3_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__InTypesAssignment_3_0_0"


    // $ANTLR start "rule__Connectivity__InTypesAssignment_3_0_1_1"
    // InternalNabla.g:9544:1: rule__Connectivity__InTypesAssignment_3_0_1_1 : ( ruleItemType ) ;
    public final void rule__Connectivity__InTypesAssignment_3_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9548:1: ( ( ruleItemType ) )
            // InternalNabla.g:9549:2: ( ruleItemType )
            {
            // InternalNabla.g:9549:2: ( ruleItemType )
            // InternalNabla.g:9550:3: ruleItemType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getInTypesItemTypeEnumRuleCall_3_0_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleItemType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getInTypesItemTypeEnumRuleCall_3_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__InTypesAssignment_3_0_1_1"


    // $ANTLR start "rule__Connectivity__ReturnTypeAssignment_6"
    // InternalNabla.g:9559:1: rule__Connectivity__ReturnTypeAssignment_6 : ( ruleItemArgType ) ;
    public final void rule__Connectivity__ReturnTypeAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9563:1: ( ( ruleItemArgType ) )
            // InternalNabla.g:9564:2: ( ruleItemArgType )
            {
            // InternalNabla.g:9564:2: ( ruleItemArgType )
            // InternalNabla.g:9565:3: ruleItemArgType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getReturnTypeItemArgTypeParserRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleItemArgType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getReturnTypeItemArgTypeParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__ReturnTypeAssignment_6"


    // $ANTLR start "rule__ItemArgType__MultipleAssignment_0_0"
    // InternalNabla.g:9574:1: rule__ItemArgType__MultipleAssignment_0_0 : ( ( '{' ) ) ;
    public final void rule__ItemArgType__MultipleAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9578:1: ( ( ( '{' ) ) )
            // InternalNabla.g:9579:2: ( ( '{' ) )
            {
            // InternalNabla.g:9579:2: ( ( '{' ) )
            // InternalNabla.g:9580:3: ( '{' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItemArgTypeAccess().getMultipleLeftCurlyBracketKeyword_0_0_0()); 
            }
            // InternalNabla.g:9581:3: ( '{' )
            // InternalNabla.g:9582:4: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItemArgTypeAccess().getMultipleLeftCurlyBracketKeyword_0_0_0()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItemArgTypeAccess().getMultipleLeftCurlyBracketKeyword_0_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItemArgTypeAccess().getMultipleLeftCurlyBracketKeyword_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItemArgType__MultipleAssignment_0_0"


    // $ANTLR start "rule__ItemArgType__TypeAssignment_0_1"
    // InternalNabla.g:9593:1: rule__ItemArgType__TypeAssignment_0_1 : ( ruleItemType ) ;
    public final void rule__ItemArgType__TypeAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9597:1: ( ( ruleItemType ) )
            // InternalNabla.g:9598:2: ( ruleItemType )
            {
            // InternalNabla.g:9598:2: ( ruleItemType )
            // InternalNabla.g:9599:3: ruleItemType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItemArgTypeAccess().getTypeItemTypeEnumRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleItemType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItemArgTypeAccess().getTypeItemTypeEnumRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItemArgType__TypeAssignment_0_1"


    // $ANTLR start "rule__ItemArgType__TypeAssignment_1"
    // InternalNabla.g:9608:1: rule__ItemArgType__TypeAssignment_1 : ( ruleItemType ) ;
    public final void rule__ItemArgType__TypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9612:1: ( ( ruleItemType ) )
            // InternalNabla.g:9613:2: ( ruleItemType )
            {
            // InternalNabla.g:9613:2: ( ruleItemType )
            // InternalNabla.g:9614:3: ruleItemType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItemArgTypeAccess().getTypeItemTypeEnumRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleItemType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItemArgTypeAccess().getTypeItemTypeEnumRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItemArgType__TypeAssignment_1"


    // $ANTLR start "rule__Function__NameAssignment_1"
    // InternalNabla.g:9623:1: rule__Function__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Function__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9627:1: ( ( RULE_ID ) )
            // InternalNabla.g:9628:2: ( RULE_ID )
            {
            // InternalNabla.g:9628:2: ( RULE_ID )
            // InternalNabla.g:9629:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__NameAssignment_1"


    // $ANTLR start "rule__Function__ArgGroupsAssignment_3"
    // InternalNabla.g:9638:1: rule__Function__ArgGroupsAssignment_3 : ( ruleFunctionArg ) ;
    public final void rule__Function__ArgGroupsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9642:1: ( ( ruleFunctionArg ) )
            // InternalNabla.g:9643:2: ( ruleFunctionArg )
            {
            // InternalNabla.g:9643:2: ( ruleFunctionArg )
            // InternalNabla.g:9644:3: ruleFunctionArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getArgGroupsFunctionArgParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFunctionArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getArgGroupsFunctionArgParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__ArgGroupsAssignment_3"


    // $ANTLR start "rule__Function__ArgGroupsAssignment_4_1"
    // InternalNabla.g:9653:1: rule__Function__ArgGroupsAssignment_4_1 : ( ruleFunctionArg ) ;
    public final void rule__Function__ArgGroupsAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9657:1: ( ( ruleFunctionArg ) )
            // InternalNabla.g:9658:2: ( ruleFunctionArg )
            {
            // InternalNabla.g:9658:2: ( ruleFunctionArg )
            // InternalNabla.g:9659:3: ruleFunctionArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getArgGroupsFunctionArgParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFunctionArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getArgGroupsFunctionArgParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__ArgGroupsAssignment_4_1"


    // $ANTLR start "rule__FunctionArg__InTypesAssignment_1_0_0"
    // InternalNabla.g:9668:1: rule__FunctionArg__InTypesAssignment_1_0_0 : ( ruleBasicType ) ;
    public final void rule__FunctionArg__InTypesAssignment_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9672:1: ( ( ruleBasicType ) )
            // InternalNabla.g:9673:2: ( ruleBasicType )
            {
            // InternalNabla.g:9673:2: ( ruleBasicType )
            // InternalNabla.g:9674:3: ruleBasicType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionArgAccess().getInTypesBasicTypeEnumRuleCall_1_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBasicType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionArgAccess().getInTypesBasicTypeEnumRuleCall_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__InTypesAssignment_1_0_0"


    // $ANTLR start "rule__FunctionArg__InTypesAssignment_1_0_1_1"
    // InternalNabla.g:9683:1: rule__FunctionArg__InTypesAssignment_1_0_1_1 : ( ruleBasicType ) ;
    public final void rule__FunctionArg__InTypesAssignment_1_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9687:1: ( ( ruleBasicType ) )
            // InternalNabla.g:9688:2: ( ruleBasicType )
            {
            // InternalNabla.g:9688:2: ( ruleBasicType )
            // InternalNabla.g:9689:3: ruleBasicType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionArgAccess().getInTypesBasicTypeEnumRuleCall_1_0_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBasicType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionArgAccess().getInTypesBasicTypeEnumRuleCall_1_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__InTypesAssignment_1_0_1_1"


    // $ANTLR start "rule__FunctionArg__ReturnTypeAssignment_4"
    // InternalNabla.g:9698:1: rule__FunctionArg__ReturnTypeAssignment_4 : ( ruleBasicType ) ;
    public final void rule__FunctionArg__ReturnTypeAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9702:1: ( ( ruleBasicType ) )
            // InternalNabla.g:9703:2: ( ruleBasicType )
            {
            // InternalNabla.g:9703:2: ( ruleBasicType )
            // InternalNabla.g:9704:3: ruleBasicType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionArgAccess().getReturnTypeBasicTypeEnumRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBasicType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionArgAccess().getReturnTypeBasicTypeEnumRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__ReturnTypeAssignment_4"


    // $ANTLR start "rule__Reduction__NameAssignment_1"
    // InternalNabla.g:9713:1: rule__Reduction__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Reduction__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9717:1: ( ( RULE_ID ) )
            // InternalNabla.g:9718:2: ( RULE_ID )
            {
            // InternalNabla.g:9718:2: ( RULE_ID )
            // InternalNabla.g:9719:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__NameAssignment_1"


    // $ANTLR start "rule__Reduction__ArgGroupsAssignment_3"
    // InternalNabla.g:9728:1: rule__Reduction__ArgGroupsAssignment_3 : ( ruleReductionArg ) ;
    public final void rule__Reduction__ArgGroupsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9732:1: ( ( ruleReductionArg ) )
            // InternalNabla.g:9733:2: ( ruleReductionArg )
            {
            // InternalNabla.g:9733:2: ( ruleReductionArg )
            // InternalNabla.g:9734:3: ruleReductionArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionAccess().getArgGroupsReductionArgParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleReductionArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionAccess().getArgGroupsReductionArgParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__ArgGroupsAssignment_3"


    // $ANTLR start "rule__Reduction__ArgGroupsAssignment_4_1"
    // InternalNabla.g:9743:1: rule__Reduction__ArgGroupsAssignment_4_1 : ( ruleReductionArg ) ;
    public final void rule__Reduction__ArgGroupsAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9747:1: ( ( ruleReductionArg ) )
            // InternalNabla.g:9748:2: ( ruleReductionArg )
            {
            // InternalNabla.g:9748:2: ( ruleReductionArg )
            // InternalNabla.g:9749:3: ruleReductionArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionAccess().getArgGroupsReductionArgParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleReductionArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionAccess().getArgGroupsReductionArgParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__ArgGroupsAssignment_4_1"


    // $ANTLR start "rule__ReductionArg__SeedAssignment_1"
    // InternalNabla.g:9758:1: rule__ReductionArg__SeedAssignment_1 : ( ruleExpression ) ;
    public final void rule__ReductionArg__SeedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9762:1: ( ( ruleExpression ) )
            // InternalNabla.g:9763:2: ( ruleExpression )
            {
            // InternalNabla.g:9763:2: ( ruleExpression )
            // InternalNabla.g:9764:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionArgAccess().getSeedExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionArgAccess().getSeedExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__SeedAssignment_1"


    // $ANTLR start "rule__ReductionArg__CollectionTypeAssignment_3"
    // InternalNabla.g:9773:1: rule__ReductionArg__CollectionTypeAssignment_3 : ( ruleBasicType ) ;
    public final void rule__ReductionArg__CollectionTypeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9777:1: ( ( ruleBasicType ) )
            // InternalNabla.g:9778:2: ( ruleBasicType )
            {
            // InternalNabla.g:9778:2: ( ruleBasicType )
            // InternalNabla.g:9779:3: ruleBasicType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionArgAccess().getCollectionTypeBasicTypeEnumRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBasicType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionArgAccess().getCollectionTypeBasicTypeEnumRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__CollectionTypeAssignment_3"


    // $ANTLR start "rule__ReductionArg__ReturnTypeAssignment_6"
    // InternalNabla.g:9788:1: rule__ReductionArg__ReturnTypeAssignment_6 : ( ruleBasicType ) ;
    public final void rule__ReductionArg__ReturnTypeAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9792:1: ( ( ruleBasicType ) )
            // InternalNabla.g:9793:2: ( ruleBasicType )
            {
            // InternalNabla.g:9793:2: ( ruleBasicType )
            // InternalNabla.g:9794:3: ruleBasicType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionArgAccess().getReturnTypeBasicTypeEnumRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBasicType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionArgAccess().getReturnTypeBasicTypeEnumRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__ReturnTypeAssignment_6"


    // $ANTLR start "rule__Or__OpAssignment_1_1"
    // InternalNabla.g:9803:1: rule__Or__OpAssignment_1_1 : ( ( '||' ) ) ;
    public final void rule__Or__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9807:1: ( ( ( '||' ) ) )
            // InternalNabla.g:9808:2: ( ( '||' ) )
            {
            // InternalNabla.g:9808:2: ( ( '||' ) )
            // InternalNabla.g:9809:3: ( '||' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); 
            }
            // InternalNabla.g:9810:3: ( '||' )
            // InternalNabla.g:9811:4: '||'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); 
            }
            match(input,61,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__OpAssignment_1_1"


    // $ANTLR start "rule__Or__RightAssignment_1_2"
    // InternalNabla.g:9822:1: rule__Or__RightAssignment_1_2 : ( ruleAnd ) ;
    public final void rule__Or__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9826:1: ( ( ruleAnd ) )
            // InternalNabla.g:9827:2: ( ruleAnd )
            {
            // InternalNabla.g:9827:2: ( ruleAnd )
            // InternalNabla.g:9828:3: ruleAnd
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnd();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__RightAssignment_1_2"


    // $ANTLR start "rule__And__OpAssignment_1_1"
    // InternalNabla.g:9837:1: rule__And__OpAssignment_1_1 : ( ( '&&' ) ) ;
    public final void rule__And__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9841:1: ( ( ( '&&' ) ) )
            // InternalNabla.g:9842:2: ( ( '&&' ) )
            {
            // InternalNabla.g:9842:2: ( ( '&&' ) )
            // InternalNabla.g:9843:3: ( '&&' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getOpAmpersandAmpersandKeyword_1_1_0()); 
            }
            // InternalNabla.g:9844:3: ( '&&' )
            // InternalNabla.g:9845:4: '&&'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getOpAmpersandAmpersandKeyword_1_1_0()); 
            }
            match(input,62,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getOpAmpersandAmpersandKeyword_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getOpAmpersandAmpersandKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__OpAssignment_1_1"


    // $ANTLR start "rule__And__RightAssignment_1_2"
    // InternalNabla.g:9856:1: rule__And__RightAssignment_1_2 : ( ruleEquality ) ;
    public final void rule__And__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9860:1: ( ( ruleEquality ) )
            // InternalNabla.g:9861:2: ( ruleEquality )
            {
            // InternalNabla.g:9861:2: ( ruleEquality )
            // InternalNabla.g:9862:3: ruleEquality
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getRightEqualityParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEquality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getRightEqualityParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__RightAssignment_1_2"


    // $ANTLR start "rule__Equality__OpAssignment_1_1"
    // InternalNabla.g:9871:1: rule__Equality__OpAssignment_1_1 : ( ( rule__Equality__OpAlternatives_1_1_0 ) ) ;
    public final void rule__Equality__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9875:1: ( ( ( rule__Equality__OpAlternatives_1_1_0 ) ) )
            // InternalNabla.g:9876:2: ( ( rule__Equality__OpAlternatives_1_1_0 ) )
            {
            // InternalNabla.g:9876:2: ( ( rule__Equality__OpAlternatives_1_1_0 ) )
            // InternalNabla.g:9877:3: ( rule__Equality__OpAlternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAccess().getOpAlternatives_1_1_0()); 
            }
            // InternalNabla.g:9878:3: ( rule__Equality__OpAlternatives_1_1_0 )
            // InternalNabla.g:9878:4: rule__Equality__OpAlternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Equality__OpAlternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAccess().getOpAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__OpAssignment_1_1"


    // $ANTLR start "rule__Equality__RightAssignment_1_2"
    // InternalNabla.g:9886:1: rule__Equality__RightAssignment_1_2 : ( ruleComparison ) ;
    public final void rule__Equality__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9890:1: ( ( ruleComparison ) )
            // InternalNabla.g:9891:2: ( ruleComparison )
            {
            // InternalNabla.g:9891:2: ( ruleComparison )
            // InternalNabla.g:9892:3: ruleComparison
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__RightAssignment_1_2"


    // $ANTLR start "rule__Comparison__OpAssignment_1_1"
    // InternalNabla.g:9901:1: rule__Comparison__OpAssignment_1_1 : ( ( rule__Comparison__OpAlternatives_1_1_0 ) ) ;
    public final void rule__Comparison__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9905:1: ( ( ( rule__Comparison__OpAlternatives_1_1_0 ) ) )
            // InternalNabla.g:9906:2: ( ( rule__Comparison__OpAlternatives_1_1_0 ) )
            {
            // InternalNabla.g:9906:2: ( ( rule__Comparison__OpAlternatives_1_1_0 ) )
            // InternalNabla.g:9907:3: ( rule__Comparison__OpAlternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); 
            }
            // InternalNabla.g:9908:3: ( rule__Comparison__OpAlternatives_1_1_0 )
            // InternalNabla.g:9908:4: rule__Comparison__OpAlternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__OpAlternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__OpAssignment_1_1"


    // $ANTLR start "rule__Comparison__RightAssignment_1_2"
    // InternalNabla.g:9916:1: rule__Comparison__RightAssignment_1_2 : ( rulePlusOrMinus ) ;
    public final void rule__Comparison__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9920:1: ( ( rulePlusOrMinus ) )
            // InternalNabla.g:9921:2: ( rulePlusOrMinus )
            {
            // InternalNabla.g:9921:2: ( rulePlusOrMinus )
            // InternalNabla.g:9922:3: rulePlusOrMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePlusOrMinus();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__RightAssignment_1_2"


    // $ANTLR start "rule__PlusOrMinus__OpAssignment_1_0_0_1"
    // InternalNabla.g:9931:1: rule__PlusOrMinus__OpAssignment_1_0_0_1 : ( ( '+' ) ) ;
    public final void rule__PlusOrMinus__OpAssignment_1_0_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9935:1: ( ( ( '+' ) ) )
            // InternalNabla.g:9936:2: ( ( '+' ) )
            {
            // InternalNabla.g:9936:2: ( ( '+' ) )
            // InternalNabla.g:9937:3: ( '+' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getOpPlusSignKeyword_1_0_0_1_0()); 
            }
            // InternalNabla.g:9938:3: ( '+' )
            // InternalNabla.g:9939:4: '+'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getOpPlusSignKeyword_1_0_0_1_0()); 
            }
            match(input,63,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getOpPlusSignKeyword_1_0_0_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getOpPlusSignKeyword_1_0_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__OpAssignment_1_0_0_1"


    // $ANTLR start "rule__PlusOrMinus__OpAssignment_1_0_1_1"
    // InternalNabla.g:9950:1: rule__PlusOrMinus__OpAssignment_1_0_1_1 : ( ( '-' ) ) ;
    public final void rule__PlusOrMinus__OpAssignment_1_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9954:1: ( ( ( '-' ) ) )
            // InternalNabla.g:9955:2: ( ( '-' ) )
            {
            // InternalNabla.g:9955:2: ( ( '-' ) )
            // InternalNabla.g:9956:3: ( '-' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getOpHyphenMinusKeyword_1_0_1_1_0()); 
            }
            // InternalNabla.g:9957:3: ( '-' )
            // InternalNabla.g:9958:4: '-'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getOpHyphenMinusKeyword_1_0_1_1_0()); 
            }
            match(input,51,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getOpHyphenMinusKeyword_1_0_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getOpHyphenMinusKeyword_1_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__OpAssignment_1_0_1_1"


    // $ANTLR start "rule__PlusOrMinus__RightAssignment_1_1"
    // InternalNabla.g:9969:1: rule__PlusOrMinus__RightAssignment_1_1 : ( ruleMulOrDiv ) ;
    public final void rule__PlusOrMinus__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9973:1: ( ( ruleMulOrDiv ) )
            // InternalNabla.g:9974:2: ( ruleMulOrDiv )
            {
            // InternalNabla.g:9974:2: ( ruleMulOrDiv )
            // InternalNabla.g:9975:3: ruleMulOrDiv
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getRightMulOrDivParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMulOrDiv();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getRightMulOrDivParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__RightAssignment_1_1"


    // $ANTLR start "rule__MulOrDiv__OpAssignment_1_1"
    // InternalNabla.g:9984:1: rule__MulOrDiv__OpAssignment_1_1 : ( ( rule__MulOrDiv__OpAlternatives_1_1_0 ) ) ;
    public final void rule__MulOrDiv__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9988:1: ( ( ( rule__MulOrDiv__OpAlternatives_1_1_0 ) ) )
            // InternalNabla.g:9989:2: ( ( rule__MulOrDiv__OpAlternatives_1_1_0 ) )
            {
            // InternalNabla.g:9989:2: ( ( rule__MulOrDiv__OpAlternatives_1_1_0 ) )
            // InternalNabla.g:9990:3: ( rule__MulOrDiv__OpAlternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivAccess().getOpAlternatives_1_1_0()); 
            }
            // InternalNabla.g:9991:3: ( rule__MulOrDiv__OpAlternatives_1_1_0 )
            // InternalNabla.g:9991:4: rule__MulOrDiv__OpAlternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__OpAlternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivAccess().getOpAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__OpAssignment_1_1"


    // $ANTLR start "rule__MulOrDiv__RightAssignment_1_2"
    // InternalNabla.g:9999:1: rule__MulOrDiv__RightAssignment_1_2 : ( rulePrimary ) ;
    public final void rule__MulOrDiv__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10003:1: ( ( rulePrimary ) )
            // InternalNabla.g:10004:2: ( rulePrimary )
            {
            // InternalNabla.g:10004:2: ( rulePrimary )
            // InternalNabla.g:10005:3: rulePrimary
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivAccess().getRightPrimaryParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePrimary();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivAccess().getRightPrimaryParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__RightAssignment_1_2"


    // $ANTLR start "rule__Primary__ExpressionAssignment_0_2"
    // InternalNabla.g:10014:1: rule__Primary__ExpressionAssignment_0_2 : ( ruleExpression ) ;
    public final void rule__Primary__ExpressionAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10018:1: ( ( ruleExpression ) )
            // InternalNabla.g:10019:2: ( ruleExpression )
            {
            // InternalNabla.g:10019:2: ( ruleExpression )
            // InternalNabla.g:10020:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getExpressionExpressionParserRuleCall_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getExpressionExpressionParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__ExpressionAssignment_0_2"


    // $ANTLR start "rule__Primary__ExpressionAssignment_1_2"
    // InternalNabla.g:10029:1: rule__Primary__ExpressionAssignment_1_2 : ( rulePrimary ) ;
    public final void rule__Primary__ExpressionAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10033:1: ( ( rulePrimary ) )
            // InternalNabla.g:10034:2: ( rulePrimary )
            {
            // InternalNabla.g:10034:2: ( rulePrimary )
            // InternalNabla.g:10035:3: rulePrimary
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePrimary();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__ExpressionAssignment_1_2"


    // $ANTLR start "rule__Primary__ExpressionAssignment_2_2"
    // InternalNabla.g:10044:1: rule__Primary__ExpressionAssignment_2_2 : ( rulePrimary ) ;
    public final void rule__Primary__ExpressionAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10048:1: ( ( rulePrimary ) )
            // InternalNabla.g:10049:2: ( rulePrimary )
            {
            // InternalNabla.g:10049:2: ( rulePrimary )
            // InternalNabla.g:10050:3: rulePrimary
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_2_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePrimary();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__ExpressionAssignment_2_2"


    // $ANTLR start "rule__Atomic__ValueAssignment_0_1"
    // InternalNabla.g:10059:1: rule__Atomic__ValueAssignment_0_1 : ( RULE_INT ) ;
    public final void rule__Atomic__ValueAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10063:1: ( ( RULE_INT ) )
            // InternalNabla.g:10064:2: ( RULE_INT )
            {
            // InternalNabla.g:10064:2: ( RULE_INT )
            // InternalNabla.g:10065:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__ValueAssignment_0_1"


    // $ANTLR start "rule__Atomic__ValueAssignment_1_1"
    // InternalNabla.g:10074:1: rule__Atomic__ValueAssignment_1_1 : ( RULE_REAL ) ;
    public final void rule__Atomic__ValueAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10078:1: ( ( RULE_REAL ) )
            // InternalNabla.g:10079:2: ( RULE_REAL )
            {
            // InternalNabla.g:10079:2: ( RULE_REAL )
            // InternalNabla.g:10080:3: RULE_REAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getValueREALTerminalRuleCall_1_1_0()); 
            }
            match(input,RULE_REAL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getValueREALTerminalRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__ValueAssignment_1_1"


    // $ANTLR start "rule__Atomic__ValueAssignment_4_1_0"
    // InternalNabla.g:10089:1: rule__Atomic__ValueAssignment_4_1_0 : ( ( 'true' ) ) ;
    public final void rule__Atomic__ValueAssignment_4_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10093:1: ( ( ( 'true' ) ) )
            // InternalNabla.g:10094:2: ( ( 'true' ) )
            {
            // InternalNabla.g:10094:2: ( ( 'true' ) )
            // InternalNabla.g:10095:3: ( 'true' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getValueTrueKeyword_4_1_0_0()); 
            }
            // InternalNabla.g:10096:3: ( 'true' )
            // InternalNabla.g:10097:4: 'true'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getValueTrueKeyword_4_1_0_0()); 
            }
            match(input,64,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getValueTrueKeyword_4_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getValueTrueKeyword_4_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__ValueAssignment_4_1_0"


    // $ANTLR start "rule__Atomic__XAssignment_5_2"
    // InternalNabla.g:10108:1: rule__Atomic__XAssignment_5_2 : ( ruleReal2Constant ) ;
    public final void rule__Atomic__XAssignment_5_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10112:1: ( ( ruleReal2Constant ) )
            // InternalNabla.g:10113:2: ( ruleReal2Constant )
            {
            // InternalNabla.g:10113:2: ( ruleReal2Constant )
            // InternalNabla.g:10114:3: ruleReal2Constant
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getXReal2ConstantParserRuleCall_5_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleReal2Constant();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getXReal2ConstantParserRuleCall_5_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__XAssignment_5_2"


    // $ANTLR start "rule__Atomic__YAssignment_5_4"
    // InternalNabla.g:10123:1: rule__Atomic__YAssignment_5_4 : ( ruleReal2Constant ) ;
    public final void rule__Atomic__YAssignment_5_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10127:1: ( ( ruleReal2Constant ) )
            // InternalNabla.g:10128:2: ( ruleReal2Constant )
            {
            // InternalNabla.g:10128:2: ( ruleReal2Constant )
            // InternalNabla.g:10129:3: ruleReal2Constant
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getYReal2ConstantParserRuleCall_5_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleReal2Constant();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getYReal2ConstantParserRuleCall_5_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__YAssignment_5_4"


    // $ANTLR start "rule__Atomic__XAssignment_6_2"
    // InternalNabla.g:10138:1: rule__Atomic__XAssignment_6_2 : ( ruleReal3Constant ) ;
    public final void rule__Atomic__XAssignment_6_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10142:1: ( ( ruleReal3Constant ) )
            // InternalNabla.g:10143:2: ( ruleReal3Constant )
            {
            // InternalNabla.g:10143:2: ( ruleReal3Constant )
            // InternalNabla.g:10144:3: ruleReal3Constant
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getXReal3ConstantParserRuleCall_6_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleReal3Constant();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getXReal3ConstantParserRuleCall_6_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__XAssignment_6_2"


    // $ANTLR start "rule__Atomic__YAssignment_6_4"
    // InternalNabla.g:10153:1: rule__Atomic__YAssignment_6_4 : ( ruleReal3Constant ) ;
    public final void rule__Atomic__YAssignment_6_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10157:1: ( ( ruleReal3Constant ) )
            // InternalNabla.g:10158:2: ( ruleReal3Constant )
            {
            // InternalNabla.g:10158:2: ( ruleReal3Constant )
            // InternalNabla.g:10159:3: ruleReal3Constant
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getYReal3ConstantParserRuleCall_6_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleReal3Constant();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getYReal3ConstantParserRuleCall_6_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__YAssignment_6_4"


    // $ANTLR start "rule__Atomic__ZAssignment_6_6"
    // InternalNabla.g:10168:1: rule__Atomic__ZAssignment_6_6 : ( ruleReal3Constant ) ;
    public final void rule__Atomic__ZAssignment_6_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10172:1: ( ( ruleReal3Constant ) )
            // InternalNabla.g:10173:2: ( ruleReal3Constant )
            {
            // InternalNabla.g:10173:2: ( ruleReal3Constant )
            // InternalNabla.g:10174:3: ruleReal3Constant
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getZReal3ConstantParserRuleCall_6_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleReal3Constant();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getZReal3ConstantParserRuleCall_6_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__ZAssignment_6_6"


    // $ANTLR start "rule__Atomic__TypeAssignment_7_1"
    // InternalNabla.g:10183:1: rule__Atomic__TypeAssignment_7_1 : ( ruleBasicType ) ;
    public final void rule__Atomic__TypeAssignment_7_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10187:1: ( ( ruleBasicType ) )
            // InternalNabla.g:10188:2: ( ruleBasicType )
            {
            // InternalNabla.g:10188:2: ( ruleBasicType )
            // InternalNabla.g:10189:3: ruleBasicType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getTypeBasicTypeEnumRuleCall_7_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBasicType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getTypeBasicTypeEnumRuleCall_7_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__TypeAssignment_7_1"


    // $ANTLR start "rule__Atomic__ValueAssignment_7_3"
    // InternalNabla.g:10198:1: rule__Atomic__ValueAssignment_7_3 : ( RULE_REAL ) ;
    public final void rule__Atomic__ValueAssignment_7_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10202:1: ( ( RULE_REAL ) )
            // InternalNabla.g:10203:2: ( RULE_REAL )
            {
            // InternalNabla.g:10203:2: ( RULE_REAL )
            // InternalNabla.g:10204:3: RULE_REAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getValueREALTerminalRuleCall_7_3_0()); 
            }
            match(input,RULE_REAL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getValueREALTerminalRuleCall_7_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__ValueAssignment_7_3"


    // $ANTLR start "rule__Atomic__TypeAssignment_8_1"
    // InternalNabla.g:10213:1: rule__Atomic__TypeAssignment_8_1 : ( ruleBasicType ) ;
    public final void rule__Atomic__TypeAssignment_8_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10217:1: ( ( ruleBasicType ) )
            // InternalNabla.g:10218:2: ( ruleBasicType )
            {
            // InternalNabla.g:10218:2: ( ruleBasicType )
            // InternalNabla.g:10219:3: ruleBasicType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getTypeBasicTypeEnumRuleCall_8_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBasicType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getTypeBasicTypeEnumRuleCall_8_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__TypeAssignment_8_1"


    // $ANTLR start "rule__Atomic__TypeAssignment_9_1"
    // InternalNabla.g:10228:1: rule__Atomic__TypeAssignment_9_1 : ( ruleBasicType ) ;
    public final void rule__Atomic__TypeAssignment_9_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10232:1: ( ( ruleBasicType ) )
            // InternalNabla.g:10233:2: ( ruleBasicType )
            {
            // InternalNabla.g:10233:2: ( ruleBasicType )
            // InternalNabla.g:10234:3: ruleBasicType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getTypeBasicTypeEnumRuleCall_9_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBasicType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getTypeBasicTypeEnumRuleCall_9_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__TypeAssignment_9_1"


    // $ANTLR start "rule__Atomic__FunctionAssignment_10_1"
    // InternalNabla.g:10243:1: rule__Atomic__FunctionAssignment_10_1 : ( ( ruleQualifiedName ) ) ;
    public final void rule__Atomic__FunctionAssignment_10_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10247:1: ( ( ( ruleQualifiedName ) ) )
            // InternalNabla.g:10248:2: ( ( ruleQualifiedName ) )
            {
            // InternalNabla.g:10248:2: ( ( ruleQualifiedName ) )
            // InternalNabla.g:10249:3: ( ruleQualifiedName )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getFunctionFunctionCrossReference_10_1_0()); 
            }
            // InternalNabla.g:10250:3: ( ruleQualifiedName )
            // InternalNabla.g:10251:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getFunctionFunctionQualifiedNameParserRuleCall_10_1_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getFunctionFunctionQualifiedNameParserRuleCall_10_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getFunctionFunctionCrossReference_10_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__FunctionAssignment_10_1"


    // $ANTLR start "rule__Atomic__ArgsAssignment_10_3_0"
    // InternalNabla.g:10262:1: rule__Atomic__ArgsAssignment_10_3_0 : ( ruleExpression ) ;
    public final void rule__Atomic__ArgsAssignment_10_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10266:1: ( ( ruleExpression ) )
            // InternalNabla.g:10267:2: ( ruleExpression )
            {
            // InternalNabla.g:10267:2: ( ruleExpression )
            // InternalNabla.g:10268:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getArgsExpressionParserRuleCall_10_3_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getArgsExpressionParserRuleCall_10_3_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__ArgsAssignment_10_3_0"


    // $ANTLR start "rule__Atomic__ArgsAssignment_10_3_1_1"
    // InternalNabla.g:10277:1: rule__Atomic__ArgsAssignment_10_3_1_1 : ( ruleExpression ) ;
    public final void rule__Atomic__ArgsAssignment_10_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10281:1: ( ( ruleExpression ) )
            // InternalNabla.g:10282:2: ( ruleExpression )
            {
            // InternalNabla.g:10282:2: ( ruleExpression )
            // InternalNabla.g:10283:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getArgsExpressionParserRuleCall_10_3_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getArgsExpressionParserRuleCall_10_3_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__ArgsAssignment_10_3_1_1"


    // $ANTLR start "rule__Atomic__ReductionAssignment_11_1"
    // InternalNabla.g:10292:1: rule__Atomic__ReductionAssignment_11_1 : ( ( ruleQualifiedName ) ) ;
    public final void rule__Atomic__ReductionAssignment_11_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10296:1: ( ( ( ruleQualifiedName ) ) )
            // InternalNabla.g:10297:2: ( ( ruleQualifiedName ) )
            {
            // InternalNabla.g:10297:2: ( ( ruleQualifiedName ) )
            // InternalNabla.g:10298:3: ( ruleQualifiedName )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getReductionReductionCrossReference_11_1_0()); 
            }
            // InternalNabla.g:10299:3: ( ruleQualifiedName )
            // InternalNabla.g:10300:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getReductionReductionQualifiedNameParserRuleCall_11_1_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getReductionReductionQualifiedNameParserRuleCall_11_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getReductionReductionCrossReference_11_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__ReductionAssignment_11_1"


    // $ANTLR start "rule__Atomic__IteratorAssignment_11_3"
    // InternalNabla.g:10311:1: rule__Atomic__IteratorAssignment_11_3 : ( ruleSpaceIterator ) ;
    public final void rule__Atomic__IteratorAssignment_11_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10315:1: ( ( ruleSpaceIterator ) )
            // InternalNabla.g:10316:2: ( ruleSpaceIterator )
            {
            // InternalNabla.g:10316:2: ( ruleSpaceIterator )
            // InternalNabla.g:10317:3: ruleSpaceIterator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getIteratorSpaceIteratorParserRuleCall_11_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSpaceIterator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getIteratorSpaceIteratorParserRuleCall_11_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__IteratorAssignment_11_3"


    // $ANTLR start "rule__Atomic__ArgAssignment_11_6"
    // InternalNabla.g:10326:1: rule__Atomic__ArgAssignment_11_6 : ( ruleExpression ) ;
    public final void rule__Atomic__ArgAssignment_11_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10330:1: ( ( ruleExpression ) )
            // InternalNabla.g:10331:2: ( ruleExpression )
            {
            // InternalNabla.g:10331:2: ( ruleExpression )
            // InternalNabla.g:10332:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getArgExpressionParserRuleCall_11_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getArgExpressionParserRuleCall_11_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__ArgAssignment_11_6"


    // $ANTLR start "rule__Real2Constant__XAssignment_1"
    // InternalNabla.g:10341:1: rule__Real2Constant__XAssignment_1 : ( RULE_REAL ) ;
    public final void rule__Real2Constant__XAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10345:1: ( ( RULE_REAL ) )
            // InternalNabla.g:10346:2: ( RULE_REAL )
            {
            // InternalNabla.g:10346:2: ( RULE_REAL )
            // InternalNabla.g:10347:3: RULE_REAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal2ConstantAccess().getXREALTerminalRuleCall_1_0()); 
            }
            match(input,RULE_REAL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal2ConstantAccess().getXREALTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real2Constant__XAssignment_1"


    // $ANTLR start "rule__Real2Constant__YAssignment_3"
    // InternalNabla.g:10356:1: rule__Real2Constant__YAssignment_3 : ( RULE_REAL ) ;
    public final void rule__Real2Constant__YAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10360:1: ( ( RULE_REAL ) )
            // InternalNabla.g:10361:2: ( RULE_REAL )
            {
            // InternalNabla.g:10361:2: ( RULE_REAL )
            // InternalNabla.g:10362:3: RULE_REAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal2ConstantAccess().getYREALTerminalRuleCall_3_0()); 
            }
            match(input,RULE_REAL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal2ConstantAccess().getYREALTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real2Constant__YAssignment_3"


    // $ANTLR start "rule__Real3Constant__XAssignment_1"
    // InternalNabla.g:10371:1: rule__Real3Constant__XAssignment_1 : ( RULE_REAL ) ;
    public final void rule__Real3Constant__XAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10375:1: ( ( RULE_REAL ) )
            // InternalNabla.g:10376:2: ( RULE_REAL )
            {
            // InternalNabla.g:10376:2: ( RULE_REAL )
            // InternalNabla.g:10377:3: RULE_REAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal3ConstantAccess().getXREALTerminalRuleCall_1_0()); 
            }
            match(input,RULE_REAL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal3ConstantAccess().getXREALTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__XAssignment_1"


    // $ANTLR start "rule__Real3Constant__YAssignment_3"
    // InternalNabla.g:10386:1: rule__Real3Constant__YAssignment_3 : ( RULE_REAL ) ;
    public final void rule__Real3Constant__YAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10390:1: ( ( RULE_REAL ) )
            // InternalNabla.g:10391:2: ( RULE_REAL )
            {
            // InternalNabla.g:10391:2: ( RULE_REAL )
            // InternalNabla.g:10392:3: RULE_REAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal3ConstantAccess().getYREALTerminalRuleCall_3_0()); 
            }
            match(input,RULE_REAL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal3ConstantAccess().getYREALTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__YAssignment_3"


    // $ANTLR start "rule__Real3Constant__ZAssignment_5"
    // InternalNabla.g:10401:1: rule__Real3Constant__ZAssignment_5 : ( RULE_REAL ) ;
    public final void rule__Real3Constant__ZAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10405:1: ( ( RULE_REAL ) )
            // InternalNabla.g:10406:2: ( RULE_REAL )
            {
            // InternalNabla.g:10406:2: ( RULE_REAL )
            // InternalNabla.g:10407:3: RULE_REAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal3ConstantAccess().getZREALTerminalRuleCall_5_0()); 
            }
            match(input,RULE_REAL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal3ConstantAccess().getZREALTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__ZAssignment_5"


    // $ANTLR start "rule__VarRef__VariableAssignment_0"
    // InternalNabla.g:10416:1: rule__VarRef__VariableAssignment_0 : ( ( RULE_ID ) ) ;
    public final void rule__VarRef__VariableAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10420:1: ( ( ( RULE_ID ) ) )
            // InternalNabla.g:10421:2: ( ( RULE_ID ) )
            {
            // InternalNabla.g:10421:2: ( ( RULE_ID ) )
            // InternalNabla.g:10422:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getVariableVarCrossReference_0_0()); 
            }
            // InternalNabla.g:10423:3: ( RULE_ID )
            // InternalNabla.g:10424:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getVariableVarIDTerminalRuleCall_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getVariableVarIDTerminalRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getVariableVarCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__VariableAssignment_0"


    // $ANTLR start "rule__VarRef__SpaceIteratorsAssignment_1_1"
    // InternalNabla.g:10435:1: rule__VarRef__SpaceIteratorsAssignment_1_1 : ( ruleIteratorRangeOrRef ) ;
    public final void rule__VarRef__SpaceIteratorsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10439:1: ( ( ruleIteratorRangeOrRef ) )
            // InternalNabla.g:10440:2: ( ruleIteratorRangeOrRef )
            {
            // InternalNabla.g:10440:2: ( ruleIteratorRangeOrRef )
            // InternalNabla.g:10441:3: ruleIteratorRangeOrRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getSpaceIteratorsIteratorRangeOrRefParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleIteratorRangeOrRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getSpaceIteratorsIteratorRangeOrRefParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__SpaceIteratorsAssignment_1_1"


    // $ANTLR start "rule__VarRef__SpaceIteratorsAssignment_1_2_1"
    // InternalNabla.g:10450:1: rule__VarRef__SpaceIteratorsAssignment_1_2_1 : ( ruleIteratorRangeOrRef ) ;
    public final void rule__VarRef__SpaceIteratorsAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10454:1: ( ( ruleIteratorRangeOrRef ) )
            // InternalNabla.g:10455:2: ( ruleIteratorRangeOrRef )
            {
            // InternalNabla.g:10455:2: ( ruleIteratorRangeOrRef )
            // InternalNabla.g:10456:3: ruleIteratorRangeOrRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getSpaceIteratorsIteratorRangeOrRefParserRuleCall_1_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleIteratorRangeOrRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getSpaceIteratorsIteratorRangeOrRefParserRuleCall_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__SpaceIteratorsAssignment_1_2_1"


    // $ANTLR start "rule__VarRef__TimeIteratorAssignment_2_1"
    // InternalNabla.g:10465:1: rule__VarRef__TimeIteratorAssignment_2_1 : ( ruleTimeIteratorRef ) ;
    public final void rule__VarRef__TimeIteratorAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10469:1: ( ( ruleTimeIteratorRef ) )
            // InternalNabla.g:10470:2: ( ruleTimeIteratorRef )
            {
            // InternalNabla.g:10470:2: ( ruleTimeIteratorRef )
            // InternalNabla.g:10471:3: ruleTimeIteratorRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getTimeIteratorTimeIteratorRefParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTimeIteratorRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getTimeIteratorTimeIteratorRefParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__TimeIteratorAssignment_2_1"


    // $ANTLR start "rule__VarRef__FieldsAssignment_3_1"
    // InternalNabla.g:10480:1: rule__VarRef__FieldsAssignment_3_1 : ( RULE_ID ) ;
    public final void rule__VarRef__FieldsAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10484:1: ( ( RULE_ID ) )
            // InternalNabla.g:10485:2: ( RULE_ID )
            {
            // InternalNabla.g:10485:2: ( RULE_ID )
            // InternalNabla.g:10486:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getFieldsIDTerminalRuleCall_3_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getFieldsIDTerminalRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__FieldsAssignment_3_1"


    // $ANTLR start "rule__TimeIteratorRef__IteratorAssignment_0"
    // InternalNabla.g:10495:1: rule__TimeIteratorRef__IteratorAssignment_0 : ( ( RULE_ID ) ) ;
    public final void rule__TimeIteratorRef__IteratorAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10499:1: ( ( ( RULE_ID ) ) )
            // InternalNabla.g:10500:2: ( ( RULE_ID ) )
            {
            // InternalNabla.g:10500:2: ( ( RULE_ID ) )
            // InternalNabla.g:10501:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorRefAccess().getIteratorTimeIteratorCrossReference_0_0()); 
            }
            // InternalNabla.g:10502:3: ( RULE_ID )
            // InternalNabla.g:10503:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorRefAccess().getIteratorTimeIteratorIDTerminalRuleCall_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorRefAccess().getIteratorTimeIteratorIDTerminalRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorRefAccess().getIteratorTimeIteratorCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIteratorRef__IteratorAssignment_0"


    // $ANTLR start "rule__TimeIteratorRef__InitAssignment_1_0_0"
    // InternalNabla.g:10514:1: rule__TimeIteratorRef__InitAssignment_1_0_0 : ( ( '=' ) ) ;
    public final void rule__TimeIteratorRef__InitAssignment_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10518:1: ( ( ( '=' ) ) )
            // InternalNabla.g:10519:2: ( ( '=' ) )
            {
            // InternalNabla.g:10519:2: ( ( '=' ) )
            // InternalNabla.g:10520:3: ( '=' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorRefAccess().getInitEqualsSignKeyword_1_0_0_0()); 
            }
            // InternalNabla.g:10521:3: ( '=' )
            // InternalNabla.g:10522:4: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorRefAccess().getInitEqualsSignKeyword_1_0_0_0()); 
            }
            match(input,42,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorRefAccess().getInitEqualsSignKeyword_1_0_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorRefAccess().getInitEqualsSignKeyword_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIteratorRef__InitAssignment_1_0_0"


    // $ANTLR start "rule__TimeIteratorRef__NextAssignment_1_0_1"
    // InternalNabla.g:10533:1: rule__TimeIteratorRef__NextAssignment_1_0_1 : ( ( '+' ) ) ;
    public final void rule__TimeIteratorRef__NextAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10537:1: ( ( ( '+' ) ) )
            // InternalNabla.g:10538:2: ( ( '+' ) )
            {
            // InternalNabla.g:10538:2: ( ( '+' ) )
            // InternalNabla.g:10539:3: ( '+' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorRefAccess().getNextPlusSignKeyword_1_0_1_0()); 
            }
            // InternalNabla.g:10540:3: ( '+' )
            // InternalNabla.g:10541:4: '+'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorRefAccess().getNextPlusSignKeyword_1_0_1_0()); 
            }
            match(input,63,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorRefAccess().getNextPlusSignKeyword_1_0_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorRefAccess().getNextPlusSignKeyword_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIteratorRef__NextAssignment_1_0_1"


    // $ANTLR start "rule__TimeIteratorRef__ValueAssignment_1_1"
    // InternalNabla.g:10552:1: rule__TimeIteratorRef__ValueAssignment_1_1 : ( RULE_INT ) ;
    public final void rule__TimeIteratorRef__ValueAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10556:1: ( ( RULE_INT ) )
            // InternalNabla.g:10557:2: ( RULE_INT )
            {
            // InternalNabla.g:10557:2: ( RULE_INT )
            // InternalNabla.g:10558:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorRefAccess().getValueINTTerminalRuleCall_1_1_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorRefAccess().getValueINTTerminalRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIteratorRef__ValueAssignment_1_1"

    // $ANTLR start synpred55_InternalNabla
    public final void synpred55_InternalNabla_fragment() throws RecognitionException {   
        // InternalNabla.g:3050:3: ( rule__Instruction__Group_5_6__0 )
        // InternalNabla.g:3050:3: rule__Instruction__Group_5_6__0
        {
        pushFollow(FOLLOW_2);
        rule__Instruction__Group_5_6__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred55_InternalNabla

    // Delegated rules

    public final boolean synpred55_InternalNabla() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_InternalNabla_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA3 dfa3 = new DFA3(this);
    protected DFA5 dfa5 = new DFA5(this);
    protected DFA17 dfa17 = new DFA17(this);
    static final String dfa_1s = "\13\uffff";
    static final String dfa_2s = "\1\26\1\uffff\7\4\1\41\1\uffff";
    static final String dfa_3s = "\1\74\1\uffff\7\4\1\60\1\uffff";
    static final String dfa_4s = "\1\uffff\1\1\10\uffff\1\2";
    static final String dfa_5s = "\13\uffff}>";
    static final String[] dfa_6s = {
            "\1\2\1\3\1\4\1\5\1\6\1\7\1\10\37\uffff\1\1",
            "",
            "\1\11",
            "\1\11",
            "\1\11",
            "\1\11",
            "\1\11",
            "\1\11",
            "\1\11",
            "\1\12\7\uffff\1\12\1\1\5\uffff\1\12",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "982:1: rule__NablaModule__VariablesAlternatives_5_0 : ( ( ruleScalarVarDefinition ) | ( ruleVarGroupDeclaration ) );";
        }
    }
    static final String dfa_7s = "\15\uffff";
    static final String dfa_8s = "\1\4\1\47\1\54\1\4\7\51\2\uffff";
    static final String dfa_9s = "\1\4\1\47\1\54\1\100\7\66\2\uffff";
    static final String dfa_10s = "\13\uffff\1\1\1\2";
    static final String dfa_11s = "\15\uffff}>";
    static final String[] dfa_12s = {
            "\1\1",
            "\1\2",
            "\1\3",
            "\3\14\5\uffff\1\13\10\uffff\1\14\1\4\1\5\1\6\1\7\1\10\1\11\1\12\7\uffff\1\14\7\uffff\1\14\6\uffff\2\14\13\uffff\1\14",
            "\1\13\2\uffff\1\14\1\13\7\uffff\2\14",
            "\1\13\2\uffff\1\14\1\13\7\uffff\2\14",
            "\1\13\2\uffff\1\14\1\13\7\uffff\2\14",
            "\1\13\2\uffff\1\14\1\13\7\uffff\2\14",
            "\1\13\2\uffff\1\14\1\13\7\uffff\2\14",
            "\1\13\2\uffff\1\14\1\13\7\uffff\2\14",
            "\1\13\2\uffff\1\14\1\13\7\uffff\2\14",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA3 extends DFA {

        public DFA3(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 3;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "1024:1: rule__DeclarationBlock__FunctionsAlternatives_1_3_0 : ( ( ruleFunction ) | ( ruleReduction ) );";
        }
    }
    static final String dfa_13s = "\17\uffff";
    static final String dfa_14s = "\1\4\1\uffff\7\4\4\uffff\1\41\1\uffff";
    static final String dfa_15s = "\1\74\1\uffff\7\4\4\uffff\1\60\1\uffff";
    static final String dfa_16s = "\1\uffff\1\1\7\uffff\1\3\1\4\1\5\1\6\1\uffff\1\2";
    static final String dfa_17s = "\17\uffff}>";
    static final String[] dfa_18s = {
            "\1\12\21\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\7\uffff\1\11\3\uffff\1\13\2\uffff\1\14\20\uffff\1\1",
            "",
            "\1\15",
            "\1\15",
            "\1\15",
            "\1\15",
            "\1\15",
            "\1\15",
            "\1\15",
            "",
            "",
            "",
            "",
            "\1\16\7\uffff\1\16\1\1\5\uffff\1\16",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA5 extends DFA {

        public DFA5(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 5;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "1066:1: rule__Instruction__Alternatives : ( ( ruleScalarVarDefinition ) | ( ruleVarGroupDeclaration ) | ( ( rule__Instruction__Group_2__0 ) ) | ( ( rule__Instruction__Group_3__0 ) ) | ( ( rule__Instruction__Group_4__0 ) ) | ( ( rule__Instruction__Group_5__0 ) ) );";
        }
    }
    static final String dfa_19s = "\42\uffff";
    static final String dfa_20s = "\14\uffff\1\24\13\uffff\1\24\11\uffff";
    static final String dfa_21s = "\1\4\2\uffff\1\6\1\uffff\7\54\1\15\1\51\1\6\3\uffff\2\4\2\uffff\1\6\1\51\1\15\2\45\1\6\3\uffff\1\45\2\uffff";
    static final String dfa_22s = "\1\100\2\uffff\1\44\1\uffff\7\66\1\77\1\51\1\6\3\uffff\1\4\1\73\2\uffff\1\6\1\51\1\77\1\57\1\51\1\6\3\uffff\1\51\2\uffff";
    static final String dfa_23s = "\1\uffff\1\1\1\2\1\uffff\1\5\12\uffff\1\11\1\12\1\10\2\uffff\1\15\1\13\6\uffff\1\14\1\3\1\4\1\uffff\1\7\1\6";
    static final String dfa_24s = "\42\uffff}>";
    static final String[] dfa_25s = {
            "\1\14\1\1\1\2\16\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\7\uffff\1\3\33\uffff\1\4",
            "",
            "",
            "\1\15\35\uffff\1\16",
            "",
            "\1\21\10\uffff\1\17\1\20",
            "\1\21\10\uffff\1\17\1\20",
            "\1\21\10\uffff\1\17\1\20",
            "\1\21\10\uffff\1\17\1\20",
            "\1\21\10\uffff\1\17\1\20",
            "\1\21\10\uffff\1\17\1\20",
            "\1\21\10\uffff\1\17\1\20",
            "\10\24\14\uffff\1\24\2\uffff\1\23\4\uffff\1\24\2\uffff\1\25\1\24\5\uffff\1\24\3\uffff\1\24\1\22\4\uffff\3\24",
            "\1\26",
            "\1\27",
            "",
            "",
            "",
            "\1\30",
            "\1\31\65\uffff\2\24",
            "",
            "",
            "\1\32",
            "\1\33",
            "\10\24\14\uffff\1\24\2\uffff\1\34\4\uffff\1\24\2\uffff\1\25\1\24\5\uffff\1\24\4\uffff\1\22\4\uffff\3\24",
            "\1\24\3\uffff\1\24\2\uffff\1\24\2\uffff\1\34",
            "\1\35\3\uffff\1\36",
            "\1\37",
            "",
            "",
            "",
            "\1\41\3\uffff\1\40",
            "",
            ""
    };

    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA17 extends DFA {

        public DFA17(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 17;
            this.eot = dfa_19;
            this.eof = dfa_20;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "1366:1: rule__Atomic__Alternatives : ( ( ( rule__Atomic__Group_0__0 ) ) | ( ( rule__Atomic__Group_1__0 ) ) | ( ruleReal2Constant ) | ( ruleReal3Constant ) | ( ( rule__Atomic__Group_4__0 ) ) | ( ( rule__Atomic__Group_5__0 ) ) | ( ( rule__Atomic__Group_6__0 ) ) | ( ( rule__Atomic__Group_7__0 ) ) | ( ( rule__Atomic__Group_8__0 ) ) | ( ( rule__Atomic__Group_9__0 ) ) | ( ( rule__Atomic__Group_10__0 ) ) | ( ( rule__Atomic__Group_11__0 ) ) | ( ruleVarRef ) );";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x1000004C1FC00010L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000004800000002L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x100000001FC00002L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000002000000010L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000004800000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x100009101FC00010L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x100009101FC00012L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x101810101FE00070L,0x0000000000000001L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0C00200000000010L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0C00000000000010L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x100000001FC00000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000020200000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0002020000000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x00000000E0001000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x00000010E0000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x00000000E0000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x100000001FC01000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x2000000000000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x2000000000000002L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x4000000000000002L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000006000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000006002L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000078000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000078002L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x8008000000000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x8008000000000002L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000180000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000180002L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000200000L,0x0000000000000001L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x101830101FE00070L,0x0000000000000001L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0180001000000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0100000000000002L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000022000000000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x8000040000000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0200000000000000L});

}