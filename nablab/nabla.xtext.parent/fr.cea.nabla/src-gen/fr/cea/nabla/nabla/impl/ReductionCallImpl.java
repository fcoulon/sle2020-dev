/**
 * generated by Xtext 2.19.0
 */
package fr.cea.nabla.nabla.impl;

import fr.cea.nabla.nabla.Expression;
import fr.cea.nabla.nabla.NablaPackage;
import fr.cea.nabla.nabla.Reduction;
import fr.cea.nabla.nabla.ReductionCall;
import fr.cea.nabla.nabla.SpaceIterator;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Reduction Call</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.cea.nabla.nabla.impl.ReductionCallImpl#getReduction <em>Reduction</em>}</li>
 *   <li>{@link fr.cea.nabla.nabla.impl.ReductionCallImpl#getIterator <em>Iterator</em>}</li>
 *   <li>{@link fr.cea.nabla.nabla.impl.ReductionCallImpl#getArg <em>Arg</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ReductionCallImpl extends ExpressionImpl implements ReductionCall
{
  /**
   * The cached value of the '{@link #getReduction() <em>Reduction</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReduction()
   * @generated
   * @ordered
   */
  protected Reduction reduction;

  /**
   * The cached value of the '{@link #getIterator() <em>Iterator</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIterator()
   * @generated
   * @ordered
   */
  protected SpaceIterator iterator;

  /**
   * The cached value of the '{@link #getArg() <em>Arg</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArg()
   * @generated
   * @ordered
   */
  protected Expression arg;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ReductionCallImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return NablaPackage.Literals.REDUCTION_CALL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Reduction getReduction()
  {
    if (reduction != null && reduction.eIsProxy())
    {
      InternalEObject oldReduction = (InternalEObject)reduction;
      reduction = (Reduction)eResolveProxy(oldReduction);
      if (reduction != oldReduction)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, NablaPackage.REDUCTION_CALL__REDUCTION, oldReduction, reduction));
      }
    }
    return reduction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Reduction basicGetReduction()
  {
    return reduction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setReduction(Reduction newReduction)
  {
    Reduction oldReduction = reduction;
    reduction = newReduction;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NablaPackage.REDUCTION_CALL__REDUCTION, oldReduction, reduction));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SpaceIterator getIterator()
  {
    return iterator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIterator(SpaceIterator newIterator, NotificationChain msgs)
  {
    SpaceIterator oldIterator = iterator;
    iterator = newIterator;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, NablaPackage.REDUCTION_CALL__ITERATOR, oldIterator, newIterator);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIterator(SpaceIterator newIterator)
  {
    if (newIterator != iterator)
    {
      NotificationChain msgs = null;
      if (iterator != null)
        msgs = ((InternalEObject)iterator).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - NablaPackage.REDUCTION_CALL__ITERATOR, null, msgs);
      if (newIterator != null)
        msgs = ((InternalEObject)newIterator).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - NablaPackage.REDUCTION_CALL__ITERATOR, null, msgs);
      msgs = basicSetIterator(newIterator, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NablaPackage.REDUCTION_CALL__ITERATOR, newIterator, newIterator));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression getArg()
  {
    return arg;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetArg(Expression newArg, NotificationChain msgs)
  {
    Expression oldArg = arg;
    arg = newArg;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, NablaPackage.REDUCTION_CALL__ARG, oldArg, newArg);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setArg(Expression newArg)
  {
    if (newArg != arg)
    {
      NotificationChain msgs = null;
      if (arg != null)
        msgs = ((InternalEObject)arg).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - NablaPackage.REDUCTION_CALL__ARG, null, msgs);
      if (newArg != null)
        msgs = ((InternalEObject)newArg).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - NablaPackage.REDUCTION_CALL__ARG, null, msgs);
      msgs = basicSetArg(newArg, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NablaPackage.REDUCTION_CALL__ARG, newArg, newArg));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case NablaPackage.REDUCTION_CALL__ITERATOR:
        return basicSetIterator(null, msgs);
      case NablaPackage.REDUCTION_CALL__ARG:
        return basicSetArg(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case NablaPackage.REDUCTION_CALL__REDUCTION:
        if (resolve) return getReduction();
        return basicGetReduction();
      case NablaPackage.REDUCTION_CALL__ITERATOR:
        return getIterator();
      case NablaPackage.REDUCTION_CALL__ARG:
        return getArg();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case NablaPackage.REDUCTION_CALL__REDUCTION:
        setReduction((Reduction)newValue);
        return;
      case NablaPackage.REDUCTION_CALL__ITERATOR:
        setIterator((SpaceIterator)newValue);
        return;
      case NablaPackage.REDUCTION_CALL__ARG:
        setArg((Expression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case NablaPackage.REDUCTION_CALL__REDUCTION:
        setReduction((Reduction)null);
        return;
      case NablaPackage.REDUCTION_CALL__ITERATOR:
        setIterator((SpaceIterator)null);
        return;
      case NablaPackage.REDUCTION_CALL__ARG:
        setArg((Expression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case NablaPackage.REDUCTION_CALL__REDUCTION:
        return reduction != null;
      case NablaPackage.REDUCTION_CALL__ITERATOR:
        return iterator != null;
      case NablaPackage.REDUCTION_CALL__ARG:
        return arg != null;
    }
    return super.eIsSet(featureID);
  }

} //ReductionCallImpl
