/*
 * generated by Xtext 2.19.0
 */
grammar InternalNabla;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package fr.cea.nabla.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.cea.nabla.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.cea.nabla.services.NablaGrammarAccess;

}

@parser::members {

 	private NablaGrammarAccess grammarAccess;

    public InternalNablaParser(TokenStream input, NablaGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "NablaModule";
   	}

   	@Override
   	protected NablaGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleNablaModule
entryRuleNablaModule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNablaModuleRule()); }
	iv_ruleNablaModule=ruleNablaModule
	{ $current=$iv_ruleNablaModule.current; }
	EOF;

// Rule NablaModule
ruleNablaModule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='module'
		{
			newLeafNode(otherlv_0, grammarAccess.getNablaModuleAccess().getModuleKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNablaModuleAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNablaModuleRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.cea.nabla.Nabla.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getNablaModuleAccess().getSemicolonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNablaModuleAccess().getImportsImportParserRuleCall_3_0());
				}
				lv_imports_3_0=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNablaModuleRule());
					}
					add(
						$current,
						"imports",
						lv_imports_3_0,
						"fr.cea.nabla.Nabla.Import");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getNablaModuleAccess().getBlocksDeclarationBlockParserRuleCall_4_0());
				}
				lv_blocks_4_0=ruleDeclarationBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNablaModuleRule());
					}
					add(
						$current,
						"blocks",
						lv_blocks_4_0,
						"fr.cea.nabla.Nabla.DeclarationBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getNablaModuleAccess().getVariablesScalarVarDefinitionParserRuleCall_5_0_0());
					}
					lv_variables_5_1=ruleScalarVarDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNablaModuleRule());
						}
						add(
							$current,
							"variables",
							lv_variables_5_1,
							"fr.cea.nabla.Nabla.ScalarVarDefinition");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getNablaModuleAccess().getVariablesVarGroupDeclarationParserRuleCall_5_0_1());
					}
					lv_variables_5_2=ruleVarGroupDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNablaModuleRule());
						}
						add(
							$current,
							"variables",
							lv_variables_5_2,
							"fr.cea.nabla.Nabla.VarGroupDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getNablaModuleAccess().getJobsJobParserRuleCall_6_0());
				}
				lv_jobs_6_0=ruleJob
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNablaModuleRule());
					}
					add(
						$current,
						"jobs",
						lv_jobs_6_0,
						"fr.cea.nabla.Nabla.Job");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='with'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getWithKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0());
				}
				lv_importedNamespace_1_0=ruleQualifiedNameWithWildcard
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportRule());
					}
					set(
						$current,
						"importedNamespace",
						lv_importedNamespace_1_0,
						"fr.cea.nabla.Nabla.QualifiedNameWithWildcard");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getImportAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleDeclarationBlock
entryRuleDeclarationBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationBlockRule()); }
	iv_ruleDeclarationBlock=ruleDeclarationBlock
	{ $current=$iv_ruleDeclarationBlock.current; }
	EOF;

// Rule DeclarationBlock
ruleDeclarationBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getDeclarationBlockAccess().getConnectivityDeclarationBlockAction_0_0(),
						$current);
				}
			)
			otherlv_1='connectivities'
			{
				newLeafNode(otherlv_1, grammarAccess.getDeclarationBlockAccess().getConnectivitiesKeyword_0_1());
			}
			otherlv_2='{'
			{
				newLeafNode(otherlv_2, grammarAccess.getDeclarationBlockAccess().getLeftCurlyBracketKeyword_0_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeclarationBlockAccess().getConnectivitiesConnectivityParserRuleCall_0_3_0());
					}
					lv_connectivities_3_0=ruleConnectivity
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclarationBlockRule());
						}
						add(
							$current,
							"connectivities",
							lv_connectivities_3_0,
							"fr.cea.nabla.Nabla.Connectivity");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_4='}'
			{
				newLeafNode(otherlv_4, grammarAccess.getDeclarationBlockAccess().getRightCurlyBracketKeyword_0_4());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getDeclarationBlockAccess().getFunctionDeclarationBlockAction_1_0(),
						$current);
				}
			)
			otherlv_6='functions'
			{
				newLeafNode(otherlv_6, grammarAccess.getDeclarationBlockAccess().getFunctionsKeyword_1_1());
			}
			otherlv_7='{'
			{
				newLeafNode(otherlv_7, grammarAccess.getDeclarationBlockAccess().getLeftCurlyBracketKeyword_1_2());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getDeclarationBlockAccess().getFunctionsFunctionParserRuleCall_1_3_0_0());
						}
						lv_functions_8_1=ruleFunction
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDeclarationBlockRule());
							}
							add(
								$current,
								"functions",
								lv_functions_8_1,
								"fr.cea.nabla.Nabla.Function");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getDeclarationBlockAccess().getFunctionsReductionParserRuleCall_1_3_0_1());
						}
						lv_functions_8_2=ruleReduction
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDeclarationBlockRule());
							}
							add(
								$current,
								"functions",
								lv_functions_8_2,
								"fr.cea.nabla.Nabla.Reduction");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getDeclarationBlockAccess().getRightCurlyBracketKeyword_1_4());
			}
		)
	)
;

// Entry rule entryRuleJob
entryRuleJob returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJobRule()); }
	iv_ruleJob=ruleJob
	{ $current=$iv_ruleJob.current; }
	EOF;

// Rule Job
ruleJob returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getJobAccess().getInstructionJobAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getJobAccess().getNameIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getJobRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"fr.cea.nabla.Nabla.ID");
					}
				)
			)
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getJobAccess().getColonKeyword_0_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJobAccess().getInstructionInstructionParserRuleCall_0_3_0());
					}
					lv_instruction_3_0=ruleInstruction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJobRule());
						}
						set(
							$current,
							"instruction",
							lv_instruction_3_0,
							"fr.cea.nabla.Nabla.Instruction");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getJobAccess().getTimeLoopJobAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_name_5_0=RULE_ID
					{
						newLeafNode(lv_name_5_0, grammarAccess.getJobAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getJobRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_5_0,
							"fr.cea.nabla.Nabla.ID");
					}
				)
			)
			otherlv_6=':'
			{
				newLeafNode(otherlv_6, grammarAccess.getJobAccess().getColonKeyword_1_2());
			}
			otherlv_7='\u2200'
			{
				newLeafNode(otherlv_7, grammarAccess.getJobAccess().getForAllKeyword_1_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJobAccess().getIteratorTimeIteratorParserRuleCall_1_4_0());
					}
					lv_iterator_8_0=ruleTimeIterator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJobRule());
						}
						set(
							$current,
							"iterator",
							lv_iterator_8_0,
							"fr.cea.nabla.Nabla.TimeIterator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9=','
			{
				newLeafNode(otherlv_9, grammarAccess.getJobAccess().getCommaKeyword_1_5());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJobAccess().getInitializationInstructionParserRuleCall_1_6_0());
					}
					lv_initialization_10_0=ruleInstruction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJobRule());
						}
						set(
							$current,
							"initialization",
							lv_initialization_10_0,
							"fr.cea.nabla.Nabla.Instruction");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_11=','
			{
				newLeafNode(otherlv_11, grammarAccess.getJobAccess().getCommaKeyword_1_7());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJobAccess().getBodyInstructionParserRuleCall_1_8_0());
					}
					lv_body_12_0=ruleInstruction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJobRule());
						}
						set(
							$current,
							"body",
							lv_body_12_0,
							"fr.cea.nabla.Nabla.Instruction");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleInstruction
entryRuleInstruction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstructionRule()); }
	iv_ruleInstruction=ruleInstruction
	{ $current=$iv_ruleInstruction.current; }
	EOF;

// Rule Instruction
ruleInstruction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getScalarVarDefinitionParserRuleCall_0());
		}
		this_ScalarVarDefinition_0=ruleScalarVarDefinition
		{
			$current = $this_ScalarVarDefinition_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getVarGroupDeclarationParserRuleCall_1());
		}
		this_VarGroupDeclaration_1=ruleVarGroupDeclaration
		{
			$current = $this_VarGroupDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getInstructionAccess().getInstructionBlockAction_2_0(),
						$current);
				}
			)
			otherlv_3='{'
			{
				newLeafNode(otherlv_3, grammarAccess.getInstructionAccess().getLeftCurlyBracketKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInstructionAccess().getInstructionsInstructionParserRuleCall_2_2_0());
					}
					lv_instructions_4_0=ruleInstruction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInstructionRule());
						}
						add(
							$current,
							"instructions",
							lv_instructions_4_0,
							"fr.cea.nabla.Nabla.Instruction");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_5='}'
			{
				newLeafNode(otherlv_5, grammarAccess.getInstructionAccess().getRightCurlyBracketKeyword_2_3());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getInstructionAccess().getAffectationAction_3_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getInstructionAccess().getVarRefVarRefParserRuleCall_3_1_0());
					}
					lv_varRef_7_0=ruleVarRef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInstructionRule());
						}
						set(
							$current,
							"varRef",
							lv_varRef_7_0,
							"fr.cea.nabla.Nabla.VarRef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_8='='
			{
				newLeafNode(otherlv_8, grammarAccess.getInstructionAccess().getEqualsSignKeyword_3_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInstructionAccess().getExpressionExpressionParserRuleCall_3_3_0());
					}
					lv_expression_9_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInstructionRule());
						}
						set(
							$current,
							"expression",
							lv_expression_9_0,
							"fr.cea.nabla.Nabla.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_10=';'
			{
				newLeafNode(otherlv_10, grammarAccess.getInstructionAccess().getSemicolonKeyword_3_4());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getInstructionAccess().getLoopAction_4_0(),
						$current);
				}
			)
			otherlv_12='\u2200'
			{
				newLeafNode(otherlv_12, grammarAccess.getInstructionAccess().getForAllKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInstructionAccess().getIteratorSpaceIteratorParserRuleCall_4_2_0());
					}
					lv_iterator_13_0=ruleSpaceIterator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInstructionRule());
						}
						set(
							$current,
							"iterator",
							lv_iterator_13_0,
							"fr.cea.nabla.Nabla.SpaceIterator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_14=','
			{
				newLeafNode(otherlv_14, grammarAccess.getInstructionAccess().getCommaKeyword_4_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInstructionAccess().getBodyInstructionParserRuleCall_4_4_0());
					}
					lv_body_15_0=ruleInstruction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInstructionRule());
						}
						set(
							$current,
							"body",
							lv_body_15_0,
							"fr.cea.nabla.Nabla.Instruction");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getInstructionAccess().getIfAction_5_0(),
						$current);
				}
			)
			otherlv_17='if'
			{
				newLeafNode(otherlv_17, grammarAccess.getInstructionAccess().getIfKeyword_5_1());
			}
			otherlv_18='('
			{
				newLeafNode(otherlv_18, grammarAccess.getInstructionAccess().getLeftParenthesisKeyword_5_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInstructionAccess().getConditionExpressionParserRuleCall_5_3_0());
					}
					lv_condition_19_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInstructionRule());
						}
						set(
							$current,
							"condition",
							lv_condition_19_0,
							"fr.cea.nabla.Nabla.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_20=')'
			{
				newLeafNode(otherlv_20, grammarAccess.getInstructionAccess().getRightParenthesisKeyword_5_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInstructionAccess().getThenInstructionParserRuleCall_5_5_0());
					}
					lv_then_21_0=ruleInstruction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInstructionRule());
						}
						set(
							$current,
							"then",
							lv_then_21_0,
							"fr.cea.nabla.Nabla.Instruction");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					('else')=>
					otherlv_22='else'
					{
						newLeafNode(otherlv_22, grammarAccess.getInstructionAccess().getElseKeyword_5_6_0());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getInstructionAccess().getElseInstructionParserRuleCall_5_6_1_0());
						}
						lv_else_23_0=ruleInstruction
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInstructionRule());
							}
							set(
								$current,
								"else",
								lv_else_23_0,
								"fr.cea.nabla.Nabla.Instruction");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
	)
;

// Entry rule entryRuleTimeIterator
entryRuleTimeIterator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeIteratorRule()); }
	iv_ruleTimeIterator=ruleTimeIterator
	{ $current=$iv_ruleTimeIterator.current; }
	EOF;

// Rule TimeIterator
ruleTimeIterator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getTimeIteratorAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTimeIteratorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"fr.cea.nabla.Nabla.ID");
				}
			)
		)
		otherlv_1='\u2208'
		{
			newLeafNode(otherlv_1, grammarAccess.getTimeIteratorAccess().getElementOfKeyword_1());
		}
		otherlv_2='\u2115'
		{
			newLeafNode(otherlv_2, grammarAccess.getTimeIteratorAccess().getDoubleStruckCapitalNKeyword_2());
		}
	)
;

// Entry rule entryRuleSpaceIterator
entryRuleSpaceIterator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpaceIteratorRule()); }
	iv_ruleSpaceIterator=ruleSpaceIterator
	{ $current=$iv_ruleSpaceIterator.current; }
	EOF;

// Rule SpaceIterator
ruleSpaceIterator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getSpaceIteratorAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSpaceIteratorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"fr.cea.nabla.Nabla.ID");
				}
			)
		)
		otherlv_1='\u2208'
		{
			newLeafNode(otherlv_1, grammarAccess.getSpaceIteratorAccess().getElementOfKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSpaceIteratorAccess().getRangeSpaceIteratorRangeParserRuleCall_2_0());
				}
				lv_range_2_0=ruleSpaceIteratorRange
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpaceIteratorRule());
					}
					set(
						$current,
						"range",
						lv_range_2_0,
						"fr.cea.nabla.Nabla.SpaceIteratorRange");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSpaceIteratorRange
entryRuleSpaceIteratorRange returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpaceIteratorRangeRule()); }
	iv_ruleSpaceIteratorRange=ruleSpaceIteratorRange
	{ $current=$iv_ruleSpaceIteratorRange.current; }
	EOF;

// Rule SpaceIteratorRange
ruleSpaceIteratorRange returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSpaceIteratorRangeRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getSpaceIteratorRangeAccess().getConnectivityConnectivityCrossReference_0_0());
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getSpaceIteratorRangeAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSpaceIteratorRangeAccess().getArgsSpaceIteratorRefParserRuleCall_2_0_0());
					}
					lv_args_2_0=ruleSpaceIteratorRef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSpaceIteratorRangeRule());
						}
						add(
							$current,
							"args",
							lv_args_2_0,
							"fr.cea.nabla.Nabla.SpaceIteratorRef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getSpaceIteratorRangeAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSpaceIteratorRangeAccess().getArgsSpaceIteratorRefParserRuleCall_2_1_1_0());
						}
						lv_args_4_0=ruleSpaceIteratorRef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSpaceIteratorRangeRule());
							}
							add(
								$current,
								"args",
								lv_args_4_0,
								"fr.cea.nabla.Nabla.SpaceIteratorRef");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getSpaceIteratorRangeAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleSpaceIteratorRef
entryRuleSpaceIteratorRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpaceIteratorRefRule()); }
	iv_ruleSpaceIteratorRef=ruleSpaceIteratorRef
	{ $current=$iv_ruleSpaceIteratorRef.current; }
	EOF;

// Rule SpaceIteratorRef
ruleSpaceIteratorRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						lv_prev_0_0='\u25C4'
						{
							newLeafNode(lv_prev_0_0, grammarAccess.getSpaceIteratorRefAccess().getPrevBlackLeftPointingPointerKeyword_0_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSpaceIteratorRefRule());
							}
							setWithLastConsumed($current, "prev", true, "\u25C4");
						}
					)
				)
				    |
				(
					(
						lv_next_1_0='\u25BA'
						{
							newLeafNode(lv_next_1_0, grammarAccess.getSpaceIteratorRefAccess().getNextBlackRightPointingPointerKeyword_0_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSpaceIteratorRefRule());
							}
							setWithLastConsumed($current, "next", true, "\u25BA");
						}
					)
				)
			)
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getSpaceIteratorRefAccess().getLeftParenthesisKeyword_0_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSpaceIteratorRefRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getSpaceIteratorRefAccess().getIteratorSpaceIteratorCrossReference_0_2_0());
					}
				)
			)
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getSpaceIteratorRefAccess().getRightParenthesisKeyword_0_3());
			}
		)
		    |
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSpaceIteratorRefRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getSpaceIteratorRefAccess().getIteratorSpaceIteratorCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleScalarVarDefinition
entryRuleScalarVarDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScalarVarDefinitionRule()); }
	iv_ruleScalarVarDefinition=ruleScalarVarDefinition
	{ $current=$iv_ruleScalarVarDefinition.current; }
	EOF;

// Rule ScalarVarDefinition
ruleScalarVarDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_const_0_0='const'
				{
					newLeafNode(lv_const_0_0, grammarAccess.getScalarVarDefinitionAccess().getConstConstKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScalarVarDefinitionRule());
					}
					setWithLastConsumed($current, "const", true, "const");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getScalarVarDefinitionAccess().getTypeBasicTypeEnumRuleCall_1_0());
				}
				lv_type_1_0=ruleBasicType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScalarVarDefinitionRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"fr.cea.nabla.Nabla.BasicType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getScalarVarDefinitionAccess().getVariableScalarVarParserRuleCall_2_0());
				}
				lv_variable_2_0=ruleScalarVar
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScalarVarDefinitionRule());
					}
					set(
						$current,
						"variable",
						lv_variable_2_0,
						"fr.cea.nabla.Nabla.ScalarVar");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getScalarVarDefinitionAccess().getEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getScalarVarDefinitionAccess().getDefaultValueExpressionParserRuleCall_4_0());
				}
				lv_defaultValue_4_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScalarVarDefinitionRule());
					}
					set(
						$current,
						"defaultValue",
						lv_defaultValue_4_0,
						"fr.cea.nabla.Nabla.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getScalarVarDefinitionAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleVarGroupDeclaration
entryRuleVarGroupDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarGroupDeclarationRule()); }
	iv_ruleVarGroupDeclaration=ruleVarGroupDeclaration
	{ $current=$iv_ruleVarGroupDeclaration.current; }
	EOF;

// Rule VarGroupDeclaration
ruleVarGroupDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getVarGroupDeclarationAccess().getTypeBasicTypeEnumRuleCall_0_0());
				}
				lv_type_0_0=ruleBasicType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarGroupDeclarationRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"fr.cea.nabla.Nabla.BasicType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVarGroupDeclarationAccess().getVariablesVarParserRuleCall_1_0());
				}
				lv_variables_1_0=ruleVar
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarGroupDeclarationRule());
					}
					add(
						$current,
						"variables",
						lv_variables_1_0,
						"fr.cea.nabla.Nabla.Var");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getVarGroupDeclarationAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVarGroupDeclarationAccess().getVariablesVarParserRuleCall_2_1_0());
					}
					lv_variables_3_0=ruleVar
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVarGroupDeclarationRule());
						}
						add(
							$current,
							"variables",
							lv_variables_3_0,
							"fr.cea.nabla.Nabla.Var");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getVarGroupDeclarationAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleVar
entryRuleVar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarRule()); }
	iv_ruleVar=ruleVar
	{ $current=$iv_ruleVar.current; }
	EOF;

// Rule Var
ruleVar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getVarAccess().getScalarVarParserRuleCall_0());
		}
		this_ScalarVar_0=ruleScalarVar
		{
			$current = $this_ScalarVar_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getVarAccess().getArrayVarParserRuleCall_1());
		}
		this_ArrayVar_1=ruleArrayVar
		{
			$current = $this_ArrayVar_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleScalarVar
entryRuleScalarVar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScalarVarRule()); }
	iv_ruleScalarVar=ruleScalarVar
	{ $current=$iv_ruleScalarVar.current; }
	EOF;

// Rule ScalarVar
ruleScalarVar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getScalarVarAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getScalarVarRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"fr.cea.nabla.Nabla.ID");
			}
		)
	)
;

// Entry rule entryRuleArrayVar
entryRuleArrayVar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayVarRule()); }
	iv_ruleArrayVar=ruleArrayVar
	{ $current=$iv_ruleArrayVar.current; }
	EOF;

// Rule ArrayVar
ruleArrayVar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getArrayVarAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArrayVarRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"fr.cea.nabla.Nabla.ID");
				}
			)
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getArrayVarAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArrayVarRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getArrayVarAccess().getDimensionsConnectivityCrossReference_2_0());
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getArrayVarAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getArrayVarRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getArrayVarAccess().getDimensionsConnectivityCrossReference_3_1_0());
					}
				)
			)
		)*
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getArrayVarAccess().getRightSquareBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleConnectivity
entryRuleConnectivity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConnectivityRule()); }
	iv_ruleConnectivity=ruleConnectivity
	{ $current=$iv_ruleConnectivity.current; }
	EOF;

// Rule Connectivity
ruleConnectivity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getConnectivityAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConnectivityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"fr.cea.nabla.Nabla.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getConnectivityAccess().getColonKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getConnectivityAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getConnectivityAccess().getInTypesItemTypeEnumRuleCall_3_0_0_0());
						}
						lv_inTypes_3_0=ruleItemType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConnectivityRule());
							}
							add(
								$current,
								"inTypes",
								lv_inTypes_3_0,
								"fr.cea.nabla.Nabla.ItemType");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4=','
					{
						newLeafNode(otherlv_4, grammarAccess.getConnectivityAccess().getCommaKeyword_3_0_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getConnectivityAccess().getInTypesItemTypeEnumRuleCall_3_0_1_1_0());
							}
							lv_inTypes_5_0=ruleItemType
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getConnectivityRule());
								}
								add(
									$current,
									"inTypes",
									lv_inTypes_5_0,
									"fr.cea.nabla.Nabla.ItemType");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
			    |
			otherlv_6='\u2205'
			{
				newLeafNode(otherlv_6, grammarAccess.getConnectivityAccess().getEmptySetKeyword_3_1());
			}
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getConnectivityAccess().getRightParenthesisKeyword_4());
		}
		otherlv_8='\u2192'
		{
			newLeafNode(otherlv_8, grammarAccess.getConnectivityAccess().getRightwardsArrowKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConnectivityAccess().getReturnTypeItemArgTypeParserRuleCall_6_0());
				}
				lv_returnType_9_0=ruleItemArgType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConnectivityRule());
					}
					set(
						$current,
						"returnType",
						lv_returnType_9_0,
						"fr.cea.nabla.Nabla.ItemArgType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10=';'
		{
			newLeafNode(otherlv_10, grammarAccess.getConnectivityAccess().getSemicolonKeyword_7());
		}
	)
;

// Entry rule entryRuleItemArgType
entryRuleItemArgType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getItemArgTypeRule()); }
	iv_ruleItemArgType=ruleItemArgType
	{ $current=$iv_ruleItemArgType.current; }
	EOF;

// Rule ItemArgType
ruleItemArgType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_multiple_0_0='{'
					{
						newLeafNode(lv_multiple_0_0, grammarAccess.getItemArgTypeAccess().getMultipleLeftCurlyBracketKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getItemArgTypeRule());
						}
						setWithLastConsumed($current, "multiple", true, "{");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getItemArgTypeAccess().getTypeItemTypeEnumRuleCall_0_1_0());
					}
					lv_type_1_0=ruleItemType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getItemArgTypeRule());
						}
						set(
							$current,
							"type",
							lv_type_1_0,
							"fr.cea.nabla.Nabla.ItemType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2='}'
			{
				newLeafNode(otherlv_2, grammarAccess.getItemArgTypeAccess().getRightCurlyBracketKeyword_0_2());
			}
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getItemArgTypeAccess().getTypeItemTypeEnumRuleCall_1_0());
				}
				lv_type_3_0=ruleItemType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getItemArgTypeRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"fr.cea.nabla.Nabla.ItemType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFunctionAccess().getFunctionAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"fr.cea.nabla.Nabla.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getFunctionAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getArgGroupsFunctionArgParserRuleCall_3_0());
				}
				lv_argGroups_3_0=ruleFunctionArg
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					add(
						$current,
						"argGroups",
						lv_argGroups_3_0,
						"fr.cea.nabla.Nabla.FunctionArg");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getFunctionAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionAccess().getArgGroupsFunctionArgParserRuleCall_4_1_0());
					}
					lv_argGroups_5_0=ruleFunctionArg
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionRule());
						}
						add(
							$current,
							"argGroups",
							lv_argGroups_5_0,
							"fr.cea.nabla.Nabla.FunctionArg");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getFunctionAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleFunctionArg
entryRuleFunctionArg returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionArgRule()); }
	iv_ruleFunctionArg=ruleFunctionArg
	{ $current=$iv_ruleFunctionArg.current; }
	EOF;

// Rule FunctionArg
ruleFunctionArg returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionArgAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionArgAccess().getInTypesBasicTypeEnumRuleCall_1_0_0_0());
						}
						lv_inTypes_1_0=ruleBasicType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionArgRule());
							}
							add(
								$current,
								"inTypes",
								lv_inTypes_1_0,
								"fr.cea.nabla.Nabla.BasicType");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_2=','
					{
						newLeafNode(otherlv_2, grammarAccess.getFunctionArgAccess().getCommaKeyword_1_0_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getFunctionArgAccess().getInTypesBasicTypeEnumRuleCall_1_0_1_1_0());
							}
							lv_inTypes_3_0=ruleBasicType
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getFunctionArgRule());
								}
								add(
									$current,
									"inTypes",
									lv_inTypes_3_0,
									"fr.cea.nabla.Nabla.BasicType");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
			    |
			otherlv_4='\u2205'
			{
				newLeafNode(otherlv_4, grammarAccess.getFunctionArgAccess().getEmptySetKeyword_1_1());
			}
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getFunctionArgAccess().getRightParenthesisKeyword_2());
		}
		otherlv_6='\u2192'
		{
			newLeafNode(otherlv_6, grammarAccess.getFunctionArgAccess().getRightwardsArrowKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionArgAccess().getReturnTypeBasicTypeEnumRuleCall_4_0());
				}
				lv_returnType_7_0=ruleBasicType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionArgRule());
					}
					set(
						$current,
						"returnType",
						lv_returnType_7_0,
						"fr.cea.nabla.Nabla.BasicType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleReduction
entryRuleReduction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReductionRule()); }
	iv_ruleReduction=ruleReduction
	{ $current=$iv_ruleReduction.current; }
	EOF;

// Rule Reduction
ruleReduction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getReductionAccess().getReductionAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getReductionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReductionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"fr.cea.nabla.Nabla.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getReductionAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReductionAccess().getArgGroupsReductionArgParserRuleCall_3_0());
				}
				lv_argGroups_3_0=ruleReductionArg
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReductionRule());
					}
					add(
						$current,
						"argGroups",
						lv_argGroups_3_0,
						"fr.cea.nabla.Nabla.ReductionArg");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getReductionAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getReductionAccess().getArgGroupsReductionArgParserRuleCall_4_1_0());
					}
					lv_argGroups_5_0=ruleReductionArg
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReductionRule());
						}
						add(
							$current,
							"argGroups",
							lv_argGroups_5_0,
							"fr.cea.nabla.Nabla.ReductionArg");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getReductionAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleReductionArg
entryRuleReductionArg returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReductionArgRule()); }
	iv_ruleReductionArg=ruleReductionArg
	{ $current=$iv_ruleReductionArg.current; }
	EOF;

// Rule ReductionArg
ruleReductionArg returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getReductionArgAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReductionArgAccess().getSeedExpressionParserRuleCall_1_0());
				}
				lv_seed_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReductionArgRule());
					}
					set(
						$current,
						"seed",
						lv_seed_1_0,
						"fr.cea.nabla.Nabla.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getReductionArgAccess().getCommaKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReductionArgAccess().getCollectionTypeBasicTypeEnumRuleCall_3_0());
				}
				lv_collectionType_3_0=ruleBasicType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReductionArgRule());
					}
					set(
						$current,
						"collectionType",
						lv_collectionType_3_0,
						"fr.cea.nabla.Nabla.BasicType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getReductionArgAccess().getRightParenthesisKeyword_4());
		}
		otherlv_5='\u2192'
		{
			newLeafNode(otherlv_5, grammarAccess.getReductionArgAccess().getRightwardsArrowKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReductionArgAccess().getReturnTypeBasicTypeEnumRuleCall_6_0());
				}
				lv_returnType_6_0=ruleBasicType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReductionArgRule());
					}
					set(
						$current,
						"returnType",
						lv_returnType_6_0,
						"fr.cea.nabla.Nabla.BasicType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExpressionAccess().getOrParserRuleCall());
	}
	this_Or_0=ruleOr
	{
		$current = $this_Or_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleOr
entryRuleOr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrRule()); }
	iv_ruleOr=ruleOr
	{ $current=$iv_ruleOr.current; }
	EOF;

// Rule Or
ruleOr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrAccess().getAndParserRuleCall_0());
		}
		this_And_0=ruleAnd
		{
			$current = $this_And_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getOrAccess().getOrLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_op_2_0='||'
					{
						newLeafNode(lv_op_2_0, grammarAccess.getOrAccess().getOpVerticalLineVerticalLineKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOrRule());
						}
						setWithLastConsumed($current, "op", lv_op_2_0, "||");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"fr.cea.nabla.Nabla.And");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAnd
entryRuleAnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndRule()); }
	iv_ruleAnd=ruleAnd
	{ $current=$iv_ruleAnd.current; }
	EOF;

// Rule And
ruleAnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndAccess().getEqualityParserRuleCall_0());
		}
		this_Equality_0=ruleEquality
		{
			$current = $this_Equality_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAndAccess().getAndLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_op_2_0='&&'
					{
						newLeafNode(lv_op_2_0, grammarAccess.getAndAccess().getOpAmpersandAmpersandKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAndRule());
						}
						setWithLastConsumed($current, "op", lv_op_2_0, "&&");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAndAccess().getRightEqualityParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleEquality
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"fr.cea.nabla.Nabla.Equality");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEquality
entryRuleEquality returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualityRule()); }
	iv_ruleEquality=ruleEquality
	{ $current=$iv_ruleEquality.current; }
	EOF;

// Rule Equality
ruleEquality returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0());
		}
		this_Comparison_0=ruleComparison
		{
			$current = $this_Comparison_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1='=='
						{
							newLeafNode(lv_op_2_1, grammarAccess.getEqualityAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEqualityRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2='!='
						{
							newLeafNode(lv_op_2_2, grammarAccess.getEqualityAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEqualityRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleComparison
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"fr.cea.nabla.Nabla.Comparison");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleComparison
entryRuleComparison returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparisonRule()); }
	iv_ruleComparison=ruleComparison
	{ $current=$iv_ruleComparison.current; }
	EOF;

// Rule Comparison
ruleComparison returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0());
		}
		this_PlusOrMinus_0=rulePlusOrMinus
		{
			$current = $this_PlusOrMinus_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1='>='
						{
							newLeafNode(lv_op_2_1, grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2='<='
						{
							newLeafNode(lv_op_2_2, grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
						    |
						lv_op_2_3='>'
						{
							newLeafNode(lv_op_2_3, grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_3, null);
						}
						    |
						lv_op_2_4='<'
						{
							newLeafNode(lv_op_2_4, grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_4, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePlusOrMinus
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComparisonRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"fr.cea.nabla.Nabla.PlusOrMinus");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePlusOrMinus
entryRulePlusOrMinus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlusOrMinusRule()); }
	iv_rulePlusOrMinus=rulePlusOrMinus
	{ $current=$iv_rulePlusOrMinus.current; }
	EOF;

// Rule PlusOrMinus
rulePlusOrMinus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0());
		}
		this_MulOrDiv_0=ruleMulOrDiv
		{
			$current = $this_MulOrDiv_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							lv_op_2_0='+'
							{
								newLeafNode(lv_op_2_0, grammarAccess.getPlusOrMinusAccess().getOpPlusSignKeyword_1_0_0_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getPlusOrMinusRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_0, "+");
							}
						)
					)
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0(),
								$current);
						}
					)
					(
						(
							lv_op_4_0='-'
							{
								newLeafNode(lv_op_4_0, grammarAccess.getPlusOrMinusAccess().getOpHyphenMinusKeyword_1_0_1_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getPlusOrMinusRule());
								}
								setWithLastConsumed($current, "op", lv_op_4_0, "-");
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPlusOrMinusAccess().getRightMulOrDivParserRuleCall_1_1_0());
					}
					lv_right_5_0=ruleMulOrDiv
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPlusOrMinusRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"fr.cea.nabla.Nabla.MulOrDiv");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMulOrDiv
entryRuleMulOrDiv returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMulOrDivRule()); }
	iv_ruleMulOrDiv=ruleMulOrDiv
	{ $current=$iv_ruleMulOrDiv.current; }
	EOF;

// Rule MulOrDiv
ruleMulOrDiv returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMulOrDivAccess().getPrimaryParserRuleCall_0());
		}
		this_Primary_0=rulePrimary
		{
			$current = $this_Primary_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getMulOrDivAccess().getMulOrDivLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1='*'
						{
							newLeafNode(lv_op_2_1, grammarAccess.getMulOrDivAccess().getOpAsteriskKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMulOrDivRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2='/'
						{
							newLeafNode(lv_op_2_2, grammarAccess.getMulOrDivAccess().getOpSolidusKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMulOrDivRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMulOrDivAccess().getRightPrimaryParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMulOrDivRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"fr.cea.nabla.Nabla.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePrimary
entryRulePrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	iv_rulePrimary=rulePrimary
	{ $current=$iv_rulePrimary.current; }
	EOF;

// Rule Primary
rulePrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryAccess().getParenthesisAction_0_0(),
						$current);
				}
			)
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryAccess().getExpressionExpressionParserRuleCall_0_2_0());
					}
					lv_expression_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryRule());
						}
						set(
							$current,
							"expression",
							lv_expression_2_0,
							"fr.cea.nabla.Nabla.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_3());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryAccess().getUnaryMinusAction_1_0(),
						$current);
				}
			)
			otherlv_5='-'
			{
				newLeafNode(otherlv_5, grammarAccess.getPrimaryAccess().getHyphenMinusKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0());
					}
					lv_expression_6_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryRule());
						}
						set(
							$current,
							"expression",
							lv_expression_6_0,
							"fr.cea.nabla.Nabla.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryAccess().getNotAction_2_0(),
						$current);
				}
			)
			otherlv_8='!'
			{
				newLeafNode(otherlv_8, grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_2_2_0());
					}
					lv_expression_9_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryRule());
						}
						set(
							$current,
							"expression",
							lv_expression_9_0,
							"fr.cea.nabla.Nabla.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_3());
		}
		this_Atomic_10=ruleAtomic
		{
			$current = $this_Atomic_10.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAtomic
entryRuleAtomic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomicRule()); }
	iv_ruleAtomic=ruleAtomic
	{ $current=$iv_ruleAtomic.current; }
	EOF;

// Rule Atomic
ruleAtomic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getIntConstantAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_INT
					{
						newLeafNode(lv_value_1_0, grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getRealConstantAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_value_3_0=RULE_REAL
					{
						newLeafNode(lv_value_3_0, grammarAccess.getAtomicAccess().getValueREALTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_3_0,
							"fr.cea.nabla.Nabla.REAL");
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getAtomicAccess().getReal2ConstantParserRuleCall_2());
		}
		this_Real2Constant_4=ruleReal2Constant
		{
			$current = $this_Real2Constant_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAtomicAccess().getReal3ConstantParserRuleCall_3());
		}
		this_Real3Constant_5=ruleReal3Constant
		{
			$current = $this_Real3Constant_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getBoolConstantAction_4_0(),
						$current);
				}
			)
			(
				(
					(
						lv_value_7_0='true'
						{
							newLeafNode(lv_value_7_0, grammarAccess.getAtomicAccess().getValueTrueKeyword_4_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAtomicRule());
							}
							setWithLastConsumed($current, "value", true, "true");
						}
					)
				)
				    |
				otherlv_8='false'
				{
					newLeafNode(otherlv_8, grammarAccess.getAtomicAccess().getFalseKeyword_4_1_1());
				}
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getReal2x2ConstantAction_5_0(),
						$current);
				}
			)
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getAtomicAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomicAccess().getXReal2ConstantParserRuleCall_5_2_0());
					}
					lv_x_11_0=ruleReal2Constant
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomicRule());
						}
						set(
							$current,
							"x",
							lv_x_11_0,
							"fr.cea.nabla.Nabla.Real2Constant");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_12=','
			{
				newLeafNode(otherlv_12, grammarAccess.getAtomicAccess().getCommaKeyword_5_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomicAccess().getYReal2ConstantParserRuleCall_5_4_0());
					}
					lv_y_13_0=ruleReal2Constant
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomicRule());
						}
						set(
							$current,
							"y",
							lv_y_13_0,
							"fr.cea.nabla.Nabla.Real2Constant");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getAtomicAccess().getRightCurlyBracketKeyword_5_5());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getReal3x3ConstantAction_6_0(),
						$current);
				}
			)
			otherlv_16='{'
			{
				newLeafNode(otherlv_16, grammarAccess.getAtomicAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomicAccess().getXReal3ConstantParserRuleCall_6_2_0());
					}
					lv_x_17_0=ruleReal3Constant
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomicRule());
						}
						set(
							$current,
							"x",
							lv_x_17_0,
							"fr.cea.nabla.Nabla.Real3Constant");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_18=','
			{
				newLeafNode(otherlv_18, grammarAccess.getAtomicAccess().getCommaKeyword_6_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomicAccess().getYReal3ConstantParserRuleCall_6_4_0());
					}
					lv_y_19_0=ruleReal3Constant
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomicRule());
						}
						set(
							$current,
							"y",
							lv_y_19_0,
							"fr.cea.nabla.Nabla.Real3Constant");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_20=','
			{
				newLeafNode(otherlv_20, grammarAccess.getAtomicAccess().getCommaKeyword_6_5());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomicAccess().getZReal3ConstantParserRuleCall_6_6_0());
					}
					lv_z_21_0=ruleReal3Constant
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomicRule());
						}
						set(
							$current,
							"z",
							lv_z_21_0,
							"fr.cea.nabla.Nabla.Real3Constant");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_22='}'
			{
				newLeafNode(otherlv_22, grammarAccess.getAtomicAccess().getRightCurlyBracketKeyword_6_7());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getRealXCompactConstantAction_7_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomicAccess().getTypeBasicTypeEnumRuleCall_7_1_0());
					}
					lv_type_24_0=ruleBasicType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomicRule());
						}
						set(
							$current,
							"type",
							lv_type_24_0,
							"fr.cea.nabla.Nabla.BasicType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_25='('
			{
				newLeafNode(otherlv_25, grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_7_2());
			}
			(
				(
					lv_value_26_0=RULE_REAL
					{
						newLeafNode(lv_value_26_0, grammarAccess.getAtomicAccess().getValueREALTerminalRuleCall_7_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_26_0,
							"fr.cea.nabla.Nabla.REAL");
					}
				)
			)
			otherlv_27=')'
			{
				newLeafNode(otherlv_27, grammarAccess.getAtomicAccess().getRightParenthesisKeyword_7_4());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getMinConstantAction_8_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomicAccess().getTypeBasicTypeEnumRuleCall_8_1_0());
					}
					lv_type_29_0=ruleBasicType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomicRule());
						}
						set(
							$current,
							"type",
							lv_type_29_0,
							"fr.cea.nabla.Nabla.BasicType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_30='.MinValue'
			{
				newLeafNode(otherlv_30, grammarAccess.getAtomicAccess().getMinValueKeyword_8_2());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getMaxConstantAction_9_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomicAccess().getTypeBasicTypeEnumRuleCall_9_1_0());
					}
					lv_type_32_0=ruleBasicType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomicRule());
						}
						set(
							$current,
							"type",
							lv_type_32_0,
							"fr.cea.nabla.Nabla.BasicType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_33='.MaxValue'
			{
				newLeafNode(otherlv_33, grammarAccess.getAtomicAccess().getMaxValueKeyword_9_2());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getFunctionCallAction_10_0(),
						$current);
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getAtomicAccess().getFunctionFunctionCrossReference_10_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_36='('
			{
				newLeafNode(otherlv_36, grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_10_2());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getAtomicAccess().getArgsExpressionParserRuleCall_10_3_0_0());
						}
						lv_args_37_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAtomicRule());
							}
							add(
								$current,
								"args",
								lv_args_37_0,
								"fr.cea.nabla.Nabla.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_38=','
					{
						newLeafNode(otherlv_38, grammarAccess.getAtomicAccess().getCommaKeyword_10_3_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getAtomicAccess().getArgsExpressionParserRuleCall_10_3_1_1_0());
							}
							lv_args_39_0=ruleExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getAtomicRule());
								}
								add(
									$current,
									"args",
									lv_args_39_0,
									"fr.cea.nabla.Nabla.Expression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_40=')'
			{
				newLeafNode(otherlv_40, grammarAccess.getAtomicAccess().getRightParenthesisKeyword_10_4());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getReductionCallAction_11_0(),
						$current);
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getAtomicAccess().getReductionReductionCrossReference_11_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_43='{'
			{
				newLeafNode(otherlv_43, grammarAccess.getAtomicAccess().getLeftCurlyBracketKeyword_11_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomicAccess().getIteratorSpaceIteratorParserRuleCall_11_3_0());
					}
					lv_iterator_44_0=ruleSpaceIterator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomicRule());
						}
						set(
							$current,
							"iterator",
							lv_iterator_44_0,
							"fr.cea.nabla.Nabla.SpaceIterator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_45='}'
			{
				newLeafNode(otherlv_45, grammarAccess.getAtomicAccess().getRightCurlyBracketKeyword_11_4());
			}
			otherlv_46='('
			{
				newLeafNode(otherlv_46, grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_11_5());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomicAccess().getArgExpressionParserRuleCall_11_6_0());
					}
					lv_arg_47_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomicRule());
						}
						set(
							$current,
							"arg",
							lv_arg_47_0,
							"fr.cea.nabla.Nabla.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_48=')'
			{
				newLeafNode(otherlv_48, grammarAccess.getAtomicAccess().getRightParenthesisKeyword_11_7());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getAtomicAccess().getVarRefParserRuleCall_12());
		}
		this_VarRef_49=ruleVarRef
		{
			$current = $this_VarRef_49.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleReal2Constant
entryRuleReal2Constant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReal2ConstantRule()); }
	iv_ruleReal2Constant=ruleReal2Constant
	{ $current=$iv_ruleReal2Constant.current; }
	EOF;

// Rule Real2Constant
ruleReal2Constant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getReal2ConstantAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				lv_x_1_0=RULE_REAL
				{
					newLeafNode(lv_x_1_0, grammarAccess.getReal2ConstantAccess().getXREALTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReal2ConstantRule());
					}
					setWithLastConsumed(
						$current,
						"x",
						lv_x_1_0,
						"fr.cea.nabla.Nabla.REAL");
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getReal2ConstantAccess().getCommaKeyword_2());
		}
		(
			(
				lv_y_3_0=RULE_REAL
				{
					newLeafNode(lv_y_3_0, grammarAccess.getReal2ConstantAccess().getYREALTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReal2ConstantRule());
					}
					setWithLastConsumed(
						$current,
						"y",
						lv_y_3_0,
						"fr.cea.nabla.Nabla.REAL");
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getReal2ConstantAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleReal3Constant
entryRuleReal3Constant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReal3ConstantRule()); }
	iv_ruleReal3Constant=ruleReal3Constant
	{ $current=$iv_ruleReal3Constant.current; }
	EOF;

// Rule Real3Constant
ruleReal3Constant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getReal3ConstantAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				lv_x_1_0=RULE_REAL
				{
					newLeafNode(lv_x_1_0, grammarAccess.getReal3ConstantAccess().getXREALTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReal3ConstantRule());
					}
					setWithLastConsumed(
						$current,
						"x",
						lv_x_1_0,
						"fr.cea.nabla.Nabla.REAL");
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getReal3ConstantAccess().getCommaKeyword_2());
		}
		(
			(
				lv_y_3_0=RULE_REAL
				{
					newLeafNode(lv_y_3_0, grammarAccess.getReal3ConstantAccess().getYREALTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReal3ConstantRule());
					}
					setWithLastConsumed(
						$current,
						"y",
						lv_y_3_0,
						"fr.cea.nabla.Nabla.REAL");
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getReal3ConstantAccess().getCommaKeyword_4());
		}
		(
			(
				lv_z_5_0=RULE_REAL
				{
					newLeafNode(lv_z_5_0, grammarAccess.getReal3ConstantAccess().getZREALTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReal3ConstantRule());
					}
					setWithLastConsumed(
						$current,
						"z",
						lv_z_5_0,
						"fr.cea.nabla.Nabla.REAL");
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getReal3ConstantAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleVarRef
entryRuleVarRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarRefRule()); }
	iv_ruleVarRef=ruleVarRef
	{ $current=$iv_ruleVarRef.current; }
	EOF;

// Rule VarRef
ruleVarRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVarRefRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getVarRefAccess().getVariableVarCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='{'
			{
				newLeafNode(otherlv_1, grammarAccess.getVarRefAccess().getLeftCurlyBracketKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVarRefAccess().getSpaceIteratorsIteratorRangeOrRefParserRuleCall_1_1_0());
					}
					lv_spaceIterators_2_0=ruleIteratorRangeOrRef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVarRefRule());
						}
						add(
							$current,
							"spaceIterators",
							lv_spaceIterators_2_0,
							"fr.cea.nabla.Nabla.IteratorRangeOrRef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getVarRefAccess().getCommaKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getVarRefAccess().getSpaceIteratorsIteratorRangeOrRefParserRuleCall_1_2_1_0());
						}
						lv_spaceIterators_4_0=ruleIteratorRangeOrRef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVarRefRule());
							}
							add(
								$current,
								"spaceIterators",
								lv_spaceIterators_4_0,
								"fr.cea.nabla.Nabla.IteratorRangeOrRef");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5='}'
			{
				newLeafNode(otherlv_5, grammarAccess.getVarRefAccess().getRightCurlyBracketKeyword_1_3());
			}
		)?
		(
			otherlv_6='^{'
			{
				newLeafNode(otherlv_6, grammarAccess.getVarRefAccess().getCircumflexAccentLeftCurlyBracketKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVarRefAccess().getTimeIteratorTimeIteratorRefParserRuleCall_2_1_0());
					}
					lv_timeIterator_7_0=ruleTimeIteratorRef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVarRefRule());
						}
						set(
							$current,
							"timeIterator",
							lv_timeIterator_7_0,
							"fr.cea.nabla.Nabla.TimeIteratorRef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getVarRefAccess().getRightCurlyBracketKeyword_2_2());
			}
		)?
		(
			otherlv_9='.'
			{
				newLeafNode(otherlv_9, grammarAccess.getVarRefAccess().getFullStopKeyword_3_0());
			}
			(
				(
					lv_fields_10_0=RULE_ID
					{
						newLeafNode(lv_fields_10_0, grammarAccess.getVarRefAccess().getFieldsIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVarRefRule());
						}
						addWithLastConsumed(
							$current,
							"fields",
							lv_fields_10_0,
							"fr.cea.nabla.Nabla.ID");
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleIteratorRangeOrRef
entryRuleIteratorRangeOrRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIteratorRangeOrRefRule()); }
	iv_ruleIteratorRangeOrRef=ruleIteratorRangeOrRef
	{ $current=$iv_ruleIteratorRangeOrRef.current; }
	EOF;

// Rule IteratorRangeOrRef
ruleIteratorRangeOrRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getIteratorRangeOrRefAccess().getSpaceIteratorRangeParserRuleCall_0());
		}
		this_SpaceIteratorRange_0=ruleSpaceIteratorRange
		{
			$current = $this_SpaceIteratorRange_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getIteratorRangeOrRefAccess().getSpaceIteratorRefParserRuleCall_1());
		}
		this_SpaceIteratorRef_1=ruleSpaceIteratorRef
		{
			$current = $this_SpaceIteratorRef_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTimeIteratorRef
entryRuleTimeIteratorRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeIteratorRefRule()); }
	iv_ruleTimeIteratorRef=ruleTimeIteratorRef
	{ $current=$iv_ruleTimeIteratorRef.current; }
	EOF;

// Rule TimeIteratorRef
ruleTimeIteratorRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTimeIteratorRefRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getTimeIteratorRefAccess().getIteratorTimeIteratorCrossReference_0_0());
				}
			)
		)
		(
			(
				(
					(
						lv_init_1_0='='
						{
							newLeafNode(lv_init_1_0, grammarAccess.getTimeIteratorRefAccess().getInitEqualsSignKeyword_1_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTimeIteratorRefRule());
							}
							setWithLastConsumed($current, "init", true, "=");
						}
					)
				)
				    |
				(
					(
						lv_next_2_0='+'
						{
							newLeafNode(lv_next_2_0, grammarAccess.getTimeIteratorRefAccess().getNextPlusSignKeyword_1_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTimeIteratorRefRule());
							}
							setWithLastConsumed($current, "next", true, "+");
						}
					)
				)
			)
			(
				(
					lv_value_3_0=RULE_INT
					{
						newLeafNode(lv_value_3_0, grammarAccess.getTimeIteratorRefAccess().getValueINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTimeIteratorRefRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); }
	iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard
	{ $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }
	EOF;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0());
		}
		this_QualifiedName_0=ruleQualifiedName
		{
			$current.merge(this_QualifiedName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='.*'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1());
			}
		)?
	)
;

// Rule BasicType
ruleBasicType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='\u2115'
			{
				$current = grammarAccess.getBasicTypeAccess().getIntEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBasicTypeAccess().getIntEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='\u211D'
			{
				$current = grammarAccess.getBasicTypeAccess().getRealEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBasicTypeAccess().getRealEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='\u211D\u00B2'
			{
				$current = grammarAccess.getBasicTypeAccess().getReal2EnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getBasicTypeAccess().getReal2EnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='\u211D\u00B2\u02E3\u00B2'
			{
				$current = grammarAccess.getBasicTypeAccess().getReal2x2EnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getBasicTypeAccess().getReal2x2EnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='\u211D\u00B3'
			{
				$current = grammarAccess.getBasicTypeAccess().getReal3EnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getBasicTypeAccess().getReal3EnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='\u211D\u00B3\u02E3\u00B3'
			{
				$current = grammarAccess.getBasicTypeAccess().getReal3x3EnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getBasicTypeAccess().getReal3x3EnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='\u213E'
			{
				$current = grammarAccess.getBasicTypeAccess().getBoolEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getBasicTypeAccess().getBoolEnumLiteralDeclaration_6());
			}
		)
	)
;

// Rule ItemType
ruleItemType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='node'
			{
				$current = grammarAccess.getItemTypeAccess().getNodeEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getItemTypeAccess().getNodeEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='cell'
			{
				$current = grammarAccess.getItemTypeAccess().getCellEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getItemTypeAccess().getCellEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='face'
			{
				$current = grammarAccess.getItemTypeAccess().getFaceEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getItemTypeAccess().getFaceEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'\u0394'..'\u03F2'|'\u220F'..'\u221C'|'_') ('a'..'z'|'A'..'Z'|'\u0394'..'\u03F2'|'0'..'9'|'\u2211'|'_')*;

RULE_REAL : ('0'..'9')+ '.' ('0'..'9')+ ('e' ('+'|'-') ('0'..'9')+)?;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
