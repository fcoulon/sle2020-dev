package fr.cea.nabla.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.cea.nabla.services.NablaGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalNablaParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_INT", "RULE_REAL", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'\\u2205'", "'=='", "'!='", "'>='", "'<='", "'>'", "'<'", "'*'", "'/'", "'false'", "'\\u2115'", "'\\u211D'", "'\\u211D\\u00B2'", "'\\u211D\\u00B2\\u02E3\\u00B2'", "'\\u211D\\u00B3'", "'\\u211D\\u00B3\\u02E3\\u00B3'", "'\\u213E'", "'node'", "'cell'", "'face'", "'module'", "';'", "'with'", "'connectivities'", "'{'", "'}'", "'functions'", "':'", "'\\u2200'", "','", "'='", "'if'", "'('", "')'", "'else'", "'\\u2208'", "'['", "']'", "'\\u2192'", "'-'", "'!'", "'.MinValue'", "'.MaxValue'", "'^{'", "'.'", "'.*'", "'\\u25C4'", "'\\u25BA'", "'const'", "'||'", "'&&'", "'+'", "'true'"
    };
    public static final int T__50=50;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__59=59;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__55=55;
    public static final int T__12=12;
    public static final int T__56=56;
    public static final int T__13=13;
    public static final int T__57=57;
    public static final int T__14=14;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=4;
    public static final int RULE_REAL=6;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int RULE_INT=5;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int RULE_ML_COMMENT=8;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__20=20;
    public static final int T__64=64;
    public static final int T__21=21;
    public static final int RULE_STRING=7;
    public static final int RULE_SL_COMMENT=9;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int EOF=-1;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int RULE_WS=10;
    public static final int RULE_ANY_OTHER=11;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;

    // delegates
    // delegators


        public InternalNablaParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalNablaParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalNablaParser.tokenNames; }
    public String getGrammarFileName() { return "InternalNabla.g"; }


    	private NablaGrammarAccess grammarAccess;

    	public void setGrammarAccess(NablaGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		return tokenName;
    	}



    // $ANTLR start "entryRuleNablaModule"
    // InternalNabla.g:54:1: entryRuleNablaModule : ruleNablaModule EOF ;
    public final void entryRuleNablaModule() throws RecognitionException {
        try {
            // InternalNabla.g:55:1: ( ruleNablaModule EOF )
            // InternalNabla.g:56:1: ruleNablaModule EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNablaModuleRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleNablaModule();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNablaModuleRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNablaModule"


    // $ANTLR start "ruleNablaModule"
    // InternalNabla.g:63:1: ruleNablaModule : ( ( rule__NablaModule__Group__0 ) ) ;
    public final void ruleNablaModule() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:67:2: ( ( ( rule__NablaModule__Group__0 ) ) )
            // InternalNabla.g:68:2: ( ( rule__NablaModule__Group__0 ) )
            {
            // InternalNabla.g:68:2: ( ( rule__NablaModule__Group__0 ) )
            // InternalNabla.g:69:3: ( rule__NablaModule__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNablaModuleAccess().getGroup()); 
            }
            // InternalNabla.g:70:3: ( rule__NablaModule__Group__0 )
            // InternalNabla.g:70:4: rule__NablaModule__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NablaModule__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNablaModuleAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNablaModule"


    // $ANTLR start "entryRuleImport"
    // InternalNabla.g:79:1: entryRuleImport : ruleImport EOF ;
    public final void entryRuleImport() throws RecognitionException {
        try {
            // InternalNabla.g:80:1: ( ruleImport EOF )
            // InternalNabla.g:81:1: ruleImport EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleImport();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleImport"


    // $ANTLR start "ruleImport"
    // InternalNabla.g:88:1: ruleImport : ( ( rule__Import__Group__0 ) ) ;
    public final void ruleImport() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:92:2: ( ( ( rule__Import__Group__0 ) ) )
            // InternalNabla.g:93:2: ( ( rule__Import__Group__0 ) )
            {
            // InternalNabla.g:93:2: ( ( rule__Import__Group__0 ) )
            // InternalNabla.g:94:3: ( rule__Import__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportAccess().getGroup()); 
            }
            // InternalNabla.g:95:3: ( rule__Import__Group__0 )
            // InternalNabla.g:95:4: rule__Import__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Import__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleImport"


    // $ANTLR start "entryRuleDeclarationBlock"
    // InternalNabla.g:104:1: entryRuleDeclarationBlock : ruleDeclarationBlock EOF ;
    public final void entryRuleDeclarationBlock() throws RecognitionException {
        try {
            // InternalNabla.g:105:1: ( ruleDeclarationBlock EOF )
            // InternalNabla.g:106:1: ruleDeclarationBlock EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationBlockRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDeclarationBlock"


    // $ANTLR start "ruleDeclarationBlock"
    // InternalNabla.g:113:1: ruleDeclarationBlock : ( ( rule__DeclarationBlock__Alternatives ) ) ;
    public final void ruleDeclarationBlock() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:117:2: ( ( ( rule__DeclarationBlock__Alternatives ) ) )
            // InternalNabla.g:118:2: ( ( rule__DeclarationBlock__Alternatives ) )
            {
            // InternalNabla.g:118:2: ( ( rule__DeclarationBlock__Alternatives ) )
            // InternalNabla.g:119:3: ( rule__DeclarationBlock__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationBlockAccess().getAlternatives()); 
            }
            // InternalNabla.g:120:3: ( rule__DeclarationBlock__Alternatives )
            // InternalNabla.g:120:4: rule__DeclarationBlock__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__DeclarationBlock__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationBlockAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDeclarationBlock"


    // $ANTLR start "entryRuleJob"
    // InternalNabla.g:129:1: entryRuleJob : ruleJob EOF ;
    public final void entryRuleJob() throws RecognitionException {
        try {
            // InternalNabla.g:130:1: ( ruleJob EOF )
            // InternalNabla.g:131:1: ruleJob EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleJob();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJob"


    // $ANTLR start "ruleJob"
    // InternalNabla.g:138:1: ruleJob : ( ( rule__Job__Alternatives ) ) ;
    public final void ruleJob() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:142:2: ( ( ( rule__Job__Alternatives ) ) )
            // InternalNabla.g:143:2: ( ( rule__Job__Alternatives ) )
            {
            // InternalNabla.g:143:2: ( ( rule__Job__Alternatives ) )
            // InternalNabla.g:144:3: ( rule__Job__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getAlternatives()); 
            }
            // InternalNabla.g:145:3: ( rule__Job__Alternatives )
            // InternalNabla.g:145:4: rule__Job__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Job__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJob"


    // $ANTLR start "entryRuleInstruction"
    // InternalNabla.g:154:1: entryRuleInstruction : ruleInstruction EOF ;
    public final void entryRuleInstruction() throws RecognitionException {
        try {
            // InternalNabla.g:155:1: ( ruleInstruction EOF )
            // InternalNabla.g:156:1: ruleInstruction EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleInstruction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInstruction"


    // $ANTLR start "ruleInstruction"
    // InternalNabla.g:163:1: ruleInstruction : ( ( rule__Instruction__Alternatives ) ) ;
    public final void ruleInstruction() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:167:2: ( ( ( rule__Instruction__Alternatives ) ) )
            // InternalNabla.g:168:2: ( ( rule__Instruction__Alternatives ) )
            {
            // InternalNabla.g:168:2: ( ( rule__Instruction__Alternatives ) )
            // InternalNabla.g:169:3: ( rule__Instruction__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getAlternatives()); 
            }
            // InternalNabla.g:170:3: ( rule__Instruction__Alternatives )
            // InternalNabla.g:170:4: rule__Instruction__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Instruction__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInstruction"


    // $ANTLR start "entryRuleTimeIterator"
    // InternalNabla.g:179:1: entryRuleTimeIterator : ruleTimeIterator EOF ;
    public final void entryRuleTimeIterator() throws RecognitionException {
        try {
            // InternalNabla.g:180:1: ( ruleTimeIterator EOF )
            // InternalNabla.g:181:1: ruleTimeIterator EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTimeIterator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTimeIterator"


    // $ANTLR start "ruleTimeIterator"
    // InternalNabla.g:188:1: ruleTimeIterator : ( ( rule__TimeIterator__Group__0 ) ) ;
    public final void ruleTimeIterator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:192:2: ( ( ( rule__TimeIterator__Group__0 ) ) )
            // InternalNabla.g:193:2: ( ( rule__TimeIterator__Group__0 ) )
            {
            // InternalNabla.g:193:2: ( ( rule__TimeIterator__Group__0 ) )
            // InternalNabla.g:194:3: ( rule__TimeIterator__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorAccess().getGroup()); 
            }
            // InternalNabla.g:195:3: ( rule__TimeIterator__Group__0 )
            // InternalNabla.g:195:4: rule__TimeIterator__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TimeIterator__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTimeIterator"


    // $ANTLR start "entryRuleSpaceIterator"
    // InternalNabla.g:204:1: entryRuleSpaceIterator : ruleSpaceIterator EOF ;
    public final void entryRuleSpaceIterator() throws RecognitionException {
        try {
            // InternalNabla.g:205:1: ( ruleSpaceIterator EOF )
            // InternalNabla.g:206:1: ruleSpaceIterator EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSpaceIterator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSpaceIterator"


    // $ANTLR start "ruleSpaceIterator"
    // InternalNabla.g:213:1: ruleSpaceIterator : ( ( rule__SpaceIterator__Group__0 ) ) ;
    public final void ruleSpaceIterator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:217:2: ( ( ( rule__SpaceIterator__Group__0 ) ) )
            // InternalNabla.g:218:2: ( ( rule__SpaceIterator__Group__0 ) )
            {
            // InternalNabla.g:218:2: ( ( rule__SpaceIterator__Group__0 ) )
            // InternalNabla.g:219:3: ( rule__SpaceIterator__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorAccess().getGroup()); 
            }
            // InternalNabla.g:220:3: ( rule__SpaceIterator__Group__0 )
            // InternalNabla.g:220:4: rule__SpaceIterator__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SpaceIterator__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSpaceIterator"


    // $ANTLR start "entryRuleSpaceIteratorRange"
    // InternalNabla.g:229:1: entryRuleSpaceIteratorRange : ruleSpaceIteratorRange EOF ;
    public final void entryRuleSpaceIteratorRange() throws RecognitionException {
        try {
            // InternalNabla.g:230:1: ( ruleSpaceIteratorRange EOF )
            // InternalNabla.g:231:1: ruleSpaceIteratorRange EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRangeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSpaceIteratorRange();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRangeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSpaceIteratorRange"


    // $ANTLR start "ruleSpaceIteratorRange"
    // InternalNabla.g:238:1: ruleSpaceIteratorRange : ( ( rule__SpaceIteratorRange__Group__0 ) ) ;
    public final void ruleSpaceIteratorRange() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:242:2: ( ( ( rule__SpaceIteratorRange__Group__0 ) ) )
            // InternalNabla.g:243:2: ( ( rule__SpaceIteratorRange__Group__0 ) )
            {
            // InternalNabla.g:243:2: ( ( rule__SpaceIteratorRange__Group__0 ) )
            // InternalNabla.g:244:3: ( rule__SpaceIteratorRange__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRangeAccess().getGroup()); 
            }
            // InternalNabla.g:245:3: ( rule__SpaceIteratorRange__Group__0 )
            // InternalNabla.g:245:4: rule__SpaceIteratorRange__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRange__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRangeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSpaceIteratorRange"


    // $ANTLR start "entryRuleSpaceIteratorRef"
    // InternalNabla.g:254:1: entryRuleSpaceIteratorRef : ruleSpaceIteratorRef EOF ;
    public final void entryRuleSpaceIteratorRef() throws RecognitionException {
        try {
            // InternalNabla.g:255:1: ( ruleSpaceIteratorRef EOF )
            // InternalNabla.g:256:1: ruleSpaceIteratorRef EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRefRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSpaceIteratorRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRefRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSpaceIteratorRef"


    // $ANTLR start "ruleSpaceIteratorRef"
    // InternalNabla.g:263:1: ruleSpaceIteratorRef : ( ( rule__SpaceIteratorRef__Alternatives ) ) ;
    public final void ruleSpaceIteratorRef() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:267:2: ( ( ( rule__SpaceIteratorRef__Alternatives ) ) )
            // InternalNabla.g:268:2: ( ( rule__SpaceIteratorRef__Alternatives ) )
            {
            // InternalNabla.g:268:2: ( ( rule__SpaceIteratorRef__Alternatives ) )
            // InternalNabla.g:269:3: ( rule__SpaceIteratorRef__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRefAccess().getAlternatives()); 
            }
            // InternalNabla.g:270:3: ( rule__SpaceIteratorRef__Alternatives )
            // InternalNabla.g:270:4: rule__SpaceIteratorRef__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRef__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRefAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSpaceIteratorRef"


    // $ANTLR start "entryRuleScalarVarDefinition"
    // InternalNabla.g:279:1: entryRuleScalarVarDefinition : ruleScalarVarDefinition EOF ;
    public final void entryRuleScalarVarDefinition() throws RecognitionException {
        try {
            // InternalNabla.g:280:1: ( ruleScalarVarDefinition EOF )
            // InternalNabla.g:281:1: ruleScalarVarDefinition EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleScalarVarDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarDefinitionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleScalarVarDefinition"


    // $ANTLR start "ruleScalarVarDefinition"
    // InternalNabla.g:288:1: ruleScalarVarDefinition : ( ( rule__ScalarVarDefinition__Group__0 ) ) ;
    public final void ruleScalarVarDefinition() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:292:2: ( ( ( rule__ScalarVarDefinition__Group__0 ) ) )
            // InternalNabla.g:293:2: ( ( rule__ScalarVarDefinition__Group__0 ) )
            {
            // InternalNabla.g:293:2: ( ( rule__ScalarVarDefinition__Group__0 ) )
            // InternalNabla.g:294:3: ( rule__ScalarVarDefinition__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarDefinitionAccess().getGroup()); 
            }
            // InternalNabla.g:295:3: ( rule__ScalarVarDefinition__Group__0 )
            // InternalNabla.g:295:4: rule__ScalarVarDefinition__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ScalarVarDefinition__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarDefinitionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleScalarVarDefinition"


    // $ANTLR start "entryRuleVarGroupDeclaration"
    // InternalNabla.g:304:1: entryRuleVarGroupDeclaration : ruleVarGroupDeclaration EOF ;
    public final void entryRuleVarGroupDeclaration() throws RecognitionException {
        try {
            // InternalNabla.g:305:1: ( ruleVarGroupDeclaration EOF )
            // InternalNabla.g:306:1: ruleVarGroupDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarGroupDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVarGroupDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarGroupDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVarGroupDeclaration"


    // $ANTLR start "ruleVarGroupDeclaration"
    // InternalNabla.g:313:1: ruleVarGroupDeclaration : ( ( rule__VarGroupDeclaration__Group__0 ) ) ;
    public final void ruleVarGroupDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:317:2: ( ( ( rule__VarGroupDeclaration__Group__0 ) ) )
            // InternalNabla.g:318:2: ( ( rule__VarGroupDeclaration__Group__0 ) )
            {
            // InternalNabla.g:318:2: ( ( rule__VarGroupDeclaration__Group__0 ) )
            // InternalNabla.g:319:3: ( rule__VarGroupDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarGroupDeclarationAccess().getGroup()); 
            }
            // InternalNabla.g:320:3: ( rule__VarGroupDeclaration__Group__0 )
            // InternalNabla.g:320:4: rule__VarGroupDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VarGroupDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarGroupDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVarGroupDeclaration"


    // $ANTLR start "entryRuleVar"
    // InternalNabla.g:329:1: entryRuleVar : ruleVar EOF ;
    public final void entryRuleVar() throws RecognitionException {
        try {
            // InternalNabla.g:330:1: ( ruleVar EOF )
            // InternalNabla.g:331:1: ruleVar EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVar();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVar"


    // $ANTLR start "ruleVar"
    // InternalNabla.g:338:1: ruleVar : ( ( rule__Var__Alternatives ) ) ;
    public final void ruleVar() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:342:2: ( ( ( rule__Var__Alternatives ) ) )
            // InternalNabla.g:343:2: ( ( rule__Var__Alternatives ) )
            {
            // InternalNabla.g:343:2: ( ( rule__Var__Alternatives ) )
            // InternalNabla.g:344:3: ( rule__Var__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarAccess().getAlternatives()); 
            }
            // InternalNabla.g:345:3: ( rule__Var__Alternatives )
            // InternalNabla.g:345:4: rule__Var__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Var__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVar"


    // $ANTLR start "entryRuleScalarVar"
    // InternalNabla.g:354:1: entryRuleScalarVar : ruleScalarVar EOF ;
    public final void entryRuleScalarVar() throws RecognitionException {
        try {
            // InternalNabla.g:355:1: ( ruleScalarVar EOF )
            // InternalNabla.g:356:1: ruleScalarVar EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleScalarVar();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleScalarVar"


    // $ANTLR start "ruleScalarVar"
    // InternalNabla.g:363:1: ruleScalarVar : ( ( rule__ScalarVar__NameAssignment ) ) ;
    public final void ruleScalarVar() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:367:2: ( ( ( rule__ScalarVar__NameAssignment ) ) )
            // InternalNabla.g:368:2: ( ( rule__ScalarVar__NameAssignment ) )
            {
            // InternalNabla.g:368:2: ( ( rule__ScalarVar__NameAssignment ) )
            // InternalNabla.g:369:3: ( rule__ScalarVar__NameAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarAccess().getNameAssignment()); 
            }
            // InternalNabla.g:370:3: ( rule__ScalarVar__NameAssignment )
            // InternalNabla.g:370:4: rule__ScalarVar__NameAssignment
            {
            pushFollow(FOLLOW_2);
            rule__ScalarVar__NameAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarAccess().getNameAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleScalarVar"


    // $ANTLR start "entryRuleArrayVar"
    // InternalNabla.g:379:1: entryRuleArrayVar : ruleArrayVar EOF ;
    public final void entryRuleArrayVar() throws RecognitionException {
        try {
            // InternalNabla.g:380:1: ( ruleArrayVar EOF )
            // InternalNabla.g:381:1: ruleArrayVar EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayVarRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleArrayVar();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayVarRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleArrayVar"


    // $ANTLR start "ruleArrayVar"
    // InternalNabla.g:388:1: ruleArrayVar : ( ( rule__ArrayVar__Group__0 ) ) ;
    public final void ruleArrayVar() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:392:2: ( ( ( rule__ArrayVar__Group__0 ) ) )
            // InternalNabla.g:393:2: ( ( rule__ArrayVar__Group__0 ) )
            {
            // InternalNabla.g:393:2: ( ( rule__ArrayVar__Group__0 ) )
            // InternalNabla.g:394:3: ( rule__ArrayVar__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayVarAccess().getGroup()); 
            }
            // InternalNabla.g:395:3: ( rule__ArrayVar__Group__0 )
            // InternalNabla.g:395:4: rule__ArrayVar__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ArrayVar__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayVarAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleArrayVar"


    // $ANTLR start "entryRuleConnectivity"
    // InternalNabla.g:404:1: entryRuleConnectivity : ruleConnectivity EOF ;
    public final void entryRuleConnectivity() throws RecognitionException {
        try {
            // InternalNabla.g:405:1: ( ruleConnectivity EOF )
            // InternalNabla.g:406:1: ruleConnectivity EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleConnectivity();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConnectivity"


    // $ANTLR start "ruleConnectivity"
    // InternalNabla.g:413:1: ruleConnectivity : ( ( rule__Connectivity__Group__0 ) ) ;
    public final void ruleConnectivity() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:417:2: ( ( ( rule__Connectivity__Group__0 ) ) )
            // InternalNabla.g:418:2: ( ( rule__Connectivity__Group__0 ) )
            {
            // InternalNabla.g:418:2: ( ( rule__Connectivity__Group__0 ) )
            // InternalNabla.g:419:3: ( rule__Connectivity__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getGroup()); 
            }
            // InternalNabla.g:420:3: ( rule__Connectivity__Group__0 )
            // InternalNabla.g:420:4: rule__Connectivity__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Connectivity__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConnectivity"


    // $ANTLR start "entryRuleItemArgType"
    // InternalNabla.g:429:1: entryRuleItemArgType : ruleItemArgType EOF ;
    public final void entryRuleItemArgType() throws RecognitionException {
        try {
            // InternalNabla.g:430:1: ( ruleItemArgType EOF )
            // InternalNabla.g:431:1: ruleItemArgType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItemArgTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleItemArgType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItemArgTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleItemArgType"


    // $ANTLR start "ruleItemArgType"
    // InternalNabla.g:438:1: ruleItemArgType : ( ( rule__ItemArgType__Alternatives ) ) ;
    public final void ruleItemArgType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:442:2: ( ( ( rule__ItemArgType__Alternatives ) ) )
            // InternalNabla.g:443:2: ( ( rule__ItemArgType__Alternatives ) )
            {
            // InternalNabla.g:443:2: ( ( rule__ItemArgType__Alternatives ) )
            // InternalNabla.g:444:3: ( rule__ItemArgType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItemArgTypeAccess().getAlternatives()); 
            }
            // InternalNabla.g:445:3: ( rule__ItemArgType__Alternatives )
            // InternalNabla.g:445:4: rule__ItemArgType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ItemArgType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItemArgTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleItemArgType"


    // $ANTLR start "entryRuleFunction"
    // InternalNabla.g:454:1: entryRuleFunction : ruleFunction EOF ;
    public final void entryRuleFunction() throws RecognitionException {
        try {
            // InternalNabla.g:455:1: ( ruleFunction EOF )
            // InternalNabla.g:456:1: ruleFunction EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFunction"


    // $ANTLR start "ruleFunction"
    // InternalNabla.g:463:1: ruleFunction : ( ( rule__Function__Group__0 ) ) ;
    public final void ruleFunction() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:467:2: ( ( ( rule__Function__Group__0 ) ) )
            // InternalNabla.g:468:2: ( ( rule__Function__Group__0 ) )
            {
            // InternalNabla.g:468:2: ( ( rule__Function__Group__0 ) )
            // InternalNabla.g:469:3: ( rule__Function__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGroup()); 
            }
            // InternalNabla.g:470:3: ( rule__Function__Group__0 )
            // InternalNabla.g:470:4: rule__Function__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Function__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunction"


    // $ANTLR start "entryRuleFunctionArg"
    // InternalNabla.g:479:1: entryRuleFunctionArg : ruleFunctionArg EOF ;
    public final void entryRuleFunctionArg() throws RecognitionException {
        try {
            // InternalNabla.g:480:1: ( ruleFunctionArg EOF )
            // InternalNabla.g:481:1: ruleFunctionArg EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionArgRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFunctionArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionArgRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFunctionArg"


    // $ANTLR start "ruleFunctionArg"
    // InternalNabla.g:488:1: ruleFunctionArg : ( ( rule__FunctionArg__Group__0 ) ) ;
    public final void ruleFunctionArg() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:492:2: ( ( ( rule__FunctionArg__Group__0 ) ) )
            // InternalNabla.g:493:2: ( ( rule__FunctionArg__Group__0 ) )
            {
            // InternalNabla.g:493:2: ( ( rule__FunctionArg__Group__0 ) )
            // InternalNabla.g:494:3: ( rule__FunctionArg__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionArgAccess().getGroup()); 
            }
            // InternalNabla.g:495:3: ( rule__FunctionArg__Group__0 )
            // InternalNabla.g:495:4: rule__FunctionArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FunctionArg__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionArgAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunctionArg"


    // $ANTLR start "entryRuleReduction"
    // InternalNabla.g:504:1: entryRuleReduction : ruleReduction EOF ;
    public final void entryRuleReduction() throws RecognitionException {
        try {
            // InternalNabla.g:505:1: ( ruleReduction EOF )
            // InternalNabla.g:506:1: ruleReduction EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleReduction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleReduction"


    // $ANTLR start "ruleReduction"
    // InternalNabla.g:513:1: ruleReduction : ( ( rule__Reduction__Group__0 ) ) ;
    public final void ruleReduction() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:517:2: ( ( ( rule__Reduction__Group__0 ) ) )
            // InternalNabla.g:518:2: ( ( rule__Reduction__Group__0 ) )
            {
            // InternalNabla.g:518:2: ( ( rule__Reduction__Group__0 ) )
            // InternalNabla.g:519:3: ( rule__Reduction__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionAccess().getGroup()); 
            }
            // InternalNabla.g:520:3: ( rule__Reduction__Group__0 )
            // InternalNabla.g:520:4: rule__Reduction__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Reduction__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleReduction"


    // $ANTLR start "entryRuleReductionArg"
    // InternalNabla.g:529:1: entryRuleReductionArg : ruleReductionArg EOF ;
    public final void entryRuleReductionArg() throws RecognitionException {
        try {
            // InternalNabla.g:530:1: ( ruleReductionArg EOF )
            // InternalNabla.g:531:1: ruleReductionArg EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionArgRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleReductionArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionArgRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleReductionArg"


    // $ANTLR start "ruleReductionArg"
    // InternalNabla.g:538:1: ruleReductionArg : ( ( rule__ReductionArg__Group__0 ) ) ;
    public final void ruleReductionArg() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:542:2: ( ( ( rule__ReductionArg__Group__0 ) ) )
            // InternalNabla.g:543:2: ( ( rule__ReductionArg__Group__0 ) )
            {
            // InternalNabla.g:543:2: ( ( rule__ReductionArg__Group__0 ) )
            // InternalNabla.g:544:3: ( rule__ReductionArg__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionArgAccess().getGroup()); 
            }
            // InternalNabla.g:545:3: ( rule__ReductionArg__Group__0 )
            // InternalNabla.g:545:4: rule__ReductionArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ReductionArg__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionArgAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleReductionArg"


    // $ANTLR start "entryRuleExpression"
    // InternalNabla.g:554:1: entryRuleExpression : ruleExpression EOF ;
    public final void entryRuleExpression() throws RecognitionException {
        try {
            // InternalNabla.g:555:1: ( ruleExpression EOF )
            // InternalNabla.g:556:1: ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalNabla.g:563:1: ruleExpression : ( ruleOr ) ;
    public final void ruleExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:567:2: ( ( ruleOr ) )
            // InternalNabla.g:568:2: ( ruleOr )
            {
            // InternalNabla.g:568:2: ( ruleOr )
            // InternalNabla.g:569:3: ruleOr
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getOrParserRuleCall()); 
            }
            pushFollow(FOLLOW_2);
            ruleOr();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getOrParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleOr"
    // InternalNabla.g:579:1: entryRuleOr : ruleOr EOF ;
    public final void entryRuleOr() throws RecognitionException {
        try {
            // InternalNabla.g:580:1: ( ruleOr EOF )
            // InternalNabla.g:581:1: ruleOr EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOr();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOr"


    // $ANTLR start "ruleOr"
    // InternalNabla.g:588:1: ruleOr : ( ( rule__Or__Group__0 ) ) ;
    public final void ruleOr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:592:2: ( ( ( rule__Or__Group__0 ) ) )
            // InternalNabla.g:593:2: ( ( rule__Or__Group__0 ) )
            {
            // InternalNabla.g:593:2: ( ( rule__Or__Group__0 ) )
            // InternalNabla.g:594:3: ( rule__Or__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getGroup()); 
            }
            // InternalNabla.g:595:3: ( rule__Or__Group__0 )
            // InternalNabla.g:595:4: rule__Or__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Or__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOr"


    // $ANTLR start "entryRuleAnd"
    // InternalNabla.g:604:1: entryRuleAnd : ruleAnd EOF ;
    public final void entryRuleAnd() throws RecognitionException {
        try {
            // InternalNabla.g:605:1: ( ruleAnd EOF )
            // InternalNabla.g:606:1: ruleAnd EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAnd();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnd"


    // $ANTLR start "ruleAnd"
    // InternalNabla.g:613:1: ruleAnd : ( ( rule__And__Group__0 ) ) ;
    public final void ruleAnd() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:617:2: ( ( ( rule__And__Group__0 ) ) )
            // InternalNabla.g:618:2: ( ( rule__And__Group__0 ) )
            {
            // InternalNabla.g:618:2: ( ( rule__And__Group__0 ) )
            // InternalNabla.g:619:3: ( rule__And__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getGroup()); 
            }
            // InternalNabla.g:620:3: ( rule__And__Group__0 )
            // InternalNabla.g:620:4: rule__And__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__And__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnd"


    // $ANTLR start "entryRuleEquality"
    // InternalNabla.g:629:1: entryRuleEquality : ruleEquality EOF ;
    public final void entryRuleEquality() throws RecognitionException {
        try {
            // InternalNabla.g:630:1: ( ruleEquality EOF )
            // InternalNabla.g:631:1: ruleEquality EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleEquality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEquality"


    // $ANTLR start "ruleEquality"
    // InternalNabla.g:638:1: ruleEquality : ( ( rule__Equality__Group__0 ) ) ;
    public final void ruleEquality() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:642:2: ( ( ( rule__Equality__Group__0 ) ) )
            // InternalNabla.g:643:2: ( ( rule__Equality__Group__0 ) )
            {
            // InternalNabla.g:643:2: ( ( rule__Equality__Group__0 ) )
            // InternalNabla.g:644:3: ( rule__Equality__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAccess().getGroup()); 
            }
            // InternalNabla.g:645:3: ( rule__Equality__Group__0 )
            // InternalNabla.g:645:4: rule__Equality__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Equality__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEquality"


    // $ANTLR start "entryRuleComparison"
    // InternalNabla.g:654:1: entryRuleComparison : ruleComparison EOF ;
    public final void entryRuleComparison() throws RecognitionException {
        try {
            // InternalNabla.g:655:1: ( ruleComparison EOF )
            // InternalNabla.g:656:1: ruleComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComparison"


    // $ANTLR start "ruleComparison"
    // InternalNabla.g:663:1: ruleComparison : ( ( rule__Comparison__Group__0 ) ) ;
    public final void ruleComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:667:2: ( ( ( rule__Comparison__Group__0 ) ) )
            // InternalNabla.g:668:2: ( ( rule__Comparison__Group__0 ) )
            {
            // InternalNabla.g:668:2: ( ( rule__Comparison__Group__0 ) )
            // InternalNabla.g:669:3: ( rule__Comparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getGroup()); 
            }
            // InternalNabla.g:670:3: ( rule__Comparison__Group__0 )
            // InternalNabla.g:670:4: rule__Comparison__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComparison"


    // $ANTLR start "entryRulePlusOrMinus"
    // InternalNabla.g:679:1: entryRulePlusOrMinus : rulePlusOrMinus EOF ;
    public final void entryRulePlusOrMinus() throws RecognitionException {
        try {
            // InternalNabla.g:680:1: ( rulePlusOrMinus EOF )
            // InternalNabla.g:681:1: rulePlusOrMinus EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePlusOrMinus();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePlusOrMinus"


    // $ANTLR start "rulePlusOrMinus"
    // InternalNabla.g:688:1: rulePlusOrMinus : ( ( rule__PlusOrMinus__Group__0 ) ) ;
    public final void rulePlusOrMinus() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:692:2: ( ( ( rule__PlusOrMinus__Group__0 ) ) )
            // InternalNabla.g:693:2: ( ( rule__PlusOrMinus__Group__0 ) )
            {
            // InternalNabla.g:693:2: ( ( rule__PlusOrMinus__Group__0 ) )
            // InternalNabla.g:694:3: ( rule__PlusOrMinus__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getGroup()); 
            }
            // InternalNabla.g:695:3: ( rule__PlusOrMinus__Group__0 )
            // InternalNabla.g:695:4: rule__PlusOrMinus__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePlusOrMinus"


    // $ANTLR start "entryRuleMulOrDiv"
    // InternalNabla.g:704:1: entryRuleMulOrDiv : ruleMulOrDiv EOF ;
    public final void entryRuleMulOrDiv() throws RecognitionException {
        try {
            // InternalNabla.g:705:1: ( ruleMulOrDiv EOF )
            // InternalNabla.g:706:1: ruleMulOrDiv EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleMulOrDiv();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMulOrDiv"


    // $ANTLR start "ruleMulOrDiv"
    // InternalNabla.g:713:1: ruleMulOrDiv : ( ( rule__MulOrDiv__Group__0 ) ) ;
    public final void ruleMulOrDiv() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:717:2: ( ( ( rule__MulOrDiv__Group__0 ) ) )
            // InternalNabla.g:718:2: ( ( rule__MulOrDiv__Group__0 ) )
            {
            // InternalNabla.g:718:2: ( ( rule__MulOrDiv__Group__0 ) )
            // InternalNabla.g:719:3: ( rule__MulOrDiv__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivAccess().getGroup()); 
            }
            // InternalNabla.g:720:3: ( rule__MulOrDiv__Group__0 )
            // InternalNabla.g:720:4: rule__MulOrDiv__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMulOrDiv"


    // $ANTLR start "entryRulePrimary"
    // InternalNabla.g:729:1: entryRulePrimary : rulePrimary EOF ;
    public final void entryRulePrimary() throws RecognitionException {
        try {
            // InternalNabla.g:730:1: ( rulePrimary EOF )
            // InternalNabla.g:731:1: rulePrimary EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePrimary();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePrimary"


    // $ANTLR start "rulePrimary"
    // InternalNabla.g:738:1: rulePrimary : ( ( rule__Primary__Alternatives ) ) ;
    public final void rulePrimary() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:742:2: ( ( ( rule__Primary__Alternatives ) ) )
            // InternalNabla.g:743:2: ( ( rule__Primary__Alternatives ) )
            {
            // InternalNabla.g:743:2: ( ( rule__Primary__Alternatives ) )
            // InternalNabla.g:744:3: ( rule__Primary__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getAlternatives()); 
            }
            // InternalNabla.g:745:3: ( rule__Primary__Alternatives )
            // InternalNabla.g:745:4: rule__Primary__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePrimary"


    // $ANTLR start "entryRuleAtomic"
    // InternalNabla.g:754:1: entryRuleAtomic : ruleAtomic EOF ;
    public final void entryRuleAtomic() throws RecognitionException {
        try {
            // InternalNabla.g:755:1: ( ruleAtomic EOF )
            // InternalNabla.g:756:1: ruleAtomic EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAtomic();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAtomic"


    // $ANTLR start "ruleAtomic"
    // InternalNabla.g:763:1: ruleAtomic : ( ( rule__Atomic__Alternatives ) ) ;
    public final void ruleAtomic() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:767:2: ( ( ( rule__Atomic__Alternatives ) ) )
            // InternalNabla.g:768:2: ( ( rule__Atomic__Alternatives ) )
            {
            // InternalNabla.g:768:2: ( ( rule__Atomic__Alternatives ) )
            // InternalNabla.g:769:3: ( rule__Atomic__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getAlternatives()); 
            }
            // InternalNabla.g:770:3: ( rule__Atomic__Alternatives )
            // InternalNabla.g:770:4: rule__Atomic__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAtomic"


    // $ANTLR start "entryRuleReal2Constant"
    // InternalNabla.g:779:1: entryRuleReal2Constant : ruleReal2Constant EOF ;
    public final void entryRuleReal2Constant() throws RecognitionException {
        try {
            // InternalNabla.g:780:1: ( ruleReal2Constant EOF )
            // InternalNabla.g:781:1: ruleReal2Constant EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal2ConstantRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleReal2Constant();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal2ConstantRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleReal2Constant"


    // $ANTLR start "ruleReal2Constant"
    // InternalNabla.g:788:1: ruleReal2Constant : ( ( rule__Real2Constant__Group__0 ) ) ;
    public final void ruleReal2Constant() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:792:2: ( ( ( rule__Real2Constant__Group__0 ) ) )
            // InternalNabla.g:793:2: ( ( rule__Real2Constant__Group__0 ) )
            {
            // InternalNabla.g:793:2: ( ( rule__Real2Constant__Group__0 ) )
            // InternalNabla.g:794:3: ( rule__Real2Constant__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal2ConstantAccess().getGroup()); 
            }
            // InternalNabla.g:795:3: ( rule__Real2Constant__Group__0 )
            // InternalNabla.g:795:4: rule__Real2Constant__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Real2Constant__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal2ConstantAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleReal2Constant"


    // $ANTLR start "entryRuleReal3Constant"
    // InternalNabla.g:804:1: entryRuleReal3Constant : ruleReal3Constant EOF ;
    public final void entryRuleReal3Constant() throws RecognitionException {
        try {
            // InternalNabla.g:805:1: ( ruleReal3Constant EOF )
            // InternalNabla.g:806:1: ruleReal3Constant EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal3ConstantRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleReal3Constant();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal3ConstantRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleReal3Constant"


    // $ANTLR start "ruleReal3Constant"
    // InternalNabla.g:813:1: ruleReal3Constant : ( ( rule__Real3Constant__Group__0 ) ) ;
    public final void ruleReal3Constant() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:817:2: ( ( ( rule__Real3Constant__Group__0 ) ) )
            // InternalNabla.g:818:2: ( ( rule__Real3Constant__Group__0 ) )
            {
            // InternalNabla.g:818:2: ( ( rule__Real3Constant__Group__0 ) )
            // InternalNabla.g:819:3: ( rule__Real3Constant__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal3ConstantAccess().getGroup()); 
            }
            // InternalNabla.g:820:3: ( rule__Real3Constant__Group__0 )
            // InternalNabla.g:820:4: rule__Real3Constant__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Real3Constant__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal3ConstantAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleReal3Constant"


    // $ANTLR start "entryRuleVarRef"
    // InternalNabla.g:829:1: entryRuleVarRef : ruleVarRef EOF ;
    public final void entryRuleVarRef() throws RecognitionException {
        try {
            // InternalNabla.g:830:1: ( ruleVarRef EOF )
            // InternalNabla.g:831:1: ruleVarRef EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVarRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVarRef"


    // $ANTLR start "ruleVarRef"
    // InternalNabla.g:838:1: ruleVarRef : ( ( rule__VarRef__Group__0 ) ) ;
    public final void ruleVarRef() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:842:2: ( ( ( rule__VarRef__Group__0 ) ) )
            // InternalNabla.g:843:2: ( ( rule__VarRef__Group__0 ) )
            {
            // InternalNabla.g:843:2: ( ( rule__VarRef__Group__0 ) )
            // InternalNabla.g:844:3: ( rule__VarRef__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getGroup()); 
            }
            // InternalNabla.g:845:3: ( rule__VarRef__Group__0 )
            // InternalNabla.g:845:4: rule__VarRef__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VarRef__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVarRef"


    // $ANTLR start "entryRuleIteratorRangeOrRef"
    // InternalNabla.g:854:1: entryRuleIteratorRangeOrRef : ruleIteratorRangeOrRef EOF ;
    public final void entryRuleIteratorRangeOrRef() throws RecognitionException {
        try {
            // InternalNabla.g:855:1: ( ruleIteratorRangeOrRef EOF )
            // InternalNabla.g:856:1: ruleIteratorRangeOrRef EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIteratorRangeOrRefRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleIteratorRangeOrRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIteratorRangeOrRefRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIteratorRangeOrRef"


    // $ANTLR start "ruleIteratorRangeOrRef"
    // InternalNabla.g:863:1: ruleIteratorRangeOrRef : ( ( rule__IteratorRangeOrRef__Alternatives ) ) ;
    public final void ruleIteratorRangeOrRef() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:867:2: ( ( ( rule__IteratorRangeOrRef__Alternatives ) ) )
            // InternalNabla.g:868:2: ( ( rule__IteratorRangeOrRef__Alternatives ) )
            {
            // InternalNabla.g:868:2: ( ( rule__IteratorRangeOrRef__Alternatives ) )
            // InternalNabla.g:869:3: ( rule__IteratorRangeOrRef__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIteratorRangeOrRefAccess().getAlternatives()); 
            }
            // InternalNabla.g:870:3: ( rule__IteratorRangeOrRef__Alternatives )
            // InternalNabla.g:870:4: rule__IteratorRangeOrRef__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__IteratorRangeOrRef__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIteratorRangeOrRefAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIteratorRangeOrRef"


    // $ANTLR start "entryRuleTimeIteratorRef"
    // InternalNabla.g:879:1: entryRuleTimeIteratorRef : ruleTimeIteratorRef EOF ;
    public final void entryRuleTimeIteratorRef() throws RecognitionException {
        try {
            // InternalNabla.g:880:1: ( ruleTimeIteratorRef EOF )
            // InternalNabla.g:881:1: ruleTimeIteratorRef EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorRefRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTimeIteratorRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorRefRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTimeIteratorRef"


    // $ANTLR start "ruleTimeIteratorRef"
    // InternalNabla.g:888:1: ruleTimeIteratorRef : ( ( rule__TimeIteratorRef__Group__0 ) ) ;
    public final void ruleTimeIteratorRef() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:892:2: ( ( ( rule__TimeIteratorRef__Group__0 ) ) )
            // InternalNabla.g:893:2: ( ( rule__TimeIteratorRef__Group__0 ) )
            {
            // InternalNabla.g:893:2: ( ( rule__TimeIteratorRef__Group__0 ) )
            // InternalNabla.g:894:3: ( rule__TimeIteratorRef__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorRefAccess().getGroup()); 
            }
            // InternalNabla.g:895:3: ( rule__TimeIteratorRef__Group__0 )
            // InternalNabla.g:895:4: rule__TimeIteratorRef__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TimeIteratorRef__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorRefAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTimeIteratorRef"


    // $ANTLR start "entryRuleQualifiedName"
    // InternalNabla.g:904:1: entryRuleQualifiedName : ruleQualifiedName EOF ;
    public final void entryRuleQualifiedName() throws RecognitionException {
        try {
            // InternalNabla.g:905:1: ( ruleQualifiedName EOF )
            // InternalNabla.g:906:1: ruleQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // InternalNabla.g:913:1: ruleQualifiedName : ( ( rule__QualifiedName__Group__0 ) ) ;
    public final void ruleQualifiedName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:917:2: ( ( ( rule__QualifiedName__Group__0 ) ) )
            // InternalNabla.g:918:2: ( ( rule__QualifiedName__Group__0 ) )
            {
            // InternalNabla.g:918:2: ( ( rule__QualifiedName__Group__0 ) )
            // InternalNabla.g:919:3: ( rule__QualifiedName__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameAccess().getGroup()); 
            }
            // InternalNabla.g:920:3: ( rule__QualifiedName__Group__0 )
            // InternalNabla.g:920:4: rule__QualifiedName__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleQualifiedNameWithWildcard"
    // InternalNabla.g:929:1: entryRuleQualifiedNameWithWildcard : ruleQualifiedNameWithWildcard EOF ;
    public final void entryRuleQualifiedNameWithWildcard() throws RecognitionException {
        try {
            // InternalNabla.g:930:1: ( ruleQualifiedNameWithWildcard EOF )
            // InternalNabla.g:931:1: ruleQualifiedNameWithWildcard EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameWithWildcardRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameWithWildcardRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQualifiedNameWithWildcard"


    // $ANTLR start "ruleQualifiedNameWithWildcard"
    // InternalNabla.g:938:1: ruleQualifiedNameWithWildcard : ( ( rule__QualifiedNameWithWildcard__Group__0 ) ) ;
    public final void ruleQualifiedNameWithWildcard() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:942:2: ( ( ( rule__QualifiedNameWithWildcard__Group__0 ) ) )
            // InternalNabla.g:943:2: ( ( rule__QualifiedNameWithWildcard__Group__0 ) )
            {
            // InternalNabla.g:943:2: ( ( rule__QualifiedNameWithWildcard__Group__0 ) )
            // InternalNabla.g:944:3: ( rule__QualifiedNameWithWildcard__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); 
            }
            // InternalNabla.g:945:3: ( rule__QualifiedNameWithWildcard__Group__0 )
            // InternalNabla.g:945:4: rule__QualifiedNameWithWildcard__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameWithWildcard__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQualifiedNameWithWildcard"


    // $ANTLR start "ruleBasicType"
    // InternalNabla.g:954:1: ruleBasicType : ( ( rule__BasicType__Alternatives ) ) ;
    public final void ruleBasicType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:958:1: ( ( ( rule__BasicType__Alternatives ) ) )
            // InternalNabla.g:959:2: ( ( rule__BasicType__Alternatives ) )
            {
            // InternalNabla.g:959:2: ( ( rule__BasicType__Alternatives ) )
            // InternalNabla.g:960:3: ( rule__BasicType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBasicTypeAccess().getAlternatives()); 
            }
            // InternalNabla.g:961:3: ( rule__BasicType__Alternatives )
            // InternalNabla.g:961:4: rule__BasicType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__BasicType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBasicTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBasicType"


    // $ANTLR start "ruleItemType"
    // InternalNabla.g:970:1: ruleItemType : ( ( rule__ItemType__Alternatives ) ) ;
    public final void ruleItemType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:974:1: ( ( ( rule__ItemType__Alternatives ) ) )
            // InternalNabla.g:975:2: ( ( rule__ItemType__Alternatives ) )
            {
            // InternalNabla.g:975:2: ( ( rule__ItemType__Alternatives ) )
            // InternalNabla.g:976:3: ( rule__ItemType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItemTypeAccess().getAlternatives()); 
            }
            // InternalNabla.g:977:3: ( rule__ItemType__Alternatives )
            // InternalNabla.g:977:4: rule__ItemType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ItemType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItemTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleItemType"


    // $ANTLR start "rule__NablaModule__VariablesAlternatives_5_0"
    // InternalNabla.g:985:1: rule__NablaModule__VariablesAlternatives_5_0 : ( ( ruleScalarVarDefinition ) | ( ruleVarGroupDeclaration ) );
    public final void rule__NablaModule__VariablesAlternatives_5_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:989:1: ( ( ruleScalarVarDefinition ) | ( ruleVarGroupDeclaration ) )
            int alt1=2;
            alt1 = dfa1.predict(input);
            switch (alt1) {
                case 1 :
                    // InternalNabla.g:990:2: ( ruleScalarVarDefinition )
                    {
                    // InternalNabla.g:990:2: ( ruleScalarVarDefinition )
                    // InternalNabla.g:991:3: ruleScalarVarDefinition
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNablaModuleAccess().getVariablesScalarVarDefinitionParserRuleCall_5_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleScalarVarDefinition();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNablaModuleAccess().getVariablesScalarVarDefinitionParserRuleCall_5_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:996:2: ( ruleVarGroupDeclaration )
                    {
                    // InternalNabla.g:996:2: ( ruleVarGroupDeclaration )
                    // InternalNabla.g:997:3: ruleVarGroupDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNablaModuleAccess().getVariablesVarGroupDeclarationParserRuleCall_5_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleVarGroupDeclaration();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNablaModuleAccess().getVariablesVarGroupDeclarationParserRuleCall_5_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__VariablesAlternatives_5_0"


    // $ANTLR start "rule__DeclarationBlock__Alternatives"
    // InternalNabla.g:1006:1: rule__DeclarationBlock__Alternatives : ( ( ( rule__DeclarationBlock__Group_0__0 ) ) | ( ( rule__DeclarationBlock__Group_1__0 ) ) );
    public final void rule__DeclarationBlock__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1010:1: ( ( ( rule__DeclarationBlock__Group_0__0 ) ) | ( ( rule__DeclarationBlock__Group_1__0 ) ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==35) ) {
                alt2=1;
            }
            else if ( (LA2_0==38) ) {
                alt2=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // InternalNabla.g:1011:2: ( ( rule__DeclarationBlock__Group_0__0 ) )
                    {
                    // InternalNabla.g:1011:2: ( ( rule__DeclarationBlock__Group_0__0 ) )
                    // InternalNabla.g:1012:3: ( rule__DeclarationBlock__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDeclarationBlockAccess().getGroup_0()); 
                    }
                    // InternalNabla.g:1013:3: ( rule__DeclarationBlock__Group_0__0 )
                    // InternalNabla.g:1013:4: rule__DeclarationBlock__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DeclarationBlock__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDeclarationBlockAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1017:2: ( ( rule__DeclarationBlock__Group_1__0 ) )
                    {
                    // InternalNabla.g:1017:2: ( ( rule__DeclarationBlock__Group_1__0 ) )
                    // InternalNabla.g:1018:3: ( rule__DeclarationBlock__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDeclarationBlockAccess().getGroup_1()); 
                    }
                    // InternalNabla.g:1019:3: ( rule__DeclarationBlock__Group_1__0 )
                    // InternalNabla.g:1019:4: rule__DeclarationBlock__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DeclarationBlock__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDeclarationBlockAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Alternatives"


    // $ANTLR start "rule__DeclarationBlock__FunctionsAlternatives_1_3_0"
    // InternalNabla.g:1027:1: rule__DeclarationBlock__FunctionsAlternatives_1_3_0 : ( ( ruleFunction ) | ( ruleReduction ) );
    public final void rule__DeclarationBlock__FunctionsAlternatives_1_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1031:1: ( ( ruleFunction ) | ( ruleReduction ) )
            int alt3=2;
            alt3 = dfa3.predict(input);
            switch (alt3) {
                case 1 :
                    // InternalNabla.g:1032:2: ( ruleFunction )
                    {
                    // InternalNabla.g:1032:2: ( ruleFunction )
                    // InternalNabla.g:1033:3: ruleFunction
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDeclarationBlockAccess().getFunctionsFunctionParserRuleCall_1_3_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleFunction();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDeclarationBlockAccess().getFunctionsFunctionParserRuleCall_1_3_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1038:2: ( ruleReduction )
                    {
                    // InternalNabla.g:1038:2: ( ruleReduction )
                    // InternalNabla.g:1039:3: ruleReduction
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDeclarationBlockAccess().getFunctionsReductionParserRuleCall_1_3_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleReduction();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDeclarationBlockAccess().getFunctionsReductionParserRuleCall_1_3_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__FunctionsAlternatives_1_3_0"


    // $ANTLR start "rule__Job__Alternatives"
    // InternalNabla.g:1048:1: rule__Job__Alternatives : ( ( ( rule__Job__Group_0__0 ) ) | ( ( rule__Job__Group_1__0 ) ) );
    public final void rule__Job__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1052:1: ( ( ( rule__Job__Group_0__0 ) ) | ( ( rule__Job__Group_1__0 ) ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==RULE_ID) ) {
                int LA4_1 = input.LA(2);

                if ( (LA4_1==39) ) {
                    int LA4_2 = input.LA(3);

                    if ( (LA4_2==40) ) {
                        int LA4_3 = input.LA(4);

                        if ( (LA4_3==RULE_ID) ) {
                            int LA4_5 = input.LA(5);

                            if ( (LA4_5==47) ) {
                                int LA4_6 = input.LA(6);

                                if ( (LA4_6==22) ) {
                                    alt4=2;
                                }
                                else if ( (LA4_6==RULE_ID) ) {
                                    alt4=1;
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return ;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 4, 6, input);

                                    throw nvae;
                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return ;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 4, 5, input);

                                throw nvae;
                            }
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return ;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 4, 3, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA4_2==RULE_ID||(LA4_2>=22 && LA4_2<=28)||LA4_2==36||LA4_2==43||LA4_2==60) ) {
                        alt4=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 4, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 4, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalNabla.g:1053:2: ( ( rule__Job__Group_0__0 ) )
                    {
                    // InternalNabla.g:1053:2: ( ( rule__Job__Group_0__0 ) )
                    // InternalNabla.g:1054:3: ( rule__Job__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJobAccess().getGroup_0()); 
                    }
                    // InternalNabla.g:1055:3: ( rule__Job__Group_0__0 )
                    // InternalNabla.g:1055:4: rule__Job__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Job__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJobAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1059:2: ( ( rule__Job__Group_1__0 ) )
                    {
                    // InternalNabla.g:1059:2: ( ( rule__Job__Group_1__0 ) )
                    // InternalNabla.g:1060:3: ( rule__Job__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJobAccess().getGroup_1()); 
                    }
                    // InternalNabla.g:1061:3: ( rule__Job__Group_1__0 )
                    // InternalNabla.g:1061:4: rule__Job__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Job__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJobAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Alternatives"


    // $ANTLR start "rule__Instruction__Alternatives"
    // InternalNabla.g:1069:1: rule__Instruction__Alternatives : ( ( ruleScalarVarDefinition ) | ( ruleVarGroupDeclaration ) | ( ( rule__Instruction__Group_2__0 ) ) | ( ( rule__Instruction__Group_3__0 ) ) | ( ( rule__Instruction__Group_4__0 ) ) | ( ( rule__Instruction__Group_5__0 ) ) );
    public final void rule__Instruction__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1073:1: ( ( ruleScalarVarDefinition ) | ( ruleVarGroupDeclaration ) | ( ( rule__Instruction__Group_2__0 ) ) | ( ( rule__Instruction__Group_3__0 ) ) | ( ( rule__Instruction__Group_4__0 ) ) | ( ( rule__Instruction__Group_5__0 ) ) )
            int alt5=6;
            alt5 = dfa5.predict(input);
            switch (alt5) {
                case 1 :
                    // InternalNabla.g:1074:2: ( ruleScalarVarDefinition )
                    {
                    // InternalNabla.g:1074:2: ( ruleScalarVarDefinition )
                    // InternalNabla.g:1075:3: ruleScalarVarDefinition
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInstructionAccess().getScalarVarDefinitionParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleScalarVarDefinition();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInstructionAccess().getScalarVarDefinitionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1080:2: ( ruleVarGroupDeclaration )
                    {
                    // InternalNabla.g:1080:2: ( ruleVarGroupDeclaration )
                    // InternalNabla.g:1081:3: ruleVarGroupDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInstructionAccess().getVarGroupDeclarationParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleVarGroupDeclaration();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInstructionAccess().getVarGroupDeclarationParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNabla.g:1086:2: ( ( rule__Instruction__Group_2__0 ) )
                    {
                    // InternalNabla.g:1086:2: ( ( rule__Instruction__Group_2__0 ) )
                    // InternalNabla.g:1087:3: ( rule__Instruction__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInstructionAccess().getGroup_2()); 
                    }
                    // InternalNabla.g:1088:3: ( rule__Instruction__Group_2__0 )
                    // InternalNabla.g:1088:4: rule__Instruction__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Instruction__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInstructionAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalNabla.g:1092:2: ( ( rule__Instruction__Group_3__0 ) )
                    {
                    // InternalNabla.g:1092:2: ( ( rule__Instruction__Group_3__0 ) )
                    // InternalNabla.g:1093:3: ( rule__Instruction__Group_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInstructionAccess().getGroup_3()); 
                    }
                    // InternalNabla.g:1094:3: ( rule__Instruction__Group_3__0 )
                    // InternalNabla.g:1094:4: rule__Instruction__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Instruction__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInstructionAccess().getGroup_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalNabla.g:1098:2: ( ( rule__Instruction__Group_4__0 ) )
                    {
                    // InternalNabla.g:1098:2: ( ( rule__Instruction__Group_4__0 ) )
                    // InternalNabla.g:1099:3: ( rule__Instruction__Group_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInstructionAccess().getGroup_4()); 
                    }
                    // InternalNabla.g:1100:3: ( rule__Instruction__Group_4__0 )
                    // InternalNabla.g:1100:4: rule__Instruction__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Instruction__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInstructionAccess().getGroup_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalNabla.g:1104:2: ( ( rule__Instruction__Group_5__0 ) )
                    {
                    // InternalNabla.g:1104:2: ( ( rule__Instruction__Group_5__0 ) )
                    // InternalNabla.g:1105:3: ( rule__Instruction__Group_5__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInstructionAccess().getGroup_5()); 
                    }
                    // InternalNabla.g:1106:3: ( rule__Instruction__Group_5__0 )
                    // InternalNabla.g:1106:4: rule__Instruction__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Instruction__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInstructionAccess().getGroup_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Alternatives"


    // $ANTLR start "rule__SpaceIteratorRef__Alternatives"
    // InternalNabla.g:1114:1: rule__SpaceIteratorRef__Alternatives : ( ( ( rule__SpaceIteratorRef__Group_0__0 ) ) | ( ( rule__SpaceIteratorRef__IteratorAssignment_1 ) ) );
    public final void rule__SpaceIteratorRef__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1118:1: ( ( ( rule__SpaceIteratorRef__Group_0__0 ) ) | ( ( rule__SpaceIteratorRef__IteratorAssignment_1 ) ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( ((LA6_0>=58 && LA6_0<=59)) ) {
                alt6=1;
            }
            else if ( (LA6_0==RULE_ID) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalNabla.g:1119:2: ( ( rule__SpaceIteratorRef__Group_0__0 ) )
                    {
                    // InternalNabla.g:1119:2: ( ( rule__SpaceIteratorRef__Group_0__0 ) )
                    // InternalNabla.g:1120:3: ( rule__SpaceIteratorRef__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSpaceIteratorRefAccess().getGroup_0()); 
                    }
                    // InternalNabla.g:1121:3: ( rule__SpaceIteratorRef__Group_0__0 )
                    // InternalNabla.g:1121:4: rule__SpaceIteratorRef__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SpaceIteratorRef__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSpaceIteratorRefAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1125:2: ( ( rule__SpaceIteratorRef__IteratorAssignment_1 ) )
                    {
                    // InternalNabla.g:1125:2: ( ( rule__SpaceIteratorRef__IteratorAssignment_1 ) )
                    // InternalNabla.g:1126:3: ( rule__SpaceIteratorRef__IteratorAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSpaceIteratorRefAccess().getIteratorAssignment_1()); 
                    }
                    // InternalNabla.g:1127:3: ( rule__SpaceIteratorRef__IteratorAssignment_1 )
                    // InternalNabla.g:1127:4: rule__SpaceIteratorRef__IteratorAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SpaceIteratorRef__IteratorAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSpaceIteratorRefAccess().getIteratorAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRef__Alternatives"


    // $ANTLR start "rule__SpaceIteratorRef__Alternatives_0_0"
    // InternalNabla.g:1135:1: rule__SpaceIteratorRef__Alternatives_0_0 : ( ( ( rule__SpaceIteratorRef__PrevAssignment_0_0_0 ) ) | ( ( rule__SpaceIteratorRef__NextAssignment_0_0_1 ) ) );
    public final void rule__SpaceIteratorRef__Alternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1139:1: ( ( ( rule__SpaceIteratorRef__PrevAssignment_0_0_0 ) ) | ( ( rule__SpaceIteratorRef__NextAssignment_0_0_1 ) ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==58) ) {
                alt7=1;
            }
            else if ( (LA7_0==59) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalNabla.g:1140:2: ( ( rule__SpaceIteratorRef__PrevAssignment_0_0_0 ) )
                    {
                    // InternalNabla.g:1140:2: ( ( rule__SpaceIteratorRef__PrevAssignment_0_0_0 ) )
                    // InternalNabla.g:1141:3: ( rule__SpaceIteratorRef__PrevAssignment_0_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSpaceIteratorRefAccess().getPrevAssignment_0_0_0()); 
                    }
                    // InternalNabla.g:1142:3: ( rule__SpaceIteratorRef__PrevAssignment_0_0_0 )
                    // InternalNabla.g:1142:4: rule__SpaceIteratorRef__PrevAssignment_0_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SpaceIteratorRef__PrevAssignment_0_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSpaceIteratorRefAccess().getPrevAssignment_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1146:2: ( ( rule__SpaceIteratorRef__NextAssignment_0_0_1 ) )
                    {
                    // InternalNabla.g:1146:2: ( ( rule__SpaceIteratorRef__NextAssignment_0_0_1 ) )
                    // InternalNabla.g:1147:3: ( rule__SpaceIteratorRef__NextAssignment_0_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSpaceIteratorRefAccess().getNextAssignment_0_0_1()); 
                    }
                    // InternalNabla.g:1148:3: ( rule__SpaceIteratorRef__NextAssignment_0_0_1 )
                    // InternalNabla.g:1148:4: rule__SpaceIteratorRef__NextAssignment_0_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SpaceIteratorRef__NextAssignment_0_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSpaceIteratorRefAccess().getNextAssignment_0_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRef__Alternatives_0_0"


    // $ANTLR start "rule__Var__Alternatives"
    // InternalNabla.g:1156:1: rule__Var__Alternatives : ( ( ruleScalarVar ) | ( ruleArrayVar ) );
    public final void rule__Var__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1160:1: ( ( ruleScalarVar ) | ( ruleArrayVar ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==RULE_ID) ) {
                int LA8_1 = input.LA(2);

                if ( (LA8_1==EOF||LA8_1==33||LA8_1==41) ) {
                    alt8=1;
                }
                else if ( (LA8_1==48) ) {
                    alt8=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 8, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalNabla.g:1161:2: ( ruleScalarVar )
                    {
                    // InternalNabla.g:1161:2: ( ruleScalarVar )
                    // InternalNabla.g:1162:3: ruleScalarVar
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVarAccess().getScalarVarParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleScalarVar();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVarAccess().getScalarVarParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1167:2: ( ruleArrayVar )
                    {
                    // InternalNabla.g:1167:2: ( ruleArrayVar )
                    // InternalNabla.g:1168:3: ruleArrayVar
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVarAccess().getArrayVarParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleArrayVar();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVarAccess().getArrayVarParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Var__Alternatives"


    // $ANTLR start "rule__Connectivity__Alternatives_3"
    // InternalNabla.g:1177:1: rule__Connectivity__Alternatives_3 : ( ( ( rule__Connectivity__Group_3_0__0 ) ) | ( '\\u2205' ) );
    public final void rule__Connectivity__Alternatives_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1181:1: ( ( ( rule__Connectivity__Group_3_0__0 ) ) | ( '\\u2205' ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( ((LA9_0>=29 && LA9_0<=31)) ) {
                alt9=1;
            }
            else if ( (LA9_0==12) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalNabla.g:1182:2: ( ( rule__Connectivity__Group_3_0__0 ) )
                    {
                    // InternalNabla.g:1182:2: ( ( rule__Connectivity__Group_3_0__0 ) )
                    // InternalNabla.g:1183:3: ( rule__Connectivity__Group_3_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConnectivityAccess().getGroup_3_0()); 
                    }
                    // InternalNabla.g:1184:3: ( rule__Connectivity__Group_3_0__0 )
                    // InternalNabla.g:1184:4: rule__Connectivity__Group_3_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Connectivity__Group_3_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConnectivityAccess().getGroup_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1188:2: ( '\\u2205' )
                    {
                    // InternalNabla.g:1188:2: ( '\\u2205' )
                    // InternalNabla.g:1189:3: '\\u2205'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConnectivityAccess().getEmptySetKeyword_3_1()); 
                    }
                    match(input,12,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConnectivityAccess().getEmptySetKeyword_3_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Alternatives_3"


    // $ANTLR start "rule__ItemArgType__Alternatives"
    // InternalNabla.g:1198:1: rule__ItemArgType__Alternatives : ( ( ( rule__ItemArgType__Group_0__0 ) ) | ( ( rule__ItemArgType__TypeAssignment_1 ) ) );
    public final void rule__ItemArgType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1202:1: ( ( ( rule__ItemArgType__Group_0__0 ) ) | ( ( rule__ItemArgType__TypeAssignment_1 ) ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==36) ) {
                alt10=1;
            }
            else if ( ((LA10_0>=29 && LA10_0<=31)) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalNabla.g:1203:2: ( ( rule__ItemArgType__Group_0__0 ) )
                    {
                    // InternalNabla.g:1203:2: ( ( rule__ItemArgType__Group_0__0 ) )
                    // InternalNabla.g:1204:3: ( rule__ItemArgType__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItemArgTypeAccess().getGroup_0()); 
                    }
                    // InternalNabla.g:1205:3: ( rule__ItemArgType__Group_0__0 )
                    // InternalNabla.g:1205:4: rule__ItemArgType__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ItemArgType__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItemArgTypeAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1209:2: ( ( rule__ItemArgType__TypeAssignment_1 ) )
                    {
                    // InternalNabla.g:1209:2: ( ( rule__ItemArgType__TypeAssignment_1 ) )
                    // InternalNabla.g:1210:3: ( rule__ItemArgType__TypeAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItemArgTypeAccess().getTypeAssignment_1()); 
                    }
                    // InternalNabla.g:1211:3: ( rule__ItemArgType__TypeAssignment_1 )
                    // InternalNabla.g:1211:4: rule__ItemArgType__TypeAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ItemArgType__TypeAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItemArgTypeAccess().getTypeAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItemArgType__Alternatives"


    // $ANTLR start "rule__FunctionArg__Alternatives_1"
    // InternalNabla.g:1219:1: rule__FunctionArg__Alternatives_1 : ( ( ( rule__FunctionArg__Group_1_0__0 ) ) | ( '\\u2205' ) );
    public final void rule__FunctionArg__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1223:1: ( ( ( rule__FunctionArg__Group_1_0__0 ) ) | ( '\\u2205' ) )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( ((LA11_0>=22 && LA11_0<=28)) ) {
                alt11=1;
            }
            else if ( (LA11_0==12) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalNabla.g:1224:2: ( ( rule__FunctionArg__Group_1_0__0 ) )
                    {
                    // InternalNabla.g:1224:2: ( ( rule__FunctionArg__Group_1_0__0 ) )
                    // InternalNabla.g:1225:3: ( rule__FunctionArg__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionArgAccess().getGroup_1_0()); 
                    }
                    // InternalNabla.g:1226:3: ( rule__FunctionArg__Group_1_0__0 )
                    // InternalNabla.g:1226:4: rule__FunctionArg__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FunctionArg__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionArgAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1230:2: ( '\\u2205' )
                    {
                    // InternalNabla.g:1230:2: ( '\\u2205' )
                    // InternalNabla.g:1231:3: '\\u2205'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionArgAccess().getEmptySetKeyword_1_1()); 
                    }
                    match(input,12,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionArgAccess().getEmptySetKeyword_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Alternatives_1"


    // $ANTLR start "rule__Equality__OpAlternatives_1_1_0"
    // InternalNabla.g:1240:1: rule__Equality__OpAlternatives_1_1_0 : ( ( '==' ) | ( '!=' ) );
    public final void rule__Equality__OpAlternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1244:1: ( ( '==' ) | ( '!=' ) )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==13) ) {
                alt12=1;
            }
            else if ( (LA12_0==14) ) {
                alt12=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalNabla.g:1245:2: ( '==' )
                    {
                    // InternalNabla.g:1245:2: ( '==' )
                    // InternalNabla.g:1246:3: '=='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEqualityAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); 
                    }
                    match(input,13,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEqualityAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1251:2: ( '!=' )
                    {
                    // InternalNabla.g:1251:2: ( '!=' )
                    // InternalNabla.g:1252:3: '!='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEqualityAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); 
                    }
                    match(input,14,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEqualityAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__OpAlternatives_1_1_0"


    // $ANTLR start "rule__Comparison__OpAlternatives_1_1_0"
    // InternalNabla.g:1261:1: rule__Comparison__OpAlternatives_1_1_0 : ( ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) );
    public final void rule__Comparison__OpAlternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1265:1: ( ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) )
            int alt13=4;
            switch ( input.LA(1) ) {
            case 15:
                {
                alt13=1;
                }
                break;
            case 16:
                {
                alt13=2;
                }
                break;
            case 17:
                {
                alt13=3;
                }
                break;
            case 18:
                {
                alt13=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }

            switch (alt13) {
                case 1 :
                    // InternalNabla.g:1266:2: ( '>=' )
                    {
                    // InternalNabla.g:1266:2: ( '>=' )
                    // InternalNabla.g:1267:3: '>='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); 
                    }
                    match(input,15,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1272:2: ( '<=' )
                    {
                    // InternalNabla.g:1272:2: ( '<=' )
                    // InternalNabla.g:1273:3: '<='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); 
                    }
                    match(input,16,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNabla.g:1278:2: ( '>' )
                    {
                    // InternalNabla.g:1278:2: ( '>' )
                    // InternalNabla.g:1279:3: '>'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_2()); 
                    }
                    match(input,17,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalNabla.g:1284:2: ( '<' )
                    {
                    // InternalNabla.g:1284:2: ( '<' )
                    // InternalNabla.g:1285:3: '<'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_3()); 
                    }
                    match(input,18,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__OpAlternatives_1_1_0"


    // $ANTLR start "rule__PlusOrMinus__Alternatives_1_0"
    // InternalNabla.g:1294:1: rule__PlusOrMinus__Alternatives_1_0 : ( ( ( rule__PlusOrMinus__Group_1_0_0__0 ) ) | ( ( rule__PlusOrMinus__Group_1_0_1__0 ) ) );
    public final void rule__PlusOrMinus__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1298:1: ( ( ( rule__PlusOrMinus__Group_1_0_0__0 ) ) | ( ( rule__PlusOrMinus__Group_1_0_1__0 ) ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==63) ) {
                alt14=1;
            }
            else if ( (LA14_0==51) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalNabla.g:1299:2: ( ( rule__PlusOrMinus__Group_1_0_0__0 ) )
                    {
                    // InternalNabla.g:1299:2: ( ( rule__PlusOrMinus__Group_1_0_0__0 ) )
                    // InternalNabla.g:1300:3: ( rule__PlusOrMinus__Group_1_0_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_0()); 
                    }
                    // InternalNabla.g:1301:3: ( rule__PlusOrMinus__Group_1_0_0__0 )
                    // InternalNabla.g:1301:4: rule__PlusOrMinus__Group_1_0_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PlusOrMinus__Group_1_0_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1305:2: ( ( rule__PlusOrMinus__Group_1_0_1__0 ) )
                    {
                    // InternalNabla.g:1305:2: ( ( rule__PlusOrMinus__Group_1_0_1__0 ) )
                    // InternalNabla.g:1306:3: ( rule__PlusOrMinus__Group_1_0_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_1()); 
                    }
                    // InternalNabla.g:1307:3: ( rule__PlusOrMinus__Group_1_0_1__0 )
                    // InternalNabla.g:1307:4: rule__PlusOrMinus__Group_1_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PlusOrMinus__Group_1_0_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Alternatives_1_0"


    // $ANTLR start "rule__MulOrDiv__OpAlternatives_1_1_0"
    // InternalNabla.g:1315:1: rule__MulOrDiv__OpAlternatives_1_1_0 : ( ( '*' ) | ( '/' ) );
    public final void rule__MulOrDiv__OpAlternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1319:1: ( ( '*' ) | ( '/' ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==19) ) {
                alt15=1;
            }
            else if ( (LA15_0==20) ) {
                alt15=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalNabla.g:1320:2: ( '*' )
                    {
                    // InternalNabla.g:1320:2: ( '*' )
                    // InternalNabla.g:1321:3: '*'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulOrDivAccess().getOpAsteriskKeyword_1_1_0_0()); 
                    }
                    match(input,19,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulOrDivAccess().getOpAsteriskKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1326:2: ( '/' )
                    {
                    // InternalNabla.g:1326:2: ( '/' )
                    // InternalNabla.g:1327:3: '/'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulOrDivAccess().getOpSolidusKeyword_1_1_0_1()); 
                    }
                    match(input,20,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulOrDivAccess().getOpSolidusKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__OpAlternatives_1_1_0"


    // $ANTLR start "rule__Primary__Alternatives"
    // InternalNabla.g:1336:1: rule__Primary__Alternatives : ( ( ( rule__Primary__Group_0__0 ) ) | ( ( rule__Primary__Group_1__0 ) ) | ( ( rule__Primary__Group_2__0 ) ) | ( ruleAtomic ) );
    public final void rule__Primary__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1340:1: ( ( ( rule__Primary__Group_0__0 ) ) | ( ( rule__Primary__Group_1__0 ) ) | ( ( rule__Primary__Group_2__0 ) ) | ( ruleAtomic ) )
            int alt16=4;
            switch ( input.LA(1) ) {
            case 44:
                {
                alt16=1;
                }
                break;
            case 51:
                {
                alt16=2;
                }
                break;
            case 52:
                {
                alt16=3;
                }
                break;
            case RULE_ID:
            case RULE_INT:
            case RULE_REAL:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 36:
            case 64:
                {
                alt16=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }

            switch (alt16) {
                case 1 :
                    // InternalNabla.g:1341:2: ( ( rule__Primary__Group_0__0 ) )
                    {
                    // InternalNabla.g:1341:2: ( ( rule__Primary__Group_0__0 ) )
                    // InternalNabla.g:1342:3: ( rule__Primary__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryAccess().getGroup_0()); 
                    }
                    // InternalNabla.g:1343:3: ( rule__Primary__Group_0__0 )
                    // InternalNabla.g:1343:4: rule__Primary__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1347:2: ( ( rule__Primary__Group_1__0 ) )
                    {
                    // InternalNabla.g:1347:2: ( ( rule__Primary__Group_1__0 ) )
                    // InternalNabla.g:1348:3: ( rule__Primary__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryAccess().getGroup_1()); 
                    }
                    // InternalNabla.g:1349:3: ( rule__Primary__Group_1__0 )
                    // InternalNabla.g:1349:4: rule__Primary__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNabla.g:1353:2: ( ( rule__Primary__Group_2__0 ) )
                    {
                    // InternalNabla.g:1353:2: ( ( rule__Primary__Group_2__0 ) )
                    // InternalNabla.g:1354:3: ( rule__Primary__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryAccess().getGroup_2()); 
                    }
                    // InternalNabla.g:1355:3: ( rule__Primary__Group_2__0 )
                    // InternalNabla.g:1355:4: rule__Primary__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalNabla.g:1359:2: ( ruleAtomic )
                    {
                    // InternalNabla.g:1359:2: ( ruleAtomic )
                    // InternalNabla.g:1360:3: ruleAtomic
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleAtomic();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Alternatives"


    // $ANTLR start "rule__Atomic__Alternatives"
    // InternalNabla.g:1369:1: rule__Atomic__Alternatives : ( ( ( rule__Atomic__Group_0__0 ) ) | ( ( rule__Atomic__Group_1__0 ) ) | ( ruleReal2Constant ) | ( ruleReal3Constant ) | ( ( rule__Atomic__Group_4__0 ) ) | ( ( rule__Atomic__Group_5__0 ) ) | ( ( rule__Atomic__Group_6__0 ) ) | ( ( rule__Atomic__Group_7__0 ) ) | ( ( rule__Atomic__Group_8__0 ) ) | ( ( rule__Atomic__Group_9__0 ) ) | ( ( rule__Atomic__Group_10__0 ) ) | ( ( rule__Atomic__Group_11__0 ) ) | ( ruleVarRef ) );
    public final void rule__Atomic__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1373:1: ( ( ( rule__Atomic__Group_0__0 ) ) | ( ( rule__Atomic__Group_1__0 ) ) | ( ruleReal2Constant ) | ( ruleReal3Constant ) | ( ( rule__Atomic__Group_4__0 ) ) | ( ( rule__Atomic__Group_5__0 ) ) | ( ( rule__Atomic__Group_6__0 ) ) | ( ( rule__Atomic__Group_7__0 ) ) | ( ( rule__Atomic__Group_8__0 ) ) | ( ( rule__Atomic__Group_9__0 ) ) | ( ( rule__Atomic__Group_10__0 ) ) | ( ( rule__Atomic__Group_11__0 ) ) | ( ruleVarRef ) )
            int alt17=13;
            alt17 = dfa17.predict(input);
            switch (alt17) {
                case 1 :
                    // InternalNabla.g:1374:2: ( ( rule__Atomic__Group_0__0 ) )
                    {
                    // InternalNabla.g:1374:2: ( ( rule__Atomic__Group_0__0 ) )
                    // InternalNabla.g:1375:3: ( rule__Atomic__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getGroup_0()); 
                    }
                    // InternalNabla.g:1376:3: ( rule__Atomic__Group_0__0 )
                    // InternalNabla.g:1376:4: rule__Atomic__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Atomic__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1380:2: ( ( rule__Atomic__Group_1__0 ) )
                    {
                    // InternalNabla.g:1380:2: ( ( rule__Atomic__Group_1__0 ) )
                    // InternalNabla.g:1381:3: ( rule__Atomic__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getGroup_1()); 
                    }
                    // InternalNabla.g:1382:3: ( rule__Atomic__Group_1__0 )
                    // InternalNabla.g:1382:4: rule__Atomic__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Atomic__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNabla.g:1386:2: ( ruleReal2Constant )
                    {
                    // InternalNabla.g:1386:2: ( ruleReal2Constant )
                    // InternalNabla.g:1387:3: ruleReal2Constant
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getReal2ConstantParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleReal2Constant();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getReal2ConstantParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalNabla.g:1392:2: ( ruleReal3Constant )
                    {
                    // InternalNabla.g:1392:2: ( ruleReal3Constant )
                    // InternalNabla.g:1393:3: ruleReal3Constant
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getReal3ConstantParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleReal3Constant();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getReal3ConstantParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalNabla.g:1398:2: ( ( rule__Atomic__Group_4__0 ) )
                    {
                    // InternalNabla.g:1398:2: ( ( rule__Atomic__Group_4__0 ) )
                    // InternalNabla.g:1399:3: ( rule__Atomic__Group_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getGroup_4()); 
                    }
                    // InternalNabla.g:1400:3: ( rule__Atomic__Group_4__0 )
                    // InternalNabla.g:1400:4: rule__Atomic__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Atomic__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getGroup_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalNabla.g:1404:2: ( ( rule__Atomic__Group_5__0 ) )
                    {
                    // InternalNabla.g:1404:2: ( ( rule__Atomic__Group_5__0 ) )
                    // InternalNabla.g:1405:3: ( rule__Atomic__Group_5__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getGroup_5()); 
                    }
                    // InternalNabla.g:1406:3: ( rule__Atomic__Group_5__0 )
                    // InternalNabla.g:1406:4: rule__Atomic__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Atomic__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getGroup_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalNabla.g:1410:2: ( ( rule__Atomic__Group_6__0 ) )
                    {
                    // InternalNabla.g:1410:2: ( ( rule__Atomic__Group_6__0 ) )
                    // InternalNabla.g:1411:3: ( rule__Atomic__Group_6__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getGroup_6()); 
                    }
                    // InternalNabla.g:1412:3: ( rule__Atomic__Group_6__0 )
                    // InternalNabla.g:1412:4: rule__Atomic__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Atomic__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getGroup_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalNabla.g:1416:2: ( ( rule__Atomic__Group_7__0 ) )
                    {
                    // InternalNabla.g:1416:2: ( ( rule__Atomic__Group_7__0 ) )
                    // InternalNabla.g:1417:3: ( rule__Atomic__Group_7__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getGroup_7()); 
                    }
                    // InternalNabla.g:1418:3: ( rule__Atomic__Group_7__0 )
                    // InternalNabla.g:1418:4: rule__Atomic__Group_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Atomic__Group_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getGroup_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalNabla.g:1422:2: ( ( rule__Atomic__Group_8__0 ) )
                    {
                    // InternalNabla.g:1422:2: ( ( rule__Atomic__Group_8__0 ) )
                    // InternalNabla.g:1423:3: ( rule__Atomic__Group_8__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getGroup_8()); 
                    }
                    // InternalNabla.g:1424:3: ( rule__Atomic__Group_8__0 )
                    // InternalNabla.g:1424:4: rule__Atomic__Group_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Atomic__Group_8__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getGroup_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalNabla.g:1428:2: ( ( rule__Atomic__Group_9__0 ) )
                    {
                    // InternalNabla.g:1428:2: ( ( rule__Atomic__Group_9__0 ) )
                    // InternalNabla.g:1429:3: ( rule__Atomic__Group_9__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getGroup_9()); 
                    }
                    // InternalNabla.g:1430:3: ( rule__Atomic__Group_9__0 )
                    // InternalNabla.g:1430:4: rule__Atomic__Group_9__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Atomic__Group_9__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getGroup_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalNabla.g:1434:2: ( ( rule__Atomic__Group_10__0 ) )
                    {
                    // InternalNabla.g:1434:2: ( ( rule__Atomic__Group_10__0 ) )
                    // InternalNabla.g:1435:3: ( rule__Atomic__Group_10__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getGroup_10()); 
                    }
                    // InternalNabla.g:1436:3: ( rule__Atomic__Group_10__0 )
                    // InternalNabla.g:1436:4: rule__Atomic__Group_10__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Atomic__Group_10__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getGroup_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalNabla.g:1440:2: ( ( rule__Atomic__Group_11__0 ) )
                    {
                    // InternalNabla.g:1440:2: ( ( rule__Atomic__Group_11__0 ) )
                    // InternalNabla.g:1441:3: ( rule__Atomic__Group_11__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getGroup_11()); 
                    }
                    // InternalNabla.g:1442:3: ( rule__Atomic__Group_11__0 )
                    // InternalNabla.g:1442:4: rule__Atomic__Group_11__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Atomic__Group_11__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getGroup_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalNabla.g:1446:2: ( ruleVarRef )
                    {
                    // InternalNabla.g:1446:2: ( ruleVarRef )
                    // InternalNabla.g:1447:3: ruleVarRef
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getVarRefParserRuleCall_12()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleVarRef();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getVarRefParserRuleCall_12()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Alternatives"


    // $ANTLR start "rule__Atomic__Alternatives_4_1"
    // InternalNabla.g:1456:1: rule__Atomic__Alternatives_4_1 : ( ( ( rule__Atomic__ValueAssignment_4_1_0 ) ) | ( 'false' ) );
    public final void rule__Atomic__Alternatives_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1460:1: ( ( ( rule__Atomic__ValueAssignment_4_1_0 ) ) | ( 'false' ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==64) ) {
                alt18=1;
            }
            else if ( (LA18_0==21) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalNabla.g:1461:2: ( ( rule__Atomic__ValueAssignment_4_1_0 ) )
                    {
                    // InternalNabla.g:1461:2: ( ( rule__Atomic__ValueAssignment_4_1_0 ) )
                    // InternalNabla.g:1462:3: ( rule__Atomic__ValueAssignment_4_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getValueAssignment_4_1_0()); 
                    }
                    // InternalNabla.g:1463:3: ( rule__Atomic__ValueAssignment_4_1_0 )
                    // InternalNabla.g:1463:4: rule__Atomic__ValueAssignment_4_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Atomic__ValueAssignment_4_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getValueAssignment_4_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1467:2: ( 'false' )
                    {
                    // InternalNabla.g:1467:2: ( 'false' )
                    // InternalNabla.g:1468:3: 'false'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getFalseKeyword_4_1_1()); 
                    }
                    match(input,21,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getFalseKeyword_4_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Alternatives_4_1"


    // $ANTLR start "rule__IteratorRangeOrRef__Alternatives"
    // InternalNabla.g:1477:1: rule__IteratorRangeOrRef__Alternatives : ( ( ruleSpaceIteratorRange ) | ( ruleSpaceIteratorRef ) );
    public final void rule__IteratorRangeOrRef__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1481:1: ( ( ruleSpaceIteratorRange ) | ( ruleSpaceIteratorRef ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==RULE_ID) ) {
                int LA19_1 = input.LA(2);

                if ( (LA19_1==44) ) {
                    alt19=1;
                }
                else if ( (LA19_1==EOF||LA19_1==37||LA19_1==41) ) {
                    alt19=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 19, 1, input);

                    throw nvae;
                }
            }
            else if ( ((LA19_0>=58 && LA19_0<=59)) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalNabla.g:1482:2: ( ruleSpaceIteratorRange )
                    {
                    // InternalNabla.g:1482:2: ( ruleSpaceIteratorRange )
                    // InternalNabla.g:1483:3: ruleSpaceIteratorRange
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIteratorRangeOrRefAccess().getSpaceIteratorRangeParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSpaceIteratorRange();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIteratorRangeOrRefAccess().getSpaceIteratorRangeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1488:2: ( ruleSpaceIteratorRef )
                    {
                    // InternalNabla.g:1488:2: ( ruleSpaceIteratorRef )
                    // InternalNabla.g:1489:3: ruleSpaceIteratorRef
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIteratorRangeOrRefAccess().getSpaceIteratorRefParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSpaceIteratorRef();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIteratorRangeOrRefAccess().getSpaceIteratorRefParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IteratorRangeOrRef__Alternatives"


    // $ANTLR start "rule__TimeIteratorRef__Alternatives_1_0"
    // InternalNabla.g:1498:1: rule__TimeIteratorRef__Alternatives_1_0 : ( ( ( rule__TimeIteratorRef__InitAssignment_1_0_0 ) ) | ( ( rule__TimeIteratorRef__NextAssignment_1_0_1 ) ) );
    public final void rule__TimeIteratorRef__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1502:1: ( ( ( rule__TimeIteratorRef__InitAssignment_1_0_0 ) ) | ( ( rule__TimeIteratorRef__NextAssignment_1_0_1 ) ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==42) ) {
                alt20=1;
            }
            else if ( (LA20_0==63) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalNabla.g:1503:2: ( ( rule__TimeIteratorRef__InitAssignment_1_0_0 ) )
                    {
                    // InternalNabla.g:1503:2: ( ( rule__TimeIteratorRef__InitAssignment_1_0_0 ) )
                    // InternalNabla.g:1504:3: ( rule__TimeIteratorRef__InitAssignment_1_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeIteratorRefAccess().getInitAssignment_1_0_0()); 
                    }
                    // InternalNabla.g:1505:3: ( rule__TimeIteratorRef__InitAssignment_1_0_0 )
                    // InternalNabla.g:1505:4: rule__TimeIteratorRef__InitAssignment_1_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TimeIteratorRef__InitAssignment_1_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeIteratorRefAccess().getInitAssignment_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1509:2: ( ( rule__TimeIteratorRef__NextAssignment_1_0_1 ) )
                    {
                    // InternalNabla.g:1509:2: ( ( rule__TimeIteratorRef__NextAssignment_1_0_1 ) )
                    // InternalNabla.g:1510:3: ( rule__TimeIteratorRef__NextAssignment_1_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeIteratorRefAccess().getNextAssignment_1_0_1()); 
                    }
                    // InternalNabla.g:1511:3: ( rule__TimeIteratorRef__NextAssignment_1_0_1 )
                    // InternalNabla.g:1511:4: rule__TimeIteratorRef__NextAssignment_1_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TimeIteratorRef__NextAssignment_1_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeIteratorRefAccess().getNextAssignment_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIteratorRef__Alternatives_1_0"


    // $ANTLR start "rule__BasicType__Alternatives"
    // InternalNabla.g:1519:1: rule__BasicType__Alternatives : ( ( ( '\\u2115' ) ) | ( ( '\\u211D' ) ) | ( ( '\\u211D\\u00B2' ) ) | ( ( '\\u211D\\u00B2\\u02E3\\u00B2' ) ) | ( ( '\\u211D\\u00B3' ) ) | ( ( '\\u211D\\u00B3\\u02E3\\u00B3' ) ) | ( ( '\\u213E' ) ) );
    public final void rule__BasicType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1523:1: ( ( ( '\\u2115' ) ) | ( ( '\\u211D' ) ) | ( ( '\\u211D\\u00B2' ) ) | ( ( '\\u211D\\u00B2\\u02E3\\u00B2' ) ) | ( ( '\\u211D\\u00B3' ) ) | ( ( '\\u211D\\u00B3\\u02E3\\u00B3' ) ) | ( ( '\\u213E' ) ) )
            int alt21=7;
            switch ( input.LA(1) ) {
            case 22:
                {
                alt21=1;
                }
                break;
            case 23:
                {
                alt21=2;
                }
                break;
            case 24:
                {
                alt21=3;
                }
                break;
            case 25:
                {
                alt21=4;
                }
                break;
            case 26:
                {
                alt21=5;
                }
                break;
            case 27:
                {
                alt21=6;
                }
                break;
            case 28:
                {
                alt21=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }

            switch (alt21) {
                case 1 :
                    // InternalNabla.g:1524:2: ( ( '\\u2115' ) )
                    {
                    // InternalNabla.g:1524:2: ( ( '\\u2115' ) )
                    // InternalNabla.g:1525:3: ( '\\u2115' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBasicTypeAccess().getIntEnumLiteralDeclaration_0()); 
                    }
                    // InternalNabla.g:1526:3: ( '\\u2115' )
                    // InternalNabla.g:1526:4: '\\u2115'
                    {
                    match(input,22,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBasicTypeAccess().getIntEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1530:2: ( ( '\\u211D' ) )
                    {
                    // InternalNabla.g:1530:2: ( ( '\\u211D' ) )
                    // InternalNabla.g:1531:3: ( '\\u211D' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBasicTypeAccess().getRealEnumLiteralDeclaration_1()); 
                    }
                    // InternalNabla.g:1532:3: ( '\\u211D' )
                    // InternalNabla.g:1532:4: '\\u211D'
                    {
                    match(input,23,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBasicTypeAccess().getRealEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNabla.g:1536:2: ( ( '\\u211D\\u00B2' ) )
                    {
                    // InternalNabla.g:1536:2: ( ( '\\u211D\\u00B2' ) )
                    // InternalNabla.g:1537:3: ( '\\u211D\\u00B2' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBasicTypeAccess().getReal2EnumLiteralDeclaration_2()); 
                    }
                    // InternalNabla.g:1538:3: ( '\\u211D\\u00B2' )
                    // InternalNabla.g:1538:4: '\\u211D\\u00B2'
                    {
                    match(input,24,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBasicTypeAccess().getReal2EnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalNabla.g:1542:2: ( ( '\\u211D\\u00B2\\u02E3\\u00B2' ) )
                    {
                    // InternalNabla.g:1542:2: ( ( '\\u211D\\u00B2\\u02E3\\u00B2' ) )
                    // InternalNabla.g:1543:3: ( '\\u211D\\u00B2\\u02E3\\u00B2' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBasicTypeAccess().getReal2x2EnumLiteralDeclaration_3()); 
                    }
                    // InternalNabla.g:1544:3: ( '\\u211D\\u00B2\\u02E3\\u00B2' )
                    // InternalNabla.g:1544:4: '\\u211D\\u00B2\\u02E3\\u00B2'
                    {
                    match(input,25,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBasicTypeAccess().getReal2x2EnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalNabla.g:1548:2: ( ( '\\u211D\\u00B3' ) )
                    {
                    // InternalNabla.g:1548:2: ( ( '\\u211D\\u00B3' ) )
                    // InternalNabla.g:1549:3: ( '\\u211D\\u00B3' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBasicTypeAccess().getReal3EnumLiteralDeclaration_4()); 
                    }
                    // InternalNabla.g:1550:3: ( '\\u211D\\u00B3' )
                    // InternalNabla.g:1550:4: '\\u211D\\u00B3'
                    {
                    match(input,26,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBasicTypeAccess().getReal3EnumLiteralDeclaration_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalNabla.g:1554:2: ( ( '\\u211D\\u00B3\\u02E3\\u00B3' ) )
                    {
                    // InternalNabla.g:1554:2: ( ( '\\u211D\\u00B3\\u02E3\\u00B3' ) )
                    // InternalNabla.g:1555:3: ( '\\u211D\\u00B3\\u02E3\\u00B3' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBasicTypeAccess().getReal3x3EnumLiteralDeclaration_5()); 
                    }
                    // InternalNabla.g:1556:3: ( '\\u211D\\u00B3\\u02E3\\u00B3' )
                    // InternalNabla.g:1556:4: '\\u211D\\u00B3\\u02E3\\u00B3'
                    {
                    match(input,27,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBasicTypeAccess().getReal3x3EnumLiteralDeclaration_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalNabla.g:1560:2: ( ( '\\u213E' ) )
                    {
                    // InternalNabla.g:1560:2: ( ( '\\u213E' ) )
                    // InternalNabla.g:1561:3: ( '\\u213E' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBasicTypeAccess().getBoolEnumLiteralDeclaration_6()); 
                    }
                    // InternalNabla.g:1562:3: ( '\\u213E' )
                    // InternalNabla.g:1562:4: '\\u213E'
                    {
                    match(input,28,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBasicTypeAccess().getBoolEnumLiteralDeclaration_6()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BasicType__Alternatives"


    // $ANTLR start "rule__ItemType__Alternatives"
    // InternalNabla.g:1570:1: rule__ItemType__Alternatives : ( ( ( 'node' ) ) | ( ( 'cell' ) ) | ( ( 'face' ) ) );
    public final void rule__ItemType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1574:1: ( ( ( 'node' ) ) | ( ( 'cell' ) ) | ( ( 'face' ) ) )
            int alt22=3;
            switch ( input.LA(1) ) {
            case 29:
                {
                alt22=1;
                }
                break;
            case 30:
                {
                alt22=2;
                }
                break;
            case 31:
                {
                alt22=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // InternalNabla.g:1575:2: ( ( 'node' ) )
                    {
                    // InternalNabla.g:1575:2: ( ( 'node' ) )
                    // InternalNabla.g:1576:3: ( 'node' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItemTypeAccess().getNodeEnumLiteralDeclaration_0()); 
                    }
                    // InternalNabla.g:1577:3: ( 'node' )
                    // InternalNabla.g:1577:4: 'node'
                    {
                    match(input,29,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItemTypeAccess().getNodeEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalNabla.g:1581:2: ( ( 'cell' ) )
                    {
                    // InternalNabla.g:1581:2: ( ( 'cell' ) )
                    // InternalNabla.g:1582:3: ( 'cell' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItemTypeAccess().getCellEnumLiteralDeclaration_1()); 
                    }
                    // InternalNabla.g:1583:3: ( 'cell' )
                    // InternalNabla.g:1583:4: 'cell'
                    {
                    match(input,30,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItemTypeAccess().getCellEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalNabla.g:1587:2: ( ( 'face' ) )
                    {
                    // InternalNabla.g:1587:2: ( ( 'face' ) )
                    // InternalNabla.g:1588:3: ( 'face' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getItemTypeAccess().getFaceEnumLiteralDeclaration_2()); 
                    }
                    // InternalNabla.g:1589:3: ( 'face' )
                    // InternalNabla.g:1589:4: 'face'
                    {
                    match(input,31,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getItemTypeAccess().getFaceEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItemType__Alternatives"


    // $ANTLR start "rule__NablaModule__Group__0"
    // InternalNabla.g:1597:1: rule__NablaModule__Group__0 : rule__NablaModule__Group__0__Impl rule__NablaModule__Group__1 ;
    public final void rule__NablaModule__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1601:1: ( rule__NablaModule__Group__0__Impl rule__NablaModule__Group__1 )
            // InternalNabla.g:1602:2: rule__NablaModule__Group__0__Impl rule__NablaModule__Group__1
            {
            pushFollow(FOLLOW_3);
            rule__NablaModule__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__NablaModule__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__Group__0"


    // $ANTLR start "rule__NablaModule__Group__0__Impl"
    // InternalNabla.g:1609:1: rule__NablaModule__Group__0__Impl : ( 'module' ) ;
    public final void rule__NablaModule__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1613:1: ( ( 'module' ) )
            // InternalNabla.g:1614:1: ( 'module' )
            {
            // InternalNabla.g:1614:1: ( 'module' )
            // InternalNabla.g:1615:2: 'module'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNablaModuleAccess().getModuleKeyword_0()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNablaModuleAccess().getModuleKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__Group__0__Impl"


    // $ANTLR start "rule__NablaModule__Group__1"
    // InternalNabla.g:1624:1: rule__NablaModule__Group__1 : rule__NablaModule__Group__1__Impl rule__NablaModule__Group__2 ;
    public final void rule__NablaModule__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1628:1: ( rule__NablaModule__Group__1__Impl rule__NablaModule__Group__2 )
            // InternalNabla.g:1629:2: rule__NablaModule__Group__1__Impl rule__NablaModule__Group__2
            {
            pushFollow(FOLLOW_4);
            rule__NablaModule__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__NablaModule__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__Group__1"


    // $ANTLR start "rule__NablaModule__Group__1__Impl"
    // InternalNabla.g:1636:1: rule__NablaModule__Group__1__Impl : ( ( rule__NablaModule__NameAssignment_1 ) ) ;
    public final void rule__NablaModule__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1640:1: ( ( ( rule__NablaModule__NameAssignment_1 ) ) )
            // InternalNabla.g:1641:1: ( ( rule__NablaModule__NameAssignment_1 ) )
            {
            // InternalNabla.g:1641:1: ( ( rule__NablaModule__NameAssignment_1 ) )
            // InternalNabla.g:1642:2: ( rule__NablaModule__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNablaModuleAccess().getNameAssignment_1()); 
            }
            // InternalNabla.g:1643:2: ( rule__NablaModule__NameAssignment_1 )
            // InternalNabla.g:1643:3: rule__NablaModule__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__NablaModule__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNablaModuleAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__Group__1__Impl"


    // $ANTLR start "rule__NablaModule__Group__2"
    // InternalNabla.g:1651:1: rule__NablaModule__Group__2 : rule__NablaModule__Group__2__Impl rule__NablaModule__Group__3 ;
    public final void rule__NablaModule__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1655:1: ( rule__NablaModule__Group__2__Impl rule__NablaModule__Group__3 )
            // InternalNabla.g:1656:2: rule__NablaModule__Group__2__Impl rule__NablaModule__Group__3
            {
            pushFollow(FOLLOW_5);
            rule__NablaModule__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__NablaModule__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__Group__2"


    // $ANTLR start "rule__NablaModule__Group__2__Impl"
    // InternalNabla.g:1663:1: rule__NablaModule__Group__2__Impl : ( ';' ) ;
    public final void rule__NablaModule__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1667:1: ( ( ';' ) )
            // InternalNabla.g:1668:1: ( ';' )
            {
            // InternalNabla.g:1668:1: ( ';' )
            // InternalNabla.g:1669:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNablaModuleAccess().getSemicolonKeyword_2()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNablaModuleAccess().getSemicolonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__Group__2__Impl"


    // $ANTLR start "rule__NablaModule__Group__3"
    // InternalNabla.g:1678:1: rule__NablaModule__Group__3 : rule__NablaModule__Group__3__Impl rule__NablaModule__Group__4 ;
    public final void rule__NablaModule__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1682:1: ( rule__NablaModule__Group__3__Impl rule__NablaModule__Group__4 )
            // InternalNabla.g:1683:2: rule__NablaModule__Group__3__Impl rule__NablaModule__Group__4
            {
            pushFollow(FOLLOW_5);
            rule__NablaModule__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__NablaModule__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__Group__3"


    // $ANTLR start "rule__NablaModule__Group__3__Impl"
    // InternalNabla.g:1690:1: rule__NablaModule__Group__3__Impl : ( ( rule__NablaModule__ImportsAssignment_3 )* ) ;
    public final void rule__NablaModule__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1694:1: ( ( ( rule__NablaModule__ImportsAssignment_3 )* ) )
            // InternalNabla.g:1695:1: ( ( rule__NablaModule__ImportsAssignment_3 )* )
            {
            // InternalNabla.g:1695:1: ( ( rule__NablaModule__ImportsAssignment_3 )* )
            // InternalNabla.g:1696:2: ( rule__NablaModule__ImportsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNablaModuleAccess().getImportsAssignment_3()); 
            }
            // InternalNabla.g:1697:2: ( rule__NablaModule__ImportsAssignment_3 )*
            loop23:
            do {
                int alt23=2;
                int LA23_0 = input.LA(1);

                if ( (LA23_0==34) ) {
                    alt23=1;
                }


                switch (alt23) {
            	case 1 :
            	    // InternalNabla.g:1697:3: rule__NablaModule__ImportsAssignment_3
            	    {
            	    pushFollow(FOLLOW_6);
            	    rule__NablaModule__ImportsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop23;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNablaModuleAccess().getImportsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__Group__3__Impl"


    // $ANTLR start "rule__NablaModule__Group__4"
    // InternalNabla.g:1705:1: rule__NablaModule__Group__4 : rule__NablaModule__Group__4__Impl rule__NablaModule__Group__5 ;
    public final void rule__NablaModule__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1709:1: ( rule__NablaModule__Group__4__Impl rule__NablaModule__Group__5 )
            // InternalNabla.g:1710:2: rule__NablaModule__Group__4__Impl rule__NablaModule__Group__5
            {
            pushFollow(FOLLOW_5);
            rule__NablaModule__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__NablaModule__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__Group__4"


    // $ANTLR start "rule__NablaModule__Group__4__Impl"
    // InternalNabla.g:1717:1: rule__NablaModule__Group__4__Impl : ( ( rule__NablaModule__BlocksAssignment_4 )* ) ;
    public final void rule__NablaModule__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1721:1: ( ( ( rule__NablaModule__BlocksAssignment_4 )* ) )
            // InternalNabla.g:1722:1: ( ( rule__NablaModule__BlocksAssignment_4 )* )
            {
            // InternalNabla.g:1722:1: ( ( rule__NablaModule__BlocksAssignment_4 )* )
            // InternalNabla.g:1723:2: ( rule__NablaModule__BlocksAssignment_4 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNablaModuleAccess().getBlocksAssignment_4()); 
            }
            // InternalNabla.g:1724:2: ( rule__NablaModule__BlocksAssignment_4 )*
            loop24:
            do {
                int alt24=2;
                int LA24_0 = input.LA(1);

                if ( (LA24_0==35||LA24_0==38) ) {
                    alt24=1;
                }


                switch (alt24) {
            	case 1 :
            	    // InternalNabla.g:1724:3: rule__NablaModule__BlocksAssignment_4
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__NablaModule__BlocksAssignment_4();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop24;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNablaModuleAccess().getBlocksAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__Group__4__Impl"


    // $ANTLR start "rule__NablaModule__Group__5"
    // InternalNabla.g:1732:1: rule__NablaModule__Group__5 : rule__NablaModule__Group__5__Impl rule__NablaModule__Group__6 ;
    public final void rule__NablaModule__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1736:1: ( rule__NablaModule__Group__5__Impl rule__NablaModule__Group__6 )
            // InternalNabla.g:1737:2: rule__NablaModule__Group__5__Impl rule__NablaModule__Group__6
            {
            pushFollow(FOLLOW_5);
            rule__NablaModule__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__NablaModule__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__Group__5"


    // $ANTLR start "rule__NablaModule__Group__5__Impl"
    // InternalNabla.g:1744:1: rule__NablaModule__Group__5__Impl : ( ( rule__NablaModule__VariablesAssignment_5 )* ) ;
    public final void rule__NablaModule__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1748:1: ( ( ( rule__NablaModule__VariablesAssignment_5 )* ) )
            // InternalNabla.g:1749:1: ( ( rule__NablaModule__VariablesAssignment_5 )* )
            {
            // InternalNabla.g:1749:1: ( ( rule__NablaModule__VariablesAssignment_5 )* )
            // InternalNabla.g:1750:2: ( rule__NablaModule__VariablesAssignment_5 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNablaModuleAccess().getVariablesAssignment_5()); 
            }
            // InternalNabla.g:1751:2: ( rule__NablaModule__VariablesAssignment_5 )*
            loop25:
            do {
                int alt25=2;
                int LA25_0 = input.LA(1);

                if ( ((LA25_0>=22 && LA25_0<=28)||LA25_0==60) ) {
                    alt25=1;
                }


                switch (alt25) {
            	case 1 :
            	    // InternalNabla.g:1751:3: rule__NablaModule__VariablesAssignment_5
            	    {
            	    pushFollow(FOLLOW_8);
            	    rule__NablaModule__VariablesAssignment_5();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop25;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNablaModuleAccess().getVariablesAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__Group__5__Impl"


    // $ANTLR start "rule__NablaModule__Group__6"
    // InternalNabla.g:1759:1: rule__NablaModule__Group__6 : rule__NablaModule__Group__6__Impl ;
    public final void rule__NablaModule__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1763:1: ( rule__NablaModule__Group__6__Impl )
            // InternalNabla.g:1764:2: rule__NablaModule__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NablaModule__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__Group__6"


    // $ANTLR start "rule__NablaModule__Group__6__Impl"
    // InternalNabla.g:1770:1: rule__NablaModule__Group__6__Impl : ( ( rule__NablaModule__JobsAssignment_6 )* ) ;
    public final void rule__NablaModule__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1774:1: ( ( ( rule__NablaModule__JobsAssignment_6 )* ) )
            // InternalNabla.g:1775:1: ( ( rule__NablaModule__JobsAssignment_6 )* )
            {
            // InternalNabla.g:1775:1: ( ( rule__NablaModule__JobsAssignment_6 )* )
            // InternalNabla.g:1776:2: ( rule__NablaModule__JobsAssignment_6 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNablaModuleAccess().getJobsAssignment_6()); 
            }
            // InternalNabla.g:1777:2: ( rule__NablaModule__JobsAssignment_6 )*
            loop26:
            do {
                int alt26=2;
                int LA26_0 = input.LA(1);

                if ( (LA26_0==RULE_ID) ) {
                    alt26=1;
                }


                switch (alt26) {
            	case 1 :
            	    // InternalNabla.g:1777:3: rule__NablaModule__JobsAssignment_6
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__NablaModule__JobsAssignment_6();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop26;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNablaModuleAccess().getJobsAssignment_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__Group__6__Impl"


    // $ANTLR start "rule__Import__Group__0"
    // InternalNabla.g:1786:1: rule__Import__Group__0 : rule__Import__Group__0__Impl rule__Import__Group__1 ;
    public final void rule__Import__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1790:1: ( rule__Import__Group__0__Impl rule__Import__Group__1 )
            // InternalNabla.g:1791:2: rule__Import__Group__0__Impl rule__Import__Group__1
            {
            pushFollow(FOLLOW_3);
            rule__Import__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Import__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group__0"


    // $ANTLR start "rule__Import__Group__0__Impl"
    // InternalNabla.g:1798:1: rule__Import__Group__0__Impl : ( 'with' ) ;
    public final void rule__Import__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1802:1: ( ( 'with' ) )
            // InternalNabla.g:1803:1: ( 'with' )
            {
            // InternalNabla.g:1803:1: ( 'with' )
            // InternalNabla.g:1804:2: 'with'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportAccess().getWithKeyword_0()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportAccess().getWithKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group__0__Impl"


    // $ANTLR start "rule__Import__Group__1"
    // InternalNabla.g:1813:1: rule__Import__Group__1 : rule__Import__Group__1__Impl rule__Import__Group__2 ;
    public final void rule__Import__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1817:1: ( rule__Import__Group__1__Impl rule__Import__Group__2 )
            // InternalNabla.g:1818:2: rule__Import__Group__1__Impl rule__Import__Group__2
            {
            pushFollow(FOLLOW_4);
            rule__Import__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Import__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group__1"


    // $ANTLR start "rule__Import__Group__1__Impl"
    // InternalNabla.g:1825:1: rule__Import__Group__1__Impl : ( ( rule__Import__ImportedNamespaceAssignment_1 ) ) ;
    public final void rule__Import__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1829:1: ( ( ( rule__Import__ImportedNamespaceAssignment_1 ) ) )
            // InternalNabla.g:1830:1: ( ( rule__Import__ImportedNamespaceAssignment_1 ) )
            {
            // InternalNabla.g:1830:1: ( ( rule__Import__ImportedNamespaceAssignment_1 ) )
            // InternalNabla.g:1831:2: ( rule__Import__ImportedNamespaceAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); 
            }
            // InternalNabla.g:1832:2: ( rule__Import__ImportedNamespaceAssignment_1 )
            // InternalNabla.g:1832:3: rule__Import__ImportedNamespaceAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Import__ImportedNamespaceAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group__1__Impl"


    // $ANTLR start "rule__Import__Group__2"
    // InternalNabla.g:1840:1: rule__Import__Group__2 : rule__Import__Group__2__Impl ;
    public final void rule__Import__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1844:1: ( rule__Import__Group__2__Impl )
            // InternalNabla.g:1845:2: rule__Import__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Import__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group__2"


    // $ANTLR start "rule__Import__Group__2__Impl"
    // InternalNabla.g:1851:1: rule__Import__Group__2__Impl : ( ';' ) ;
    public final void rule__Import__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1855:1: ( ( ';' ) )
            // InternalNabla.g:1856:1: ( ';' )
            {
            // InternalNabla.g:1856:1: ( ';' )
            // InternalNabla.g:1857:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportAccess().getSemicolonKeyword_2()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportAccess().getSemicolonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group__2__Impl"


    // $ANTLR start "rule__DeclarationBlock__Group_0__0"
    // InternalNabla.g:1867:1: rule__DeclarationBlock__Group_0__0 : rule__DeclarationBlock__Group_0__0__Impl rule__DeclarationBlock__Group_0__1 ;
    public final void rule__DeclarationBlock__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1871:1: ( rule__DeclarationBlock__Group_0__0__Impl rule__DeclarationBlock__Group_0__1 )
            // InternalNabla.g:1872:2: rule__DeclarationBlock__Group_0__0__Impl rule__DeclarationBlock__Group_0__1
            {
            pushFollow(FOLLOW_10);
            rule__DeclarationBlock__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DeclarationBlock__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_0__0"


    // $ANTLR start "rule__DeclarationBlock__Group_0__0__Impl"
    // InternalNabla.g:1879:1: rule__DeclarationBlock__Group_0__0__Impl : ( () ) ;
    public final void rule__DeclarationBlock__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1883:1: ( ( () ) )
            // InternalNabla.g:1884:1: ( () )
            {
            // InternalNabla.g:1884:1: ( () )
            // InternalNabla.g:1885:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationBlockAccess().getConnectivityDeclarationBlockAction_0_0()); 
            }
            // InternalNabla.g:1886:2: ()
            // InternalNabla.g:1886:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationBlockAccess().getConnectivityDeclarationBlockAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_0__0__Impl"


    // $ANTLR start "rule__DeclarationBlock__Group_0__1"
    // InternalNabla.g:1894:1: rule__DeclarationBlock__Group_0__1 : rule__DeclarationBlock__Group_0__1__Impl rule__DeclarationBlock__Group_0__2 ;
    public final void rule__DeclarationBlock__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1898:1: ( rule__DeclarationBlock__Group_0__1__Impl rule__DeclarationBlock__Group_0__2 )
            // InternalNabla.g:1899:2: rule__DeclarationBlock__Group_0__1__Impl rule__DeclarationBlock__Group_0__2
            {
            pushFollow(FOLLOW_11);
            rule__DeclarationBlock__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DeclarationBlock__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_0__1"


    // $ANTLR start "rule__DeclarationBlock__Group_0__1__Impl"
    // InternalNabla.g:1906:1: rule__DeclarationBlock__Group_0__1__Impl : ( 'connectivities' ) ;
    public final void rule__DeclarationBlock__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1910:1: ( ( 'connectivities' ) )
            // InternalNabla.g:1911:1: ( 'connectivities' )
            {
            // InternalNabla.g:1911:1: ( 'connectivities' )
            // InternalNabla.g:1912:2: 'connectivities'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationBlockAccess().getConnectivitiesKeyword_0_1()); 
            }
            match(input,35,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationBlockAccess().getConnectivitiesKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_0__1__Impl"


    // $ANTLR start "rule__DeclarationBlock__Group_0__2"
    // InternalNabla.g:1921:1: rule__DeclarationBlock__Group_0__2 : rule__DeclarationBlock__Group_0__2__Impl rule__DeclarationBlock__Group_0__3 ;
    public final void rule__DeclarationBlock__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1925:1: ( rule__DeclarationBlock__Group_0__2__Impl rule__DeclarationBlock__Group_0__3 )
            // InternalNabla.g:1926:2: rule__DeclarationBlock__Group_0__2__Impl rule__DeclarationBlock__Group_0__3
            {
            pushFollow(FOLLOW_12);
            rule__DeclarationBlock__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DeclarationBlock__Group_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_0__2"


    // $ANTLR start "rule__DeclarationBlock__Group_0__2__Impl"
    // InternalNabla.g:1933:1: rule__DeclarationBlock__Group_0__2__Impl : ( '{' ) ;
    public final void rule__DeclarationBlock__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1937:1: ( ( '{' ) )
            // InternalNabla.g:1938:1: ( '{' )
            {
            // InternalNabla.g:1938:1: ( '{' )
            // InternalNabla.g:1939:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationBlockAccess().getLeftCurlyBracketKeyword_0_2()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationBlockAccess().getLeftCurlyBracketKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_0__2__Impl"


    // $ANTLR start "rule__DeclarationBlock__Group_0__3"
    // InternalNabla.g:1948:1: rule__DeclarationBlock__Group_0__3 : rule__DeclarationBlock__Group_0__3__Impl rule__DeclarationBlock__Group_0__4 ;
    public final void rule__DeclarationBlock__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1952:1: ( rule__DeclarationBlock__Group_0__3__Impl rule__DeclarationBlock__Group_0__4 )
            // InternalNabla.g:1953:2: rule__DeclarationBlock__Group_0__3__Impl rule__DeclarationBlock__Group_0__4
            {
            pushFollow(FOLLOW_12);
            rule__DeclarationBlock__Group_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DeclarationBlock__Group_0__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_0__3"


    // $ANTLR start "rule__DeclarationBlock__Group_0__3__Impl"
    // InternalNabla.g:1960:1: rule__DeclarationBlock__Group_0__3__Impl : ( ( rule__DeclarationBlock__ConnectivitiesAssignment_0_3 )* ) ;
    public final void rule__DeclarationBlock__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1964:1: ( ( ( rule__DeclarationBlock__ConnectivitiesAssignment_0_3 )* ) )
            // InternalNabla.g:1965:1: ( ( rule__DeclarationBlock__ConnectivitiesAssignment_0_3 )* )
            {
            // InternalNabla.g:1965:1: ( ( rule__DeclarationBlock__ConnectivitiesAssignment_0_3 )* )
            // InternalNabla.g:1966:2: ( rule__DeclarationBlock__ConnectivitiesAssignment_0_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationBlockAccess().getConnectivitiesAssignment_0_3()); 
            }
            // InternalNabla.g:1967:2: ( rule__DeclarationBlock__ConnectivitiesAssignment_0_3 )*
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( (LA27_0==RULE_ID) ) {
                    alt27=1;
                }


                switch (alt27) {
            	case 1 :
            	    // InternalNabla.g:1967:3: rule__DeclarationBlock__ConnectivitiesAssignment_0_3
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__DeclarationBlock__ConnectivitiesAssignment_0_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationBlockAccess().getConnectivitiesAssignment_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_0__3__Impl"


    // $ANTLR start "rule__DeclarationBlock__Group_0__4"
    // InternalNabla.g:1975:1: rule__DeclarationBlock__Group_0__4 : rule__DeclarationBlock__Group_0__4__Impl ;
    public final void rule__DeclarationBlock__Group_0__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1979:1: ( rule__DeclarationBlock__Group_0__4__Impl )
            // InternalNabla.g:1980:2: rule__DeclarationBlock__Group_0__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DeclarationBlock__Group_0__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_0__4"


    // $ANTLR start "rule__DeclarationBlock__Group_0__4__Impl"
    // InternalNabla.g:1986:1: rule__DeclarationBlock__Group_0__4__Impl : ( '}' ) ;
    public final void rule__DeclarationBlock__Group_0__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:1990:1: ( ( '}' ) )
            // InternalNabla.g:1991:1: ( '}' )
            {
            // InternalNabla.g:1991:1: ( '}' )
            // InternalNabla.g:1992:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationBlockAccess().getRightCurlyBracketKeyword_0_4()); 
            }
            match(input,37,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationBlockAccess().getRightCurlyBracketKeyword_0_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_0__4__Impl"


    // $ANTLR start "rule__DeclarationBlock__Group_1__0"
    // InternalNabla.g:2002:1: rule__DeclarationBlock__Group_1__0 : rule__DeclarationBlock__Group_1__0__Impl rule__DeclarationBlock__Group_1__1 ;
    public final void rule__DeclarationBlock__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2006:1: ( rule__DeclarationBlock__Group_1__0__Impl rule__DeclarationBlock__Group_1__1 )
            // InternalNabla.g:2007:2: rule__DeclarationBlock__Group_1__0__Impl rule__DeclarationBlock__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__DeclarationBlock__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DeclarationBlock__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_1__0"


    // $ANTLR start "rule__DeclarationBlock__Group_1__0__Impl"
    // InternalNabla.g:2014:1: rule__DeclarationBlock__Group_1__0__Impl : ( () ) ;
    public final void rule__DeclarationBlock__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2018:1: ( ( () ) )
            // InternalNabla.g:2019:1: ( () )
            {
            // InternalNabla.g:2019:1: ( () )
            // InternalNabla.g:2020:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationBlockAccess().getFunctionDeclarationBlockAction_1_0()); 
            }
            // InternalNabla.g:2021:2: ()
            // InternalNabla.g:2021:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationBlockAccess().getFunctionDeclarationBlockAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_1__0__Impl"


    // $ANTLR start "rule__DeclarationBlock__Group_1__1"
    // InternalNabla.g:2029:1: rule__DeclarationBlock__Group_1__1 : rule__DeclarationBlock__Group_1__1__Impl rule__DeclarationBlock__Group_1__2 ;
    public final void rule__DeclarationBlock__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2033:1: ( rule__DeclarationBlock__Group_1__1__Impl rule__DeclarationBlock__Group_1__2 )
            // InternalNabla.g:2034:2: rule__DeclarationBlock__Group_1__1__Impl rule__DeclarationBlock__Group_1__2
            {
            pushFollow(FOLLOW_11);
            rule__DeclarationBlock__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DeclarationBlock__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_1__1"


    // $ANTLR start "rule__DeclarationBlock__Group_1__1__Impl"
    // InternalNabla.g:2041:1: rule__DeclarationBlock__Group_1__1__Impl : ( 'functions' ) ;
    public final void rule__DeclarationBlock__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2045:1: ( ( 'functions' ) )
            // InternalNabla.g:2046:1: ( 'functions' )
            {
            // InternalNabla.g:2046:1: ( 'functions' )
            // InternalNabla.g:2047:2: 'functions'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationBlockAccess().getFunctionsKeyword_1_1()); 
            }
            match(input,38,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationBlockAccess().getFunctionsKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_1__1__Impl"


    // $ANTLR start "rule__DeclarationBlock__Group_1__2"
    // InternalNabla.g:2056:1: rule__DeclarationBlock__Group_1__2 : rule__DeclarationBlock__Group_1__2__Impl rule__DeclarationBlock__Group_1__3 ;
    public final void rule__DeclarationBlock__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2060:1: ( rule__DeclarationBlock__Group_1__2__Impl rule__DeclarationBlock__Group_1__3 )
            // InternalNabla.g:2061:2: rule__DeclarationBlock__Group_1__2__Impl rule__DeclarationBlock__Group_1__3
            {
            pushFollow(FOLLOW_12);
            rule__DeclarationBlock__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DeclarationBlock__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_1__2"


    // $ANTLR start "rule__DeclarationBlock__Group_1__2__Impl"
    // InternalNabla.g:2068:1: rule__DeclarationBlock__Group_1__2__Impl : ( '{' ) ;
    public final void rule__DeclarationBlock__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2072:1: ( ( '{' ) )
            // InternalNabla.g:2073:1: ( '{' )
            {
            // InternalNabla.g:2073:1: ( '{' )
            // InternalNabla.g:2074:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationBlockAccess().getLeftCurlyBracketKeyword_1_2()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationBlockAccess().getLeftCurlyBracketKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_1__2__Impl"


    // $ANTLR start "rule__DeclarationBlock__Group_1__3"
    // InternalNabla.g:2083:1: rule__DeclarationBlock__Group_1__3 : rule__DeclarationBlock__Group_1__3__Impl rule__DeclarationBlock__Group_1__4 ;
    public final void rule__DeclarationBlock__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2087:1: ( rule__DeclarationBlock__Group_1__3__Impl rule__DeclarationBlock__Group_1__4 )
            // InternalNabla.g:2088:2: rule__DeclarationBlock__Group_1__3__Impl rule__DeclarationBlock__Group_1__4
            {
            pushFollow(FOLLOW_12);
            rule__DeclarationBlock__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DeclarationBlock__Group_1__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_1__3"


    // $ANTLR start "rule__DeclarationBlock__Group_1__3__Impl"
    // InternalNabla.g:2095:1: rule__DeclarationBlock__Group_1__3__Impl : ( ( rule__DeclarationBlock__FunctionsAssignment_1_3 )* ) ;
    public final void rule__DeclarationBlock__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2099:1: ( ( ( rule__DeclarationBlock__FunctionsAssignment_1_3 )* ) )
            // InternalNabla.g:2100:1: ( ( rule__DeclarationBlock__FunctionsAssignment_1_3 )* )
            {
            // InternalNabla.g:2100:1: ( ( rule__DeclarationBlock__FunctionsAssignment_1_3 )* )
            // InternalNabla.g:2101:2: ( rule__DeclarationBlock__FunctionsAssignment_1_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationBlockAccess().getFunctionsAssignment_1_3()); 
            }
            // InternalNabla.g:2102:2: ( rule__DeclarationBlock__FunctionsAssignment_1_3 )*
            loop28:
            do {
                int alt28=2;
                int LA28_0 = input.LA(1);

                if ( (LA28_0==RULE_ID) ) {
                    alt28=1;
                }


                switch (alt28) {
            	case 1 :
            	    // InternalNabla.g:2102:3: rule__DeclarationBlock__FunctionsAssignment_1_3
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__DeclarationBlock__FunctionsAssignment_1_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop28;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationBlockAccess().getFunctionsAssignment_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_1__3__Impl"


    // $ANTLR start "rule__DeclarationBlock__Group_1__4"
    // InternalNabla.g:2110:1: rule__DeclarationBlock__Group_1__4 : rule__DeclarationBlock__Group_1__4__Impl ;
    public final void rule__DeclarationBlock__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2114:1: ( rule__DeclarationBlock__Group_1__4__Impl )
            // InternalNabla.g:2115:2: rule__DeclarationBlock__Group_1__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DeclarationBlock__Group_1__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_1__4"


    // $ANTLR start "rule__DeclarationBlock__Group_1__4__Impl"
    // InternalNabla.g:2121:1: rule__DeclarationBlock__Group_1__4__Impl : ( '}' ) ;
    public final void rule__DeclarationBlock__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2125:1: ( ( '}' ) )
            // InternalNabla.g:2126:1: ( '}' )
            {
            // InternalNabla.g:2126:1: ( '}' )
            // InternalNabla.g:2127:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationBlockAccess().getRightCurlyBracketKeyword_1_4()); 
            }
            match(input,37,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationBlockAccess().getRightCurlyBracketKeyword_1_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__Group_1__4__Impl"


    // $ANTLR start "rule__Job__Group_0__0"
    // InternalNabla.g:2137:1: rule__Job__Group_0__0 : rule__Job__Group_0__0__Impl rule__Job__Group_0__1 ;
    public final void rule__Job__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2141:1: ( rule__Job__Group_0__0__Impl rule__Job__Group_0__1 )
            // InternalNabla.g:2142:2: rule__Job__Group_0__0__Impl rule__Job__Group_0__1
            {
            pushFollow(FOLLOW_3);
            rule__Job__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Job__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_0__0"


    // $ANTLR start "rule__Job__Group_0__0__Impl"
    // InternalNabla.g:2149:1: rule__Job__Group_0__0__Impl : ( () ) ;
    public final void rule__Job__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2153:1: ( ( () ) )
            // InternalNabla.g:2154:1: ( () )
            {
            // InternalNabla.g:2154:1: ( () )
            // InternalNabla.g:2155:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getInstructionJobAction_0_0()); 
            }
            // InternalNabla.g:2156:2: ()
            // InternalNabla.g:2156:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getInstructionJobAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_0__0__Impl"


    // $ANTLR start "rule__Job__Group_0__1"
    // InternalNabla.g:2164:1: rule__Job__Group_0__1 : rule__Job__Group_0__1__Impl rule__Job__Group_0__2 ;
    public final void rule__Job__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2168:1: ( rule__Job__Group_0__1__Impl rule__Job__Group_0__2 )
            // InternalNabla.g:2169:2: rule__Job__Group_0__1__Impl rule__Job__Group_0__2
            {
            pushFollow(FOLLOW_14);
            rule__Job__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Job__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_0__1"


    // $ANTLR start "rule__Job__Group_0__1__Impl"
    // InternalNabla.g:2176:1: rule__Job__Group_0__1__Impl : ( ( rule__Job__NameAssignment_0_1 ) ) ;
    public final void rule__Job__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2180:1: ( ( ( rule__Job__NameAssignment_0_1 ) ) )
            // InternalNabla.g:2181:1: ( ( rule__Job__NameAssignment_0_1 ) )
            {
            // InternalNabla.g:2181:1: ( ( rule__Job__NameAssignment_0_1 ) )
            // InternalNabla.g:2182:2: ( rule__Job__NameAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getNameAssignment_0_1()); 
            }
            // InternalNabla.g:2183:2: ( rule__Job__NameAssignment_0_1 )
            // InternalNabla.g:2183:3: rule__Job__NameAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Job__NameAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getNameAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_0__1__Impl"


    // $ANTLR start "rule__Job__Group_0__2"
    // InternalNabla.g:2191:1: rule__Job__Group_0__2 : rule__Job__Group_0__2__Impl rule__Job__Group_0__3 ;
    public final void rule__Job__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2195:1: ( rule__Job__Group_0__2__Impl rule__Job__Group_0__3 )
            // InternalNabla.g:2196:2: rule__Job__Group_0__2__Impl rule__Job__Group_0__3
            {
            pushFollow(FOLLOW_15);
            rule__Job__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Job__Group_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_0__2"


    // $ANTLR start "rule__Job__Group_0__2__Impl"
    // InternalNabla.g:2203:1: rule__Job__Group_0__2__Impl : ( ':' ) ;
    public final void rule__Job__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2207:1: ( ( ':' ) )
            // InternalNabla.g:2208:1: ( ':' )
            {
            // InternalNabla.g:2208:1: ( ':' )
            // InternalNabla.g:2209:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getColonKeyword_0_2()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getColonKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_0__2__Impl"


    // $ANTLR start "rule__Job__Group_0__3"
    // InternalNabla.g:2218:1: rule__Job__Group_0__3 : rule__Job__Group_0__3__Impl ;
    public final void rule__Job__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2222:1: ( rule__Job__Group_0__3__Impl )
            // InternalNabla.g:2223:2: rule__Job__Group_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Job__Group_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_0__3"


    // $ANTLR start "rule__Job__Group_0__3__Impl"
    // InternalNabla.g:2229:1: rule__Job__Group_0__3__Impl : ( ( rule__Job__InstructionAssignment_0_3 ) ) ;
    public final void rule__Job__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2233:1: ( ( ( rule__Job__InstructionAssignment_0_3 ) ) )
            // InternalNabla.g:2234:1: ( ( rule__Job__InstructionAssignment_0_3 ) )
            {
            // InternalNabla.g:2234:1: ( ( rule__Job__InstructionAssignment_0_3 ) )
            // InternalNabla.g:2235:2: ( rule__Job__InstructionAssignment_0_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getInstructionAssignment_0_3()); 
            }
            // InternalNabla.g:2236:2: ( rule__Job__InstructionAssignment_0_3 )
            // InternalNabla.g:2236:3: rule__Job__InstructionAssignment_0_3
            {
            pushFollow(FOLLOW_2);
            rule__Job__InstructionAssignment_0_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getInstructionAssignment_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_0__3__Impl"


    // $ANTLR start "rule__Job__Group_1__0"
    // InternalNabla.g:2245:1: rule__Job__Group_1__0 : rule__Job__Group_1__0__Impl rule__Job__Group_1__1 ;
    public final void rule__Job__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2249:1: ( rule__Job__Group_1__0__Impl rule__Job__Group_1__1 )
            // InternalNabla.g:2250:2: rule__Job__Group_1__0__Impl rule__Job__Group_1__1
            {
            pushFollow(FOLLOW_3);
            rule__Job__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Job__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__0"


    // $ANTLR start "rule__Job__Group_1__0__Impl"
    // InternalNabla.g:2257:1: rule__Job__Group_1__0__Impl : ( () ) ;
    public final void rule__Job__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2261:1: ( ( () ) )
            // InternalNabla.g:2262:1: ( () )
            {
            // InternalNabla.g:2262:1: ( () )
            // InternalNabla.g:2263:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getTimeLoopJobAction_1_0()); 
            }
            // InternalNabla.g:2264:2: ()
            // InternalNabla.g:2264:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getTimeLoopJobAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__0__Impl"


    // $ANTLR start "rule__Job__Group_1__1"
    // InternalNabla.g:2272:1: rule__Job__Group_1__1 : rule__Job__Group_1__1__Impl rule__Job__Group_1__2 ;
    public final void rule__Job__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2276:1: ( rule__Job__Group_1__1__Impl rule__Job__Group_1__2 )
            // InternalNabla.g:2277:2: rule__Job__Group_1__1__Impl rule__Job__Group_1__2
            {
            pushFollow(FOLLOW_14);
            rule__Job__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Job__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__1"


    // $ANTLR start "rule__Job__Group_1__1__Impl"
    // InternalNabla.g:2284:1: rule__Job__Group_1__1__Impl : ( ( rule__Job__NameAssignment_1_1 ) ) ;
    public final void rule__Job__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2288:1: ( ( ( rule__Job__NameAssignment_1_1 ) ) )
            // InternalNabla.g:2289:1: ( ( rule__Job__NameAssignment_1_1 ) )
            {
            // InternalNabla.g:2289:1: ( ( rule__Job__NameAssignment_1_1 ) )
            // InternalNabla.g:2290:2: ( rule__Job__NameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getNameAssignment_1_1()); 
            }
            // InternalNabla.g:2291:2: ( rule__Job__NameAssignment_1_1 )
            // InternalNabla.g:2291:3: rule__Job__NameAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Job__NameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__1__Impl"


    // $ANTLR start "rule__Job__Group_1__2"
    // InternalNabla.g:2299:1: rule__Job__Group_1__2 : rule__Job__Group_1__2__Impl rule__Job__Group_1__3 ;
    public final void rule__Job__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2303:1: ( rule__Job__Group_1__2__Impl rule__Job__Group_1__3 )
            // InternalNabla.g:2304:2: rule__Job__Group_1__2__Impl rule__Job__Group_1__3
            {
            pushFollow(FOLLOW_16);
            rule__Job__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Job__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__2"


    // $ANTLR start "rule__Job__Group_1__2__Impl"
    // InternalNabla.g:2311:1: rule__Job__Group_1__2__Impl : ( ':' ) ;
    public final void rule__Job__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2315:1: ( ( ':' ) )
            // InternalNabla.g:2316:1: ( ':' )
            {
            // InternalNabla.g:2316:1: ( ':' )
            // InternalNabla.g:2317:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getColonKeyword_1_2()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getColonKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__2__Impl"


    // $ANTLR start "rule__Job__Group_1__3"
    // InternalNabla.g:2326:1: rule__Job__Group_1__3 : rule__Job__Group_1__3__Impl rule__Job__Group_1__4 ;
    public final void rule__Job__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2330:1: ( rule__Job__Group_1__3__Impl rule__Job__Group_1__4 )
            // InternalNabla.g:2331:2: rule__Job__Group_1__3__Impl rule__Job__Group_1__4
            {
            pushFollow(FOLLOW_3);
            rule__Job__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Job__Group_1__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__3"


    // $ANTLR start "rule__Job__Group_1__3__Impl"
    // InternalNabla.g:2338:1: rule__Job__Group_1__3__Impl : ( '\\u2200' ) ;
    public final void rule__Job__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2342:1: ( ( '\\u2200' ) )
            // InternalNabla.g:2343:1: ( '\\u2200' )
            {
            // InternalNabla.g:2343:1: ( '\\u2200' )
            // InternalNabla.g:2344:2: '\\u2200'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getForAllKeyword_1_3()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getForAllKeyword_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__3__Impl"


    // $ANTLR start "rule__Job__Group_1__4"
    // InternalNabla.g:2353:1: rule__Job__Group_1__4 : rule__Job__Group_1__4__Impl rule__Job__Group_1__5 ;
    public final void rule__Job__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2357:1: ( rule__Job__Group_1__4__Impl rule__Job__Group_1__5 )
            // InternalNabla.g:2358:2: rule__Job__Group_1__4__Impl rule__Job__Group_1__5
            {
            pushFollow(FOLLOW_17);
            rule__Job__Group_1__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Job__Group_1__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__4"


    // $ANTLR start "rule__Job__Group_1__4__Impl"
    // InternalNabla.g:2365:1: rule__Job__Group_1__4__Impl : ( ( rule__Job__IteratorAssignment_1_4 ) ) ;
    public final void rule__Job__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2369:1: ( ( ( rule__Job__IteratorAssignment_1_4 ) ) )
            // InternalNabla.g:2370:1: ( ( rule__Job__IteratorAssignment_1_4 ) )
            {
            // InternalNabla.g:2370:1: ( ( rule__Job__IteratorAssignment_1_4 ) )
            // InternalNabla.g:2371:2: ( rule__Job__IteratorAssignment_1_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getIteratorAssignment_1_4()); 
            }
            // InternalNabla.g:2372:2: ( rule__Job__IteratorAssignment_1_4 )
            // InternalNabla.g:2372:3: rule__Job__IteratorAssignment_1_4
            {
            pushFollow(FOLLOW_2);
            rule__Job__IteratorAssignment_1_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getIteratorAssignment_1_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__4__Impl"


    // $ANTLR start "rule__Job__Group_1__5"
    // InternalNabla.g:2380:1: rule__Job__Group_1__5 : rule__Job__Group_1__5__Impl rule__Job__Group_1__6 ;
    public final void rule__Job__Group_1__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2384:1: ( rule__Job__Group_1__5__Impl rule__Job__Group_1__6 )
            // InternalNabla.g:2385:2: rule__Job__Group_1__5__Impl rule__Job__Group_1__6
            {
            pushFollow(FOLLOW_15);
            rule__Job__Group_1__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Job__Group_1__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__5"


    // $ANTLR start "rule__Job__Group_1__5__Impl"
    // InternalNabla.g:2392:1: rule__Job__Group_1__5__Impl : ( ',' ) ;
    public final void rule__Job__Group_1__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2396:1: ( ( ',' ) )
            // InternalNabla.g:2397:1: ( ',' )
            {
            // InternalNabla.g:2397:1: ( ',' )
            // InternalNabla.g:2398:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getCommaKeyword_1_5()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getCommaKeyword_1_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__5__Impl"


    // $ANTLR start "rule__Job__Group_1__6"
    // InternalNabla.g:2407:1: rule__Job__Group_1__6 : rule__Job__Group_1__6__Impl rule__Job__Group_1__7 ;
    public final void rule__Job__Group_1__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2411:1: ( rule__Job__Group_1__6__Impl rule__Job__Group_1__7 )
            // InternalNabla.g:2412:2: rule__Job__Group_1__6__Impl rule__Job__Group_1__7
            {
            pushFollow(FOLLOW_17);
            rule__Job__Group_1__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Job__Group_1__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__6"


    // $ANTLR start "rule__Job__Group_1__6__Impl"
    // InternalNabla.g:2419:1: rule__Job__Group_1__6__Impl : ( ( rule__Job__InitializationAssignment_1_6 ) ) ;
    public final void rule__Job__Group_1__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2423:1: ( ( ( rule__Job__InitializationAssignment_1_6 ) ) )
            // InternalNabla.g:2424:1: ( ( rule__Job__InitializationAssignment_1_6 ) )
            {
            // InternalNabla.g:2424:1: ( ( rule__Job__InitializationAssignment_1_6 ) )
            // InternalNabla.g:2425:2: ( rule__Job__InitializationAssignment_1_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getInitializationAssignment_1_6()); 
            }
            // InternalNabla.g:2426:2: ( rule__Job__InitializationAssignment_1_6 )
            // InternalNabla.g:2426:3: rule__Job__InitializationAssignment_1_6
            {
            pushFollow(FOLLOW_2);
            rule__Job__InitializationAssignment_1_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getInitializationAssignment_1_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__6__Impl"


    // $ANTLR start "rule__Job__Group_1__7"
    // InternalNabla.g:2434:1: rule__Job__Group_1__7 : rule__Job__Group_1__7__Impl rule__Job__Group_1__8 ;
    public final void rule__Job__Group_1__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2438:1: ( rule__Job__Group_1__7__Impl rule__Job__Group_1__8 )
            // InternalNabla.g:2439:2: rule__Job__Group_1__7__Impl rule__Job__Group_1__8
            {
            pushFollow(FOLLOW_15);
            rule__Job__Group_1__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Job__Group_1__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__7"


    // $ANTLR start "rule__Job__Group_1__7__Impl"
    // InternalNabla.g:2446:1: rule__Job__Group_1__7__Impl : ( ',' ) ;
    public final void rule__Job__Group_1__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2450:1: ( ( ',' ) )
            // InternalNabla.g:2451:1: ( ',' )
            {
            // InternalNabla.g:2451:1: ( ',' )
            // InternalNabla.g:2452:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getCommaKeyword_1_7()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getCommaKeyword_1_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__7__Impl"


    // $ANTLR start "rule__Job__Group_1__8"
    // InternalNabla.g:2461:1: rule__Job__Group_1__8 : rule__Job__Group_1__8__Impl ;
    public final void rule__Job__Group_1__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2465:1: ( rule__Job__Group_1__8__Impl )
            // InternalNabla.g:2466:2: rule__Job__Group_1__8__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Job__Group_1__8__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__8"


    // $ANTLR start "rule__Job__Group_1__8__Impl"
    // InternalNabla.g:2472:1: rule__Job__Group_1__8__Impl : ( ( rule__Job__BodyAssignment_1_8 ) ) ;
    public final void rule__Job__Group_1__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2476:1: ( ( ( rule__Job__BodyAssignment_1_8 ) ) )
            // InternalNabla.g:2477:1: ( ( rule__Job__BodyAssignment_1_8 ) )
            {
            // InternalNabla.g:2477:1: ( ( rule__Job__BodyAssignment_1_8 ) )
            // InternalNabla.g:2478:2: ( rule__Job__BodyAssignment_1_8 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getBodyAssignment_1_8()); 
            }
            // InternalNabla.g:2479:2: ( rule__Job__BodyAssignment_1_8 )
            // InternalNabla.g:2479:3: rule__Job__BodyAssignment_1_8
            {
            pushFollow(FOLLOW_2);
            rule__Job__BodyAssignment_1_8();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getBodyAssignment_1_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__Group_1__8__Impl"


    // $ANTLR start "rule__Instruction__Group_2__0"
    // InternalNabla.g:2488:1: rule__Instruction__Group_2__0 : rule__Instruction__Group_2__0__Impl rule__Instruction__Group_2__1 ;
    public final void rule__Instruction__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2492:1: ( rule__Instruction__Group_2__0__Impl rule__Instruction__Group_2__1 )
            // InternalNabla.g:2493:2: rule__Instruction__Group_2__0__Impl rule__Instruction__Group_2__1
            {
            pushFollow(FOLLOW_11);
            rule__Instruction__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_2__0"


    // $ANTLR start "rule__Instruction__Group_2__0__Impl"
    // InternalNabla.g:2500:1: rule__Instruction__Group_2__0__Impl : ( () ) ;
    public final void rule__Instruction__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2504:1: ( ( () ) )
            // InternalNabla.g:2505:1: ( () )
            {
            // InternalNabla.g:2505:1: ( () )
            // InternalNabla.g:2506:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getInstructionBlockAction_2_0()); 
            }
            // InternalNabla.g:2507:2: ()
            // InternalNabla.g:2507:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getInstructionBlockAction_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_2__0__Impl"


    // $ANTLR start "rule__Instruction__Group_2__1"
    // InternalNabla.g:2515:1: rule__Instruction__Group_2__1 : rule__Instruction__Group_2__1__Impl rule__Instruction__Group_2__2 ;
    public final void rule__Instruction__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2519:1: ( rule__Instruction__Group_2__1__Impl rule__Instruction__Group_2__2 )
            // InternalNabla.g:2520:2: rule__Instruction__Group_2__1__Impl rule__Instruction__Group_2__2
            {
            pushFollow(FOLLOW_15);
            rule__Instruction__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_2__1"


    // $ANTLR start "rule__Instruction__Group_2__1__Impl"
    // InternalNabla.g:2527:1: rule__Instruction__Group_2__1__Impl : ( '{' ) ;
    public final void rule__Instruction__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2531:1: ( ( '{' ) )
            // InternalNabla.g:2532:1: ( '{' )
            {
            // InternalNabla.g:2532:1: ( '{' )
            // InternalNabla.g:2533:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getLeftCurlyBracketKeyword_2_1()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getLeftCurlyBracketKeyword_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_2__1__Impl"


    // $ANTLR start "rule__Instruction__Group_2__2"
    // InternalNabla.g:2542:1: rule__Instruction__Group_2__2 : rule__Instruction__Group_2__2__Impl rule__Instruction__Group_2__3 ;
    public final void rule__Instruction__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2546:1: ( rule__Instruction__Group_2__2__Impl rule__Instruction__Group_2__3 )
            // InternalNabla.g:2547:2: rule__Instruction__Group_2__2__Impl rule__Instruction__Group_2__3
            {
            pushFollow(FOLLOW_18);
            rule__Instruction__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_2__2"


    // $ANTLR start "rule__Instruction__Group_2__2__Impl"
    // InternalNabla.g:2554:1: rule__Instruction__Group_2__2__Impl : ( ( ( rule__Instruction__InstructionsAssignment_2_2 ) ) ( ( rule__Instruction__InstructionsAssignment_2_2 )* ) ) ;
    public final void rule__Instruction__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2558:1: ( ( ( ( rule__Instruction__InstructionsAssignment_2_2 ) ) ( ( rule__Instruction__InstructionsAssignment_2_2 )* ) ) )
            // InternalNabla.g:2559:1: ( ( ( rule__Instruction__InstructionsAssignment_2_2 ) ) ( ( rule__Instruction__InstructionsAssignment_2_2 )* ) )
            {
            // InternalNabla.g:2559:1: ( ( ( rule__Instruction__InstructionsAssignment_2_2 ) ) ( ( rule__Instruction__InstructionsAssignment_2_2 )* ) )
            // InternalNabla.g:2560:2: ( ( rule__Instruction__InstructionsAssignment_2_2 ) ) ( ( rule__Instruction__InstructionsAssignment_2_2 )* )
            {
            // InternalNabla.g:2560:2: ( ( rule__Instruction__InstructionsAssignment_2_2 ) )
            // InternalNabla.g:2561:3: ( rule__Instruction__InstructionsAssignment_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getInstructionsAssignment_2_2()); 
            }
            // InternalNabla.g:2562:3: ( rule__Instruction__InstructionsAssignment_2_2 )
            // InternalNabla.g:2562:4: rule__Instruction__InstructionsAssignment_2_2
            {
            pushFollow(FOLLOW_19);
            rule__Instruction__InstructionsAssignment_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getInstructionsAssignment_2_2()); 
            }

            }

            // InternalNabla.g:2565:2: ( ( rule__Instruction__InstructionsAssignment_2_2 )* )
            // InternalNabla.g:2566:3: ( rule__Instruction__InstructionsAssignment_2_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getInstructionsAssignment_2_2()); 
            }
            // InternalNabla.g:2567:3: ( rule__Instruction__InstructionsAssignment_2_2 )*
            loop29:
            do {
                int alt29=2;
                int LA29_0 = input.LA(1);

                if ( (LA29_0==RULE_ID||(LA29_0>=22 && LA29_0<=28)||LA29_0==36||LA29_0==40||LA29_0==43||LA29_0==60) ) {
                    alt29=1;
                }


                switch (alt29) {
            	case 1 :
            	    // InternalNabla.g:2567:4: rule__Instruction__InstructionsAssignment_2_2
            	    {
            	    pushFollow(FOLLOW_19);
            	    rule__Instruction__InstructionsAssignment_2_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop29;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getInstructionsAssignment_2_2()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_2__2__Impl"


    // $ANTLR start "rule__Instruction__Group_2__3"
    // InternalNabla.g:2576:1: rule__Instruction__Group_2__3 : rule__Instruction__Group_2__3__Impl ;
    public final void rule__Instruction__Group_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2580:1: ( rule__Instruction__Group_2__3__Impl )
            // InternalNabla.g:2581:2: rule__Instruction__Group_2__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_2__3"


    // $ANTLR start "rule__Instruction__Group_2__3__Impl"
    // InternalNabla.g:2587:1: rule__Instruction__Group_2__3__Impl : ( '}' ) ;
    public final void rule__Instruction__Group_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2591:1: ( ( '}' ) )
            // InternalNabla.g:2592:1: ( '}' )
            {
            // InternalNabla.g:2592:1: ( '}' )
            // InternalNabla.g:2593:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getRightCurlyBracketKeyword_2_3()); 
            }
            match(input,37,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getRightCurlyBracketKeyword_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_2__3__Impl"


    // $ANTLR start "rule__Instruction__Group_3__0"
    // InternalNabla.g:2603:1: rule__Instruction__Group_3__0 : rule__Instruction__Group_3__0__Impl rule__Instruction__Group_3__1 ;
    public final void rule__Instruction__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2607:1: ( rule__Instruction__Group_3__0__Impl rule__Instruction__Group_3__1 )
            // InternalNabla.g:2608:2: rule__Instruction__Group_3__0__Impl rule__Instruction__Group_3__1
            {
            pushFollow(FOLLOW_3);
            rule__Instruction__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_3__0"


    // $ANTLR start "rule__Instruction__Group_3__0__Impl"
    // InternalNabla.g:2615:1: rule__Instruction__Group_3__0__Impl : ( () ) ;
    public final void rule__Instruction__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2619:1: ( ( () ) )
            // InternalNabla.g:2620:1: ( () )
            {
            // InternalNabla.g:2620:1: ( () )
            // InternalNabla.g:2621:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getAffectationAction_3_0()); 
            }
            // InternalNabla.g:2622:2: ()
            // InternalNabla.g:2622:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getAffectationAction_3_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_3__0__Impl"


    // $ANTLR start "rule__Instruction__Group_3__1"
    // InternalNabla.g:2630:1: rule__Instruction__Group_3__1 : rule__Instruction__Group_3__1__Impl rule__Instruction__Group_3__2 ;
    public final void rule__Instruction__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2634:1: ( rule__Instruction__Group_3__1__Impl rule__Instruction__Group_3__2 )
            // InternalNabla.g:2635:2: rule__Instruction__Group_3__1__Impl rule__Instruction__Group_3__2
            {
            pushFollow(FOLLOW_20);
            rule__Instruction__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_3__1"


    // $ANTLR start "rule__Instruction__Group_3__1__Impl"
    // InternalNabla.g:2642:1: rule__Instruction__Group_3__1__Impl : ( ( rule__Instruction__VarRefAssignment_3_1 ) ) ;
    public final void rule__Instruction__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2646:1: ( ( ( rule__Instruction__VarRefAssignment_3_1 ) ) )
            // InternalNabla.g:2647:1: ( ( rule__Instruction__VarRefAssignment_3_1 ) )
            {
            // InternalNabla.g:2647:1: ( ( rule__Instruction__VarRefAssignment_3_1 ) )
            // InternalNabla.g:2648:2: ( rule__Instruction__VarRefAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getVarRefAssignment_3_1()); 
            }
            // InternalNabla.g:2649:2: ( rule__Instruction__VarRefAssignment_3_1 )
            // InternalNabla.g:2649:3: rule__Instruction__VarRefAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Instruction__VarRefAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getVarRefAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_3__1__Impl"


    // $ANTLR start "rule__Instruction__Group_3__2"
    // InternalNabla.g:2657:1: rule__Instruction__Group_3__2 : rule__Instruction__Group_3__2__Impl rule__Instruction__Group_3__3 ;
    public final void rule__Instruction__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2661:1: ( rule__Instruction__Group_3__2__Impl rule__Instruction__Group_3__3 )
            // InternalNabla.g:2662:2: rule__Instruction__Group_3__2__Impl rule__Instruction__Group_3__3
            {
            pushFollow(FOLLOW_21);
            rule__Instruction__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_3__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_3__2"


    // $ANTLR start "rule__Instruction__Group_3__2__Impl"
    // InternalNabla.g:2669:1: rule__Instruction__Group_3__2__Impl : ( '=' ) ;
    public final void rule__Instruction__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2673:1: ( ( '=' ) )
            // InternalNabla.g:2674:1: ( '=' )
            {
            // InternalNabla.g:2674:1: ( '=' )
            // InternalNabla.g:2675:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getEqualsSignKeyword_3_2()); 
            }
            match(input,42,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getEqualsSignKeyword_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_3__2__Impl"


    // $ANTLR start "rule__Instruction__Group_3__3"
    // InternalNabla.g:2684:1: rule__Instruction__Group_3__3 : rule__Instruction__Group_3__3__Impl rule__Instruction__Group_3__4 ;
    public final void rule__Instruction__Group_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2688:1: ( rule__Instruction__Group_3__3__Impl rule__Instruction__Group_3__4 )
            // InternalNabla.g:2689:2: rule__Instruction__Group_3__3__Impl rule__Instruction__Group_3__4
            {
            pushFollow(FOLLOW_4);
            rule__Instruction__Group_3__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_3__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_3__3"


    // $ANTLR start "rule__Instruction__Group_3__3__Impl"
    // InternalNabla.g:2696:1: rule__Instruction__Group_3__3__Impl : ( ( rule__Instruction__ExpressionAssignment_3_3 ) ) ;
    public final void rule__Instruction__Group_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2700:1: ( ( ( rule__Instruction__ExpressionAssignment_3_3 ) ) )
            // InternalNabla.g:2701:1: ( ( rule__Instruction__ExpressionAssignment_3_3 ) )
            {
            // InternalNabla.g:2701:1: ( ( rule__Instruction__ExpressionAssignment_3_3 ) )
            // InternalNabla.g:2702:2: ( rule__Instruction__ExpressionAssignment_3_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getExpressionAssignment_3_3()); 
            }
            // InternalNabla.g:2703:2: ( rule__Instruction__ExpressionAssignment_3_3 )
            // InternalNabla.g:2703:3: rule__Instruction__ExpressionAssignment_3_3
            {
            pushFollow(FOLLOW_2);
            rule__Instruction__ExpressionAssignment_3_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getExpressionAssignment_3_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_3__3__Impl"


    // $ANTLR start "rule__Instruction__Group_3__4"
    // InternalNabla.g:2711:1: rule__Instruction__Group_3__4 : rule__Instruction__Group_3__4__Impl ;
    public final void rule__Instruction__Group_3__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2715:1: ( rule__Instruction__Group_3__4__Impl )
            // InternalNabla.g:2716:2: rule__Instruction__Group_3__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_3__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_3__4"


    // $ANTLR start "rule__Instruction__Group_3__4__Impl"
    // InternalNabla.g:2722:1: rule__Instruction__Group_3__4__Impl : ( ';' ) ;
    public final void rule__Instruction__Group_3__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2726:1: ( ( ';' ) )
            // InternalNabla.g:2727:1: ( ';' )
            {
            // InternalNabla.g:2727:1: ( ';' )
            // InternalNabla.g:2728:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getSemicolonKeyword_3_4()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getSemicolonKeyword_3_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_3__4__Impl"


    // $ANTLR start "rule__Instruction__Group_4__0"
    // InternalNabla.g:2738:1: rule__Instruction__Group_4__0 : rule__Instruction__Group_4__0__Impl rule__Instruction__Group_4__1 ;
    public final void rule__Instruction__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2742:1: ( rule__Instruction__Group_4__0__Impl rule__Instruction__Group_4__1 )
            // InternalNabla.g:2743:2: rule__Instruction__Group_4__0__Impl rule__Instruction__Group_4__1
            {
            pushFollow(FOLLOW_16);
            rule__Instruction__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_4__0"


    // $ANTLR start "rule__Instruction__Group_4__0__Impl"
    // InternalNabla.g:2750:1: rule__Instruction__Group_4__0__Impl : ( () ) ;
    public final void rule__Instruction__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2754:1: ( ( () ) )
            // InternalNabla.g:2755:1: ( () )
            {
            // InternalNabla.g:2755:1: ( () )
            // InternalNabla.g:2756:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getLoopAction_4_0()); 
            }
            // InternalNabla.g:2757:2: ()
            // InternalNabla.g:2757:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getLoopAction_4_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_4__0__Impl"


    // $ANTLR start "rule__Instruction__Group_4__1"
    // InternalNabla.g:2765:1: rule__Instruction__Group_4__1 : rule__Instruction__Group_4__1__Impl rule__Instruction__Group_4__2 ;
    public final void rule__Instruction__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2769:1: ( rule__Instruction__Group_4__1__Impl rule__Instruction__Group_4__2 )
            // InternalNabla.g:2770:2: rule__Instruction__Group_4__1__Impl rule__Instruction__Group_4__2
            {
            pushFollow(FOLLOW_3);
            rule__Instruction__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_4__1"


    // $ANTLR start "rule__Instruction__Group_4__1__Impl"
    // InternalNabla.g:2777:1: rule__Instruction__Group_4__1__Impl : ( '\\u2200' ) ;
    public final void rule__Instruction__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2781:1: ( ( '\\u2200' ) )
            // InternalNabla.g:2782:1: ( '\\u2200' )
            {
            // InternalNabla.g:2782:1: ( '\\u2200' )
            // InternalNabla.g:2783:2: '\\u2200'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getForAllKeyword_4_1()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getForAllKeyword_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_4__1__Impl"


    // $ANTLR start "rule__Instruction__Group_4__2"
    // InternalNabla.g:2792:1: rule__Instruction__Group_4__2 : rule__Instruction__Group_4__2__Impl rule__Instruction__Group_4__3 ;
    public final void rule__Instruction__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2796:1: ( rule__Instruction__Group_4__2__Impl rule__Instruction__Group_4__3 )
            // InternalNabla.g:2797:2: rule__Instruction__Group_4__2__Impl rule__Instruction__Group_4__3
            {
            pushFollow(FOLLOW_17);
            rule__Instruction__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_4__2"


    // $ANTLR start "rule__Instruction__Group_4__2__Impl"
    // InternalNabla.g:2804:1: rule__Instruction__Group_4__2__Impl : ( ( rule__Instruction__IteratorAssignment_4_2 ) ) ;
    public final void rule__Instruction__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2808:1: ( ( ( rule__Instruction__IteratorAssignment_4_2 ) ) )
            // InternalNabla.g:2809:1: ( ( rule__Instruction__IteratorAssignment_4_2 ) )
            {
            // InternalNabla.g:2809:1: ( ( rule__Instruction__IteratorAssignment_4_2 ) )
            // InternalNabla.g:2810:2: ( rule__Instruction__IteratorAssignment_4_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getIteratorAssignment_4_2()); 
            }
            // InternalNabla.g:2811:2: ( rule__Instruction__IteratorAssignment_4_2 )
            // InternalNabla.g:2811:3: rule__Instruction__IteratorAssignment_4_2
            {
            pushFollow(FOLLOW_2);
            rule__Instruction__IteratorAssignment_4_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getIteratorAssignment_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_4__2__Impl"


    // $ANTLR start "rule__Instruction__Group_4__3"
    // InternalNabla.g:2819:1: rule__Instruction__Group_4__3 : rule__Instruction__Group_4__3__Impl rule__Instruction__Group_4__4 ;
    public final void rule__Instruction__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2823:1: ( rule__Instruction__Group_4__3__Impl rule__Instruction__Group_4__4 )
            // InternalNabla.g:2824:2: rule__Instruction__Group_4__3__Impl rule__Instruction__Group_4__4
            {
            pushFollow(FOLLOW_15);
            rule__Instruction__Group_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_4__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_4__3"


    // $ANTLR start "rule__Instruction__Group_4__3__Impl"
    // InternalNabla.g:2831:1: rule__Instruction__Group_4__3__Impl : ( ',' ) ;
    public final void rule__Instruction__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2835:1: ( ( ',' ) )
            // InternalNabla.g:2836:1: ( ',' )
            {
            // InternalNabla.g:2836:1: ( ',' )
            // InternalNabla.g:2837:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getCommaKeyword_4_3()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getCommaKeyword_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_4__3__Impl"


    // $ANTLR start "rule__Instruction__Group_4__4"
    // InternalNabla.g:2846:1: rule__Instruction__Group_4__4 : rule__Instruction__Group_4__4__Impl ;
    public final void rule__Instruction__Group_4__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2850:1: ( rule__Instruction__Group_4__4__Impl )
            // InternalNabla.g:2851:2: rule__Instruction__Group_4__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_4__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_4__4"


    // $ANTLR start "rule__Instruction__Group_4__4__Impl"
    // InternalNabla.g:2857:1: rule__Instruction__Group_4__4__Impl : ( ( rule__Instruction__BodyAssignment_4_4 ) ) ;
    public final void rule__Instruction__Group_4__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2861:1: ( ( ( rule__Instruction__BodyAssignment_4_4 ) ) )
            // InternalNabla.g:2862:1: ( ( rule__Instruction__BodyAssignment_4_4 ) )
            {
            // InternalNabla.g:2862:1: ( ( rule__Instruction__BodyAssignment_4_4 ) )
            // InternalNabla.g:2863:2: ( rule__Instruction__BodyAssignment_4_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getBodyAssignment_4_4()); 
            }
            // InternalNabla.g:2864:2: ( rule__Instruction__BodyAssignment_4_4 )
            // InternalNabla.g:2864:3: rule__Instruction__BodyAssignment_4_4
            {
            pushFollow(FOLLOW_2);
            rule__Instruction__BodyAssignment_4_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getBodyAssignment_4_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_4__4__Impl"


    // $ANTLR start "rule__Instruction__Group_5__0"
    // InternalNabla.g:2873:1: rule__Instruction__Group_5__0 : rule__Instruction__Group_5__0__Impl rule__Instruction__Group_5__1 ;
    public final void rule__Instruction__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2877:1: ( rule__Instruction__Group_5__0__Impl rule__Instruction__Group_5__1 )
            // InternalNabla.g:2878:2: rule__Instruction__Group_5__0__Impl rule__Instruction__Group_5__1
            {
            pushFollow(FOLLOW_15);
            rule__Instruction__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5__0"


    // $ANTLR start "rule__Instruction__Group_5__0__Impl"
    // InternalNabla.g:2885:1: rule__Instruction__Group_5__0__Impl : ( () ) ;
    public final void rule__Instruction__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2889:1: ( ( () ) )
            // InternalNabla.g:2890:1: ( () )
            {
            // InternalNabla.g:2890:1: ( () )
            // InternalNabla.g:2891:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getIfAction_5_0()); 
            }
            // InternalNabla.g:2892:2: ()
            // InternalNabla.g:2892:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getIfAction_5_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5__0__Impl"


    // $ANTLR start "rule__Instruction__Group_5__1"
    // InternalNabla.g:2900:1: rule__Instruction__Group_5__1 : rule__Instruction__Group_5__1__Impl rule__Instruction__Group_5__2 ;
    public final void rule__Instruction__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2904:1: ( rule__Instruction__Group_5__1__Impl rule__Instruction__Group_5__2 )
            // InternalNabla.g:2905:2: rule__Instruction__Group_5__1__Impl rule__Instruction__Group_5__2
            {
            pushFollow(FOLLOW_22);
            rule__Instruction__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_5__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5__1"


    // $ANTLR start "rule__Instruction__Group_5__1__Impl"
    // InternalNabla.g:2912:1: rule__Instruction__Group_5__1__Impl : ( 'if' ) ;
    public final void rule__Instruction__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2916:1: ( ( 'if' ) )
            // InternalNabla.g:2917:1: ( 'if' )
            {
            // InternalNabla.g:2917:1: ( 'if' )
            // InternalNabla.g:2918:2: 'if'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getIfKeyword_5_1()); 
            }
            match(input,43,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getIfKeyword_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5__1__Impl"


    // $ANTLR start "rule__Instruction__Group_5__2"
    // InternalNabla.g:2927:1: rule__Instruction__Group_5__2 : rule__Instruction__Group_5__2__Impl rule__Instruction__Group_5__3 ;
    public final void rule__Instruction__Group_5__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2931:1: ( rule__Instruction__Group_5__2__Impl rule__Instruction__Group_5__3 )
            // InternalNabla.g:2932:2: rule__Instruction__Group_5__2__Impl rule__Instruction__Group_5__3
            {
            pushFollow(FOLLOW_21);
            rule__Instruction__Group_5__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_5__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5__2"


    // $ANTLR start "rule__Instruction__Group_5__2__Impl"
    // InternalNabla.g:2939:1: rule__Instruction__Group_5__2__Impl : ( '(' ) ;
    public final void rule__Instruction__Group_5__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2943:1: ( ( '(' ) )
            // InternalNabla.g:2944:1: ( '(' )
            {
            // InternalNabla.g:2944:1: ( '(' )
            // InternalNabla.g:2945:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getLeftParenthesisKeyword_5_2()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getLeftParenthesisKeyword_5_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5__2__Impl"


    // $ANTLR start "rule__Instruction__Group_5__3"
    // InternalNabla.g:2954:1: rule__Instruction__Group_5__3 : rule__Instruction__Group_5__3__Impl rule__Instruction__Group_5__4 ;
    public final void rule__Instruction__Group_5__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2958:1: ( rule__Instruction__Group_5__3__Impl rule__Instruction__Group_5__4 )
            // InternalNabla.g:2959:2: rule__Instruction__Group_5__3__Impl rule__Instruction__Group_5__4
            {
            pushFollow(FOLLOW_23);
            rule__Instruction__Group_5__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_5__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5__3"


    // $ANTLR start "rule__Instruction__Group_5__3__Impl"
    // InternalNabla.g:2966:1: rule__Instruction__Group_5__3__Impl : ( ( rule__Instruction__ConditionAssignment_5_3 ) ) ;
    public final void rule__Instruction__Group_5__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2970:1: ( ( ( rule__Instruction__ConditionAssignment_5_3 ) ) )
            // InternalNabla.g:2971:1: ( ( rule__Instruction__ConditionAssignment_5_3 ) )
            {
            // InternalNabla.g:2971:1: ( ( rule__Instruction__ConditionAssignment_5_3 ) )
            // InternalNabla.g:2972:2: ( rule__Instruction__ConditionAssignment_5_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getConditionAssignment_5_3()); 
            }
            // InternalNabla.g:2973:2: ( rule__Instruction__ConditionAssignment_5_3 )
            // InternalNabla.g:2973:3: rule__Instruction__ConditionAssignment_5_3
            {
            pushFollow(FOLLOW_2);
            rule__Instruction__ConditionAssignment_5_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getConditionAssignment_5_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5__3__Impl"


    // $ANTLR start "rule__Instruction__Group_5__4"
    // InternalNabla.g:2981:1: rule__Instruction__Group_5__4 : rule__Instruction__Group_5__4__Impl rule__Instruction__Group_5__5 ;
    public final void rule__Instruction__Group_5__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2985:1: ( rule__Instruction__Group_5__4__Impl rule__Instruction__Group_5__5 )
            // InternalNabla.g:2986:2: rule__Instruction__Group_5__4__Impl rule__Instruction__Group_5__5
            {
            pushFollow(FOLLOW_15);
            rule__Instruction__Group_5__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_5__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5__4"


    // $ANTLR start "rule__Instruction__Group_5__4__Impl"
    // InternalNabla.g:2993:1: rule__Instruction__Group_5__4__Impl : ( ')' ) ;
    public final void rule__Instruction__Group_5__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:2997:1: ( ( ')' ) )
            // InternalNabla.g:2998:1: ( ')' )
            {
            // InternalNabla.g:2998:1: ( ')' )
            // InternalNabla.g:2999:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getRightParenthesisKeyword_5_4()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getRightParenthesisKeyword_5_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5__4__Impl"


    // $ANTLR start "rule__Instruction__Group_5__5"
    // InternalNabla.g:3008:1: rule__Instruction__Group_5__5 : rule__Instruction__Group_5__5__Impl rule__Instruction__Group_5__6 ;
    public final void rule__Instruction__Group_5__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3012:1: ( rule__Instruction__Group_5__5__Impl rule__Instruction__Group_5__6 )
            // InternalNabla.g:3013:2: rule__Instruction__Group_5__5__Impl rule__Instruction__Group_5__6
            {
            pushFollow(FOLLOW_24);
            rule__Instruction__Group_5__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_5__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5__5"


    // $ANTLR start "rule__Instruction__Group_5__5__Impl"
    // InternalNabla.g:3020:1: rule__Instruction__Group_5__5__Impl : ( ( rule__Instruction__ThenAssignment_5_5 ) ) ;
    public final void rule__Instruction__Group_5__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3024:1: ( ( ( rule__Instruction__ThenAssignment_5_5 ) ) )
            // InternalNabla.g:3025:1: ( ( rule__Instruction__ThenAssignment_5_5 ) )
            {
            // InternalNabla.g:3025:1: ( ( rule__Instruction__ThenAssignment_5_5 ) )
            // InternalNabla.g:3026:2: ( rule__Instruction__ThenAssignment_5_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getThenAssignment_5_5()); 
            }
            // InternalNabla.g:3027:2: ( rule__Instruction__ThenAssignment_5_5 )
            // InternalNabla.g:3027:3: rule__Instruction__ThenAssignment_5_5
            {
            pushFollow(FOLLOW_2);
            rule__Instruction__ThenAssignment_5_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getThenAssignment_5_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5__5__Impl"


    // $ANTLR start "rule__Instruction__Group_5__6"
    // InternalNabla.g:3035:1: rule__Instruction__Group_5__6 : rule__Instruction__Group_5__6__Impl ;
    public final void rule__Instruction__Group_5__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3039:1: ( rule__Instruction__Group_5__6__Impl )
            // InternalNabla.g:3040:2: rule__Instruction__Group_5__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_5__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5__6"


    // $ANTLR start "rule__Instruction__Group_5__6__Impl"
    // InternalNabla.g:3046:1: rule__Instruction__Group_5__6__Impl : ( ( rule__Instruction__Group_5_6__0 )? ) ;
    public final void rule__Instruction__Group_5__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3050:1: ( ( ( rule__Instruction__Group_5_6__0 )? ) )
            // InternalNabla.g:3051:1: ( ( rule__Instruction__Group_5_6__0 )? )
            {
            // InternalNabla.g:3051:1: ( ( rule__Instruction__Group_5_6__0 )? )
            // InternalNabla.g:3052:2: ( rule__Instruction__Group_5_6__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getGroup_5_6()); 
            }
            // InternalNabla.g:3053:2: ( rule__Instruction__Group_5_6__0 )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==46) ) {
                int LA30_1 = input.LA(2);

                if ( (synpred55_InternalNabla()) ) {
                    alt30=1;
                }
            }
            switch (alt30) {
                case 1 :
                    // InternalNabla.g:3053:3: rule__Instruction__Group_5_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Instruction__Group_5_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getGroup_5_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5__6__Impl"


    // $ANTLR start "rule__Instruction__Group_5_6__0"
    // InternalNabla.g:3062:1: rule__Instruction__Group_5_6__0 : rule__Instruction__Group_5_6__0__Impl rule__Instruction__Group_5_6__1 ;
    public final void rule__Instruction__Group_5_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3066:1: ( rule__Instruction__Group_5_6__0__Impl rule__Instruction__Group_5_6__1 )
            // InternalNabla.g:3067:2: rule__Instruction__Group_5_6__0__Impl rule__Instruction__Group_5_6__1
            {
            pushFollow(FOLLOW_15);
            rule__Instruction__Group_5_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_5_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5_6__0"


    // $ANTLR start "rule__Instruction__Group_5_6__0__Impl"
    // InternalNabla.g:3074:1: rule__Instruction__Group_5_6__0__Impl : ( ( 'else' ) ) ;
    public final void rule__Instruction__Group_5_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3078:1: ( ( ( 'else' ) ) )
            // InternalNabla.g:3079:1: ( ( 'else' ) )
            {
            // InternalNabla.g:3079:1: ( ( 'else' ) )
            // InternalNabla.g:3080:2: ( 'else' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getElseKeyword_5_6_0()); 
            }
            // InternalNabla.g:3081:2: ( 'else' )
            // InternalNabla.g:3081:3: 'else'
            {
            match(input,46,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getElseKeyword_5_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5_6__0__Impl"


    // $ANTLR start "rule__Instruction__Group_5_6__1"
    // InternalNabla.g:3089:1: rule__Instruction__Group_5_6__1 : rule__Instruction__Group_5_6__1__Impl ;
    public final void rule__Instruction__Group_5_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3093:1: ( rule__Instruction__Group_5_6__1__Impl )
            // InternalNabla.g:3094:2: rule__Instruction__Group_5_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Instruction__Group_5_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5_6__1"


    // $ANTLR start "rule__Instruction__Group_5_6__1__Impl"
    // InternalNabla.g:3100:1: rule__Instruction__Group_5_6__1__Impl : ( ( rule__Instruction__ElseAssignment_5_6_1 ) ) ;
    public final void rule__Instruction__Group_5_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3104:1: ( ( ( rule__Instruction__ElseAssignment_5_6_1 ) ) )
            // InternalNabla.g:3105:1: ( ( rule__Instruction__ElseAssignment_5_6_1 ) )
            {
            // InternalNabla.g:3105:1: ( ( rule__Instruction__ElseAssignment_5_6_1 ) )
            // InternalNabla.g:3106:2: ( rule__Instruction__ElseAssignment_5_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getElseAssignment_5_6_1()); 
            }
            // InternalNabla.g:3107:2: ( rule__Instruction__ElseAssignment_5_6_1 )
            // InternalNabla.g:3107:3: rule__Instruction__ElseAssignment_5_6_1
            {
            pushFollow(FOLLOW_2);
            rule__Instruction__ElseAssignment_5_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getElseAssignment_5_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Group_5_6__1__Impl"


    // $ANTLR start "rule__TimeIterator__Group__0"
    // InternalNabla.g:3116:1: rule__TimeIterator__Group__0 : rule__TimeIterator__Group__0__Impl rule__TimeIterator__Group__1 ;
    public final void rule__TimeIterator__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3120:1: ( rule__TimeIterator__Group__0__Impl rule__TimeIterator__Group__1 )
            // InternalNabla.g:3121:2: rule__TimeIterator__Group__0__Impl rule__TimeIterator__Group__1
            {
            pushFollow(FOLLOW_25);
            rule__TimeIterator__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeIterator__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIterator__Group__0"


    // $ANTLR start "rule__TimeIterator__Group__0__Impl"
    // InternalNabla.g:3128:1: rule__TimeIterator__Group__0__Impl : ( ( rule__TimeIterator__NameAssignment_0 ) ) ;
    public final void rule__TimeIterator__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3132:1: ( ( ( rule__TimeIterator__NameAssignment_0 ) ) )
            // InternalNabla.g:3133:1: ( ( rule__TimeIterator__NameAssignment_0 ) )
            {
            // InternalNabla.g:3133:1: ( ( rule__TimeIterator__NameAssignment_0 ) )
            // InternalNabla.g:3134:2: ( rule__TimeIterator__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorAccess().getNameAssignment_0()); 
            }
            // InternalNabla.g:3135:2: ( rule__TimeIterator__NameAssignment_0 )
            // InternalNabla.g:3135:3: rule__TimeIterator__NameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__TimeIterator__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorAccess().getNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIterator__Group__0__Impl"


    // $ANTLR start "rule__TimeIterator__Group__1"
    // InternalNabla.g:3143:1: rule__TimeIterator__Group__1 : rule__TimeIterator__Group__1__Impl rule__TimeIterator__Group__2 ;
    public final void rule__TimeIterator__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3147:1: ( rule__TimeIterator__Group__1__Impl rule__TimeIterator__Group__2 )
            // InternalNabla.g:3148:2: rule__TimeIterator__Group__1__Impl rule__TimeIterator__Group__2
            {
            pushFollow(FOLLOW_26);
            rule__TimeIterator__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeIterator__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIterator__Group__1"


    // $ANTLR start "rule__TimeIterator__Group__1__Impl"
    // InternalNabla.g:3155:1: rule__TimeIterator__Group__1__Impl : ( '\\u2208' ) ;
    public final void rule__TimeIterator__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3159:1: ( ( '\\u2208' ) )
            // InternalNabla.g:3160:1: ( '\\u2208' )
            {
            // InternalNabla.g:3160:1: ( '\\u2208' )
            // InternalNabla.g:3161:2: '\\u2208'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorAccess().getElementOfKeyword_1()); 
            }
            match(input,47,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorAccess().getElementOfKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIterator__Group__1__Impl"


    // $ANTLR start "rule__TimeIterator__Group__2"
    // InternalNabla.g:3170:1: rule__TimeIterator__Group__2 : rule__TimeIterator__Group__2__Impl ;
    public final void rule__TimeIterator__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3174:1: ( rule__TimeIterator__Group__2__Impl )
            // InternalNabla.g:3175:2: rule__TimeIterator__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TimeIterator__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIterator__Group__2"


    // $ANTLR start "rule__TimeIterator__Group__2__Impl"
    // InternalNabla.g:3181:1: rule__TimeIterator__Group__2__Impl : ( '\\u2115' ) ;
    public final void rule__TimeIterator__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3185:1: ( ( '\\u2115' ) )
            // InternalNabla.g:3186:1: ( '\\u2115' )
            {
            // InternalNabla.g:3186:1: ( '\\u2115' )
            // InternalNabla.g:3187:2: '\\u2115'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorAccess().getDoubleStruckCapitalNKeyword_2()); 
            }
            match(input,22,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorAccess().getDoubleStruckCapitalNKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIterator__Group__2__Impl"


    // $ANTLR start "rule__SpaceIterator__Group__0"
    // InternalNabla.g:3197:1: rule__SpaceIterator__Group__0 : rule__SpaceIterator__Group__0__Impl rule__SpaceIterator__Group__1 ;
    public final void rule__SpaceIterator__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3201:1: ( rule__SpaceIterator__Group__0__Impl rule__SpaceIterator__Group__1 )
            // InternalNabla.g:3202:2: rule__SpaceIterator__Group__0__Impl rule__SpaceIterator__Group__1
            {
            pushFollow(FOLLOW_25);
            rule__SpaceIterator__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpaceIterator__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIterator__Group__0"


    // $ANTLR start "rule__SpaceIterator__Group__0__Impl"
    // InternalNabla.g:3209:1: rule__SpaceIterator__Group__0__Impl : ( ( rule__SpaceIterator__NameAssignment_0 ) ) ;
    public final void rule__SpaceIterator__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3213:1: ( ( ( rule__SpaceIterator__NameAssignment_0 ) ) )
            // InternalNabla.g:3214:1: ( ( rule__SpaceIterator__NameAssignment_0 ) )
            {
            // InternalNabla.g:3214:1: ( ( rule__SpaceIterator__NameAssignment_0 ) )
            // InternalNabla.g:3215:2: ( rule__SpaceIterator__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorAccess().getNameAssignment_0()); 
            }
            // InternalNabla.g:3216:2: ( rule__SpaceIterator__NameAssignment_0 )
            // InternalNabla.g:3216:3: rule__SpaceIterator__NameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__SpaceIterator__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorAccess().getNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIterator__Group__0__Impl"


    // $ANTLR start "rule__SpaceIterator__Group__1"
    // InternalNabla.g:3224:1: rule__SpaceIterator__Group__1 : rule__SpaceIterator__Group__1__Impl rule__SpaceIterator__Group__2 ;
    public final void rule__SpaceIterator__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3228:1: ( rule__SpaceIterator__Group__1__Impl rule__SpaceIterator__Group__2 )
            // InternalNabla.g:3229:2: rule__SpaceIterator__Group__1__Impl rule__SpaceIterator__Group__2
            {
            pushFollow(FOLLOW_3);
            rule__SpaceIterator__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpaceIterator__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIterator__Group__1"


    // $ANTLR start "rule__SpaceIterator__Group__1__Impl"
    // InternalNabla.g:3236:1: rule__SpaceIterator__Group__1__Impl : ( '\\u2208' ) ;
    public final void rule__SpaceIterator__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3240:1: ( ( '\\u2208' ) )
            // InternalNabla.g:3241:1: ( '\\u2208' )
            {
            // InternalNabla.g:3241:1: ( '\\u2208' )
            // InternalNabla.g:3242:2: '\\u2208'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorAccess().getElementOfKeyword_1()); 
            }
            match(input,47,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorAccess().getElementOfKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIterator__Group__1__Impl"


    // $ANTLR start "rule__SpaceIterator__Group__2"
    // InternalNabla.g:3251:1: rule__SpaceIterator__Group__2 : rule__SpaceIterator__Group__2__Impl ;
    public final void rule__SpaceIterator__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3255:1: ( rule__SpaceIterator__Group__2__Impl )
            // InternalNabla.g:3256:2: rule__SpaceIterator__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SpaceIterator__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIterator__Group__2"


    // $ANTLR start "rule__SpaceIterator__Group__2__Impl"
    // InternalNabla.g:3262:1: rule__SpaceIterator__Group__2__Impl : ( ( rule__SpaceIterator__RangeAssignment_2 ) ) ;
    public final void rule__SpaceIterator__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3266:1: ( ( ( rule__SpaceIterator__RangeAssignment_2 ) ) )
            // InternalNabla.g:3267:1: ( ( rule__SpaceIterator__RangeAssignment_2 ) )
            {
            // InternalNabla.g:3267:1: ( ( rule__SpaceIterator__RangeAssignment_2 ) )
            // InternalNabla.g:3268:2: ( rule__SpaceIterator__RangeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorAccess().getRangeAssignment_2()); 
            }
            // InternalNabla.g:3269:2: ( rule__SpaceIterator__RangeAssignment_2 )
            // InternalNabla.g:3269:3: rule__SpaceIterator__RangeAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__SpaceIterator__RangeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorAccess().getRangeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIterator__Group__2__Impl"


    // $ANTLR start "rule__SpaceIteratorRange__Group__0"
    // InternalNabla.g:3278:1: rule__SpaceIteratorRange__Group__0 : rule__SpaceIteratorRange__Group__0__Impl rule__SpaceIteratorRange__Group__1 ;
    public final void rule__SpaceIteratorRange__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3282:1: ( rule__SpaceIteratorRange__Group__0__Impl rule__SpaceIteratorRange__Group__1 )
            // InternalNabla.g:3283:2: rule__SpaceIteratorRange__Group__0__Impl rule__SpaceIteratorRange__Group__1
            {
            pushFollow(FOLLOW_22);
            rule__SpaceIteratorRange__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRange__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group__0"


    // $ANTLR start "rule__SpaceIteratorRange__Group__0__Impl"
    // InternalNabla.g:3290:1: rule__SpaceIteratorRange__Group__0__Impl : ( ( rule__SpaceIteratorRange__ConnectivityAssignment_0 ) ) ;
    public final void rule__SpaceIteratorRange__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3294:1: ( ( ( rule__SpaceIteratorRange__ConnectivityAssignment_0 ) ) )
            // InternalNabla.g:3295:1: ( ( rule__SpaceIteratorRange__ConnectivityAssignment_0 ) )
            {
            // InternalNabla.g:3295:1: ( ( rule__SpaceIteratorRange__ConnectivityAssignment_0 ) )
            // InternalNabla.g:3296:2: ( rule__SpaceIteratorRange__ConnectivityAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRangeAccess().getConnectivityAssignment_0()); 
            }
            // InternalNabla.g:3297:2: ( rule__SpaceIteratorRange__ConnectivityAssignment_0 )
            // InternalNabla.g:3297:3: rule__SpaceIteratorRange__ConnectivityAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRange__ConnectivityAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRangeAccess().getConnectivityAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group__0__Impl"


    // $ANTLR start "rule__SpaceIteratorRange__Group__1"
    // InternalNabla.g:3305:1: rule__SpaceIteratorRange__Group__1 : rule__SpaceIteratorRange__Group__1__Impl rule__SpaceIteratorRange__Group__2 ;
    public final void rule__SpaceIteratorRange__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3309:1: ( rule__SpaceIteratorRange__Group__1__Impl rule__SpaceIteratorRange__Group__2 )
            // InternalNabla.g:3310:2: rule__SpaceIteratorRange__Group__1__Impl rule__SpaceIteratorRange__Group__2
            {
            pushFollow(FOLLOW_27);
            rule__SpaceIteratorRange__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRange__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group__1"


    // $ANTLR start "rule__SpaceIteratorRange__Group__1__Impl"
    // InternalNabla.g:3317:1: rule__SpaceIteratorRange__Group__1__Impl : ( '(' ) ;
    public final void rule__SpaceIteratorRange__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3321:1: ( ( '(' ) )
            // InternalNabla.g:3322:1: ( '(' )
            {
            // InternalNabla.g:3322:1: ( '(' )
            // InternalNabla.g:3323:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRangeAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRangeAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group__1__Impl"


    // $ANTLR start "rule__SpaceIteratorRange__Group__2"
    // InternalNabla.g:3332:1: rule__SpaceIteratorRange__Group__2 : rule__SpaceIteratorRange__Group__2__Impl rule__SpaceIteratorRange__Group__3 ;
    public final void rule__SpaceIteratorRange__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3336:1: ( rule__SpaceIteratorRange__Group__2__Impl rule__SpaceIteratorRange__Group__3 )
            // InternalNabla.g:3337:2: rule__SpaceIteratorRange__Group__2__Impl rule__SpaceIteratorRange__Group__3
            {
            pushFollow(FOLLOW_27);
            rule__SpaceIteratorRange__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRange__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group__2"


    // $ANTLR start "rule__SpaceIteratorRange__Group__2__Impl"
    // InternalNabla.g:3344:1: rule__SpaceIteratorRange__Group__2__Impl : ( ( rule__SpaceIteratorRange__Group_2__0 )? ) ;
    public final void rule__SpaceIteratorRange__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3348:1: ( ( ( rule__SpaceIteratorRange__Group_2__0 )? ) )
            // InternalNabla.g:3349:1: ( ( rule__SpaceIteratorRange__Group_2__0 )? )
            {
            // InternalNabla.g:3349:1: ( ( rule__SpaceIteratorRange__Group_2__0 )? )
            // InternalNabla.g:3350:2: ( rule__SpaceIteratorRange__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRangeAccess().getGroup_2()); 
            }
            // InternalNabla.g:3351:2: ( rule__SpaceIteratorRange__Group_2__0 )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==RULE_ID||(LA31_0>=58 && LA31_0<=59)) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalNabla.g:3351:3: rule__SpaceIteratorRange__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SpaceIteratorRange__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRangeAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group__2__Impl"


    // $ANTLR start "rule__SpaceIteratorRange__Group__3"
    // InternalNabla.g:3359:1: rule__SpaceIteratorRange__Group__3 : rule__SpaceIteratorRange__Group__3__Impl ;
    public final void rule__SpaceIteratorRange__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3363:1: ( rule__SpaceIteratorRange__Group__3__Impl )
            // InternalNabla.g:3364:2: rule__SpaceIteratorRange__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRange__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group__3"


    // $ANTLR start "rule__SpaceIteratorRange__Group__3__Impl"
    // InternalNabla.g:3370:1: rule__SpaceIteratorRange__Group__3__Impl : ( ')' ) ;
    public final void rule__SpaceIteratorRange__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3374:1: ( ( ')' ) )
            // InternalNabla.g:3375:1: ( ')' )
            {
            // InternalNabla.g:3375:1: ( ')' )
            // InternalNabla.g:3376:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRangeAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRangeAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group__3__Impl"


    // $ANTLR start "rule__SpaceIteratorRange__Group_2__0"
    // InternalNabla.g:3386:1: rule__SpaceIteratorRange__Group_2__0 : rule__SpaceIteratorRange__Group_2__0__Impl rule__SpaceIteratorRange__Group_2__1 ;
    public final void rule__SpaceIteratorRange__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3390:1: ( rule__SpaceIteratorRange__Group_2__0__Impl rule__SpaceIteratorRange__Group_2__1 )
            // InternalNabla.g:3391:2: rule__SpaceIteratorRange__Group_2__0__Impl rule__SpaceIteratorRange__Group_2__1
            {
            pushFollow(FOLLOW_17);
            rule__SpaceIteratorRange__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRange__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group_2__0"


    // $ANTLR start "rule__SpaceIteratorRange__Group_2__0__Impl"
    // InternalNabla.g:3398:1: rule__SpaceIteratorRange__Group_2__0__Impl : ( ( rule__SpaceIteratorRange__ArgsAssignment_2_0 ) ) ;
    public final void rule__SpaceIteratorRange__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3402:1: ( ( ( rule__SpaceIteratorRange__ArgsAssignment_2_0 ) ) )
            // InternalNabla.g:3403:1: ( ( rule__SpaceIteratorRange__ArgsAssignment_2_0 ) )
            {
            // InternalNabla.g:3403:1: ( ( rule__SpaceIteratorRange__ArgsAssignment_2_0 ) )
            // InternalNabla.g:3404:2: ( rule__SpaceIteratorRange__ArgsAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRangeAccess().getArgsAssignment_2_0()); 
            }
            // InternalNabla.g:3405:2: ( rule__SpaceIteratorRange__ArgsAssignment_2_0 )
            // InternalNabla.g:3405:3: rule__SpaceIteratorRange__ArgsAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRange__ArgsAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRangeAccess().getArgsAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group_2__0__Impl"


    // $ANTLR start "rule__SpaceIteratorRange__Group_2__1"
    // InternalNabla.g:3413:1: rule__SpaceIteratorRange__Group_2__1 : rule__SpaceIteratorRange__Group_2__1__Impl ;
    public final void rule__SpaceIteratorRange__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3417:1: ( rule__SpaceIteratorRange__Group_2__1__Impl )
            // InternalNabla.g:3418:2: rule__SpaceIteratorRange__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRange__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group_2__1"


    // $ANTLR start "rule__SpaceIteratorRange__Group_2__1__Impl"
    // InternalNabla.g:3424:1: rule__SpaceIteratorRange__Group_2__1__Impl : ( ( rule__SpaceIteratorRange__Group_2_1__0 )* ) ;
    public final void rule__SpaceIteratorRange__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3428:1: ( ( ( rule__SpaceIteratorRange__Group_2_1__0 )* ) )
            // InternalNabla.g:3429:1: ( ( rule__SpaceIteratorRange__Group_2_1__0 )* )
            {
            // InternalNabla.g:3429:1: ( ( rule__SpaceIteratorRange__Group_2_1__0 )* )
            // InternalNabla.g:3430:2: ( rule__SpaceIteratorRange__Group_2_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRangeAccess().getGroup_2_1()); 
            }
            // InternalNabla.g:3431:2: ( rule__SpaceIteratorRange__Group_2_1__0 )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==41) ) {
                    alt32=1;
                }


                switch (alt32) {
            	case 1 :
            	    // InternalNabla.g:3431:3: rule__SpaceIteratorRange__Group_2_1__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__SpaceIteratorRange__Group_2_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRangeAccess().getGroup_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group_2__1__Impl"


    // $ANTLR start "rule__SpaceIteratorRange__Group_2_1__0"
    // InternalNabla.g:3440:1: rule__SpaceIteratorRange__Group_2_1__0 : rule__SpaceIteratorRange__Group_2_1__0__Impl rule__SpaceIteratorRange__Group_2_1__1 ;
    public final void rule__SpaceIteratorRange__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3444:1: ( rule__SpaceIteratorRange__Group_2_1__0__Impl rule__SpaceIteratorRange__Group_2_1__1 )
            // InternalNabla.g:3445:2: rule__SpaceIteratorRange__Group_2_1__0__Impl rule__SpaceIteratorRange__Group_2_1__1
            {
            pushFollow(FOLLOW_29);
            rule__SpaceIteratorRange__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRange__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group_2_1__0"


    // $ANTLR start "rule__SpaceIteratorRange__Group_2_1__0__Impl"
    // InternalNabla.g:3452:1: rule__SpaceIteratorRange__Group_2_1__0__Impl : ( ',' ) ;
    public final void rule__SpaceIteratorRange__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3456:1: ( ( ',' ) )
            // InternalNabla.g:3457:1: ( ',' )
            {
            // InternalNabla.g:3457:1: ( ',' )
            // InternalNabla.g:3458:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRangeAccess().getCommaKeyword_2_1_0()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRangeAccess().getCommaKeyword_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group_2_1__0__Impl"


    // $ANTLR start "rule__SpaceIteratorRange__Group_2_1__1"
    // InternalNabla.g:3467:1: rule__SpaceIteratorRange__Group_2_1__1 : rule__SpaceIteratorRange__Group_2_1__1__Impl ;
    public final void rule__SpaceIteratorRange__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3471:1: ( rule__SpaceIteratorRange__Group_2_1__1__Impl )
            // InternalNabla.g:3472:2: rule__SpaceIteratorRange__Group_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRange__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group_2_1__1"


    // $ANTLR start "rule__SpaceIteratorRange__Group_2_1__1__Impl"
    // InternalNabla.g:3478:1: rule__SpaceIteratorRange__Group_2_1__1__Impl : ( ( rule__SpaceIteratorRange__ArgsAssignment_2_1_1 ) ) ;
    public final void rule__SpaceIteratorRange__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3482:1: ( ( ( rule__SpaceIteratorRange__ArgsAssignment_2_1_1 ) ) )
            // InternalNabla.g:3483:1: ( ( rule__SpaceIteratorRange__ArgsAssignment_2_1_1 ) )
            {
            // InternalNabla.g:3483:1: ( ( rule__SpaceIteratorRange__ArgsAssignment_2_1_1 ) )
            // InternalNabla.g:3484:2: ( rule__SpaceIteratorRange__ArgsAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRangeAccess().getArgsAssignment_2_1_1()); 
            }
            // InternalNabla.g:3485:2: ( rule__SpaceIteratorRange__ArgsAssignment_2_1_1 )
            // InternalNabla.g:3485:3: rule__SpaceIteratorRange__ArgsAssignment_2_1_1
            {
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRange__ArgsAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRangeAccess().getArgsAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__Group_2_1__1__Impl"


    // $ANTLR start "rule__SpaceIteratorRef__Group_0__0"
    // InternalNabla.g:3494:1: rule__SpaceIteratorRef__Group_0__0 : rule__SpaceIteratorRef__Group_0__0__Impl rule__SpaceIteratorRef__Group_0__1 ;
    public final void rule__SpaceIteratorRef__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3498:1: ( rule__SpaceIteratorRef__Group_0__0__Impl rule__SpaceIteratorRef__Group_0__1 )
            // InternalNabla.g:3499:2: rule__SpaceIteratorRef__Group_0__0__Impl rule__SpaceIteratorRef__Group_0__1
            {
            pushFollow(FOLLOW_22);
            rule__SpaceIteratorRef__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRef__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRef__Group_0__0"


    // $ANTLR start "rule__SpaceIteratorRef__Group_0__0__Impl"
    // InternalNabla.g:3506:1: rule__SpaceIteratorRef__Group_0__0__Impl : ( ( rule__SpaceIteratorRef__Alternatives_0_0 ) ) ;
    public final void rule__SpaceIteratorRef__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3510:1: ( ( ( rule__SpaceIteratorRef__Alternatives_0_0 ) ) )
            // InternalNabla.g:3511:1: ( ( rule__SpaceIteratorRef__Alternatives_0_0 ) )
            {
            // InternalNabla.g:3511:1: ( ( rule__SpaceIteratorRef__Alternatives_0_0 ) )
            // InternalNabla.g:3512:2: ( rule__SpaceIteratorRef__Alternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRefAccess().getAlternatives_0_0()); 
            }
            // InternalNabla.g:3513:2: ( rule__SpaceIteratorRef__Alternatives_0_0 )
            // InternalNabla.g:3513:3: rule__SpaceIteratorRef__Alternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRef__Alternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRefAccess().getAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRef__Group_0__0__Impl"


    // $ANTLR start "rule__SpaceIteratorRef__Group_0__1"
    // InternalNabla.g:3521:1: rule__SpaceIteratorRef__Group_0__1 : rule__SpaceIteratorRef__Group_0__1__Impl rule__SpaceIteratorRef__Group_0__2 ;
    public final void rule__SpaceIteratorRef__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3525:1: ( rule__SpaceIteratorRef__Group_0__1__Impl rule__SpaceIteratorRef__Group_0__2 )
            // InternalNabla.g:3526:2: rule__SpaceIteratorRef__Group_0__1__Impl rule__SpaceIteratorRef__Group_0__2
            {
            pushFollow(FOLLOW_3);
            rule__SpaceIteratorRef__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRef__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRef__Group_0__1"


    // $ANTLR start "rule__SpaceIteratorRef__Group_0__1__Impl"
    // InternalNabla.g:3533:1: rule__SpaceIteratorRef__Group_0__1__Impl : ( '(' ) ;
    public final void rule__SpaceIteratorRef__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3537:1: ( ( '(' ) )
            // InternalNabla.g:3538:1: ( '(' )
            {
            // InternalNabla.g:3538:1: ( '(' )
            // InternalNabla.g:3539:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRefAccess().getLeftParenthesisKeyword_0_1()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRefAccess().getLeftParenthesisKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRef__Group_0__1__Impl"


    // $ANTLR start "rule__SpaceIteratorRef__Group_0__2"
    // InternalNabla.g:3548:1: rule__SpaceIteratorRef__Group_0__2 : rule__SpaceIteratorRef__Group_0__2__Impl rule__SpaceIteratorRef__Group_0__3 ;
    public final void rule__SpaceIteratorRef__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3552:1: ( rule__SpaceIteratorRef__Group_0__2__Impl rule__SpaceIteratorRef__Group_0__3 )
            // InternalNabla.g:3553:2: rule__SpaceIteratorRef__Group_0__2__Impl rule__SpaceIteratorRef__Group_0__3
            {
            pushFollow(FOLLOW_23);
            rule__SpaceIteratorRef__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRef__Group_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRef__Group_0__2"


    // $ANTLR start "rule__SpaceIteratorRef__Group_0__2__Impl"
    // InternalNabla.g:3560:1: rule__SpaceIteratorRef__Group_0__2__Impl : ( ( rule__SpaceIteratorRef__IteratorAssignment_0_2 ) ) ;
    public final void rule__SpaceIteratorRef__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3564:1: ( ( ( rule__SpaceIteratorRef__IteratorAssignment_0_2 ) ) )
            // InternalNabla.g:3565:1: ( ( rule__SpaceIteratorRef__IteratorAssignment_0_2 ) )
            {
            // InternalNabla.g:3565:1: ( ( rule__SpaceIteratorRef__IteratorAssignment_0_2 ) )
            // InternalNabla.g:3566:2: ( rule__SpaceIteratorRef__IteratorAssignment_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRefAccess().getIteratorAssignment_0_2()); 
            }
            // InternalNabla.g:3567:2: ( rule__SpaceIteratorRef__IteratorAssignment_0_2 )
            // InternalNabla.g:3567:3: rule__SpaceIteratorRef__IteratorAssignment_0_2
            {
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRef__IteratorAssignment_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRefAccess().getIteratorAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRef__Group_0__2__Impl"


    // $ANTLR start "rule__SpaceIteratorRef__Group_0__3"
    // InternalNabla.g:3575:1: rule__SpaceIteratorRef__Group_0__3 : rule__SpaceIteratorRef__Group_0__3__Impl ;
    public final void rule__SpaceIteratorRef__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3579:1: ( rule__SpaceIteratorRef__Group_0__3__Impl )
            // InternalNabla.g:3580:2: rule__SpaceIteratorRef__Group_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SpaceIteratorRef__Group_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRef__Group_0__3"


    // $ANTLR start "rule__SpaceIteratorRef__Group_0__3__Impl"
    // InternalNabla.g:3586:1: rule__SpaceIteratorRef__Group_0__3__Impl : ( ')' ) ;
    public final void rule__SpaceIteratorRef__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3590:1: ( ( ')' ) )
            // InternalNabla.g:3591:1: ( ')' )
            {
            // InternalNabla.g:3591:1: ( ')' )
            // InternalNabla.g:3592:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRefAccess().getRightParenthesisKeyword_0_3()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRefAccess().getRightParenthesisKeyword_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRef__Group_0__3__Impl"


    // $ANTLR start "rule__ScalarVarDefinition__Group__0"
    // InternalNabla.g:3602:1: rule__ScalarVarDefinition__Group__0 : rule__ScalarVarDefinition__Group__0__Impl rule__ScalarVarDefinition__Group__1 ;
    public final void rule__ScalarVarDefinition__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3606:1: ( rule__ScalarVarDefinition__Group__0__Impl rule__ScalarVarDefinition__Group__1 )
            // InternalNabla.g:3607:2: rule__ScalarVarDefinition__Group__0__Impl rule__ScalarVarDefinition__Group__1
            {
            pushFollow(FOLLOW_30);
            rule__ScalarVarDefinition__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ScalarVarDefinition__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__Group__0"


    // $ANTLR start "rule__ScalarVarDefinition__Group__0__Impl"
    // InternalNabla.g:3614:1: rule__ScalarVarDefinition__Group__0__Impl : ( ( rule__ScalarVarDefinition__ConstAssignment_0 )? ) ;
    public final void rule__ScalarVarDefinition__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3618:1: ( ( ( rule__ScalarVarDefinition__ConstAssignment_0 )? ) )
            // InternalNabla.g:3619:1: ( ( rule__ScalarVarDefinition__ConstAssignment_0 )? )
            {
            // InternalNabla.g:3619:1: ( ( rule__ScalarVarDefinition__ConstAssignment_0 )? )
            // InternalNabla.g:3620:2: ( rule__ScalarVarDefinition__ConstAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarDefinitionAccess().getConstAssignment_0()); 
            }
            // InternalNabla.g:3621:2: ( rule__ScalarVarDefinition__ConstAssignment_0 )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==60) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // InternalNabla.g:3621:3: rule__ScalarVarDefinition__ConstAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarVarDefinition__ConstAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarDefinitionAccess().getConstAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__Group__0__Impl"


    // $ANTLR start "rule__ScalarVarDefinition__Group__1"
    // InternalNabla.g:3629:1: rule__ScalarVarDefinition__Group__1 : rule__ScalarVarDefinition__Group__1__Impl rule__ScalarVarDefinition__Group__2 ;
    public final void rule__ScalarVarDefinition__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3633:1: ( rule__ScalarVarDefinition__Group__1__Impl rule__ScalarVarDefinition__Group__2 )
            // InternalNabla.g:3634:2: rule__ScalarVarDefinition__Group__1__Impl rule__ScalarVarDefinition__Group__2
            {
            pushFollow(FOLLOW_3);
            rule__ScalarVarDefinition__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ScalarVarDefinition__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__Group__1"


    // $ANTLR start "rule__ScalarVarDefinition__Group__1__Impl"
    // InternalNabla.g:3641:1: rule__ScalarVarDefinition__Group__1__Impl : ( ( rule__ScalarVarDefinition__TypeAssignment_1 ) ) ;
    public final void rule__ScalarVarDefinition__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3645:1: ( ( ( rule__ScalarVarDefinition__TypeAssignment_1 ) ) )
            // InternalNabla.g:3646:1: ( ( rule__ScalarVarDefinition__TypeAssignment_1 ) )
            {
            // InternalNabla.g:3646:1: ( ( rule__ScalarVarDefinition__TypeAssignment_1 ) )
            // InternalNabla.g:3647:2: ( rule__ScalarVarDefinition__TypeAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarDefinitionAccess().getTypeAssignment_1()); 
            }
            // InternalNabla.g:3648:2: ( rule__ScalarVarDefinition__TypeAssignment_1 )
            // InternalNabla.g:3648:3: rule__ScalarVarDefinition__TypeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ScalarVarDefinition__TypeAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarDefinitionAccess().getTypeAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__Group__1__Impl"


    // $ANTLR start "rule__ScalarVarDefinition__Group__2"
    // InternalNabla.g:3656:1: rule__ScalarVarDefinition__Group__2 : rule__ScalarVarDefinition__Group__2__Impl rule__ScalarVarDefinition__Group__3 ;
    public final void rule__ScalarVarDefinition__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3660:1: ( rule__ScalarVarDefinition__Group__2__Impl rule__ScalarVarDefinition__Group__3 )
            // InternalNabla.g:3661:2: rule__ScalarVarDefinition__Group__2__Impl rule__ScalarVarDefinition__Group__3
            {
            pushFollow(FOLLOW_20);
            rule__ScalarVarDefinition__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ScalarVarDefinition__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__Group__2"


    // $ANTLR start "rule__ScalarVarDefinition__Group__2__Impl"
    // InternalNabla.g:3668:1: rule__ScalarVarDefinition__Group__2__Impl : ( ( rule__ScalarVarDefinition__VariableAssignment_2 ) ) ;
    public final void rule__ScalarVarDefinition__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3672:1: ( ( ( rule__ScalarVarDefinition__VariableAssignment_2 ) ) )
            // InternalNabla.g:3673:1: ( ( rule__ScalarVarDefinition__VariableAssignment_2 ) )
            {
            // InternalNabla.g:3673:1: ( ( rule__ScalarVarDefinition__VariableAssignment_2 ) )
            // InternalNabla.g:3674:2: ( rule__ScalarVarDefinition__VariableAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarDefinitionAccess().getVariableAssignment_2()); 
            }
            // InternalNabla.g:3675:2: ( rule__ScalarVarDefinition__VariableAssignment_2 )
            // InternalNabla.g:3675:3: rule__ScalarVarDefinition__VariableAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__ScalarVarDefinition__VariableAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarDefinitionAccess().getVariableAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__Group__2__Impl"


    // $ANTLR start "rule__ScalarVarDefinition__Group__3"
    // InternalNabla.g:3683:1: rule__ScalarVarDefinition__Group__3 : rule__ScalarVarDefinition__Group__3__Impl rule__ScalarVarDefinition__Group__4 ;
    public final void rule__ScalarVarDefinition__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3687:1: ( rule__ScalarVarDefinition__Group__3__Impl rule__ScalarVarDefinition__Group__4 )
            // InternalNabla.g:3688:2: rule__ScalarVarDefinition__Group__3__Impl rule__ScalarVarDefinition__Group__4
            {
            pushFollow(FOLLOW_21);
            rule__ScalarVarDefinition__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ScalarVarDefinition__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__Group__3"


    // $ANTLR start "rule__ScalarVarDefinition__Group__3__Impl"
    // InternalNabla.g:3695:1: rule__ScalarVarDefinition__Group__3__Impl : ( '=' ) ;
    public final void rule__ScalarVarDefinition__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3699:1: ( ( '=' ) )
            // InternalNabla.g:3700:1: ( '=' )
            {
            // InternalNabla.g:3700:1: ( '=' )
            // InternalNabla.g:3701:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarDefinitionAccess().getEqualsSignKeyword_3()); 
            }
            match(input,42,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarDefinitionAccess().getEqualsSignKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__Group__3__Impl"


    // $ANTLR start "rule__ScalarVarDefinition__Group__4"
    // InternalNabla.g:3710:1: rule__ScalarVarDefinition__Group__4 : rule__ScalarVarDefinition__Group__4__Impl rule__ScalarVarDefinition__Group__5 ;
    public final void rule__ScalarVarDefinition__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3714:1: ( rule__ScalarVarDefinition__Group__4__Impl rule__ScalarVarDefinition__Group__5 )
            // InternalNabla.g:3715:2: rule__ScalarVarDefinition__Group__4__Impl rule__ScalarVarDefinition__Group__5
            {
            pushFollow(FOLLOW_4);
            rule__ScalarVarDefinition__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ScalarVarDefinition__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__Group__4"


    // $ANTLR start "rule__ScalarVarDefinition__Group__4__Impl"
    // InternalNabla.g:3722:1: rule__ScalarVarDefinition__Group__4__Impl : ( ( rule__ScalarVarDefinition__DefaultValueAssignment_4 ) ) ;
    public final void rule__ScalarVarDefinition__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3726:1: ( ( ( rule__ScalarVarDefinition__DefaultValueAssignment_4 ) ) )
            // InternalNabla.g:3727:1: ( ( rule__ScalarVarDefinition__DefaultValueAssignment_4 ) )
            {
            // InternalNabla.g:3727:1: ( ( rule__ScalarVarDefinition__DefaultValueAssignment_4 ) )
            // InternalNabla.g:3728:2: ( rule__ScalarVarDefinition__DefaultValueAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarDefinitionAccess().getDefaultValueAssignment_4()); 
            }
            // InternalNabla.g:3729:2: ( rule__ScalarVarDefinition__DefaultValueAssignment_4 )
            // InternalNabla.g:3729:3: rule__ScalarVarDefinition__DefaultValueAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__ScalarVarDefinition__DefaultValueAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarDefinitionAccess().getDefaultValueAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__Group__4__Impl"


    // $ANTLR start "rule__ScalarVarDefinition__Group__5"
    // InternalNabla.g:3737:1: rule__ScalarVarDefinition__Group__5 : rule__ScalarVarDefinition__Group__5__Impl ;
    public final void rule__ScalarVarDefinition__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3741:1: ( rule__ScalarVarDefinition__Group__5__Impl )
            // InternalNabla.g:3742:2: rule__ScalarVarDefinition__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ScalarVarDefinition__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__Group__5"


    // $ANTLR start "rule__ScalarVarDefinition__Group__5__Impl"
    // InternalNabla.g:3748:1: rule__ScalarVarDefinition__Group__5__Impl : ( ';' ) ;
    public final void rule__ScalarVarDefinition__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3752:1: ( ( ';' ) )
            // InternalNabla.g:3753:1: ( ';' )
            {
            // InternalNabla.g:3753:1: ( ';' )
            // InternalNabla.g:3754:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarDefinitionAccess().getSemicolonKeyword_5()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarDefinitionAccess().getSemicolonKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__Group__5__Impl"


    // $ANTLR start "rule__VarGroupDeclaration__Group__0"
    // InternalNabla.g:3764:1: rule__VarGroupDeclaration__Group__0 : rule__VarGroupDeclaration__Group__0__Impl rule__VarGroupDeclaration__Group__1 ;
    public final void rule__VarGroupDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3768:1: ( rule__VarGroupDeclaration__Group__0__Impl rule__VarGroupDeclaration__Group__1 )
            // InternalNabla.g:3769:2: rule__VarGroupDeclaration__Group__0__Impl rule__VarGroupDeclaration__Group__1
            {
            pushFollow(FOLLOW_3);
            rule__VarGroupDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarGroupDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarGroupDeclaration__Group__0"


    // $ANTLR start "rule__VarGroupDeclaration__Group__0__Impl"
    // InternalNabla.g:3776:1: rule__VarGroupDeclaration__Group__0__Impl : ( ( rule__VarGroupDeclaration__TypeAssignment_0 ) ) ;
    public final void rule__VarGroupDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3780:1: ( ( ( rule__VarGroupDeclaration__TypeAssignment_0 ) ) )
            // InternalNabla.g:3781:1: ( ( rule__VarGroupDeclaration__TypeAssignment_0 ) )
            {
            // InternalNabla.g:3781:1: ( ( rule__VarGroupDeclaration__TypeAssignment_0 ) )
            // InternalNabla.g:3782:2: ( rule__VarGroupDeclaration__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarGroupDeclarationAccess().getTypeAssignment_0()); 
            }
            // InternalNabla.g:3783:2: ( rule__VarGroupDeclaration__TypeAssignment_0 )
            // InternalNabla.g:3783:3: rule__VarGroupDeclaration__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__VarGroupDeclaration__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarGroupDeclarationAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarGroupDeclaration__Group__0__Impl"


    // $ANTLR start "rule__VarGroupDeclaration__Group__1"
    // InternalNabla.g:3791:1: rule__VarGroupDeclaration__Group__1 : rule__VarGroupDeclaration__Group__1__Impl rule__VarGroupDeclaration__Group__2 ;
    public final void rule__VarGroupDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3795:1: ( rule__VarGroupDeclaration__Group__1__Impl rule__VarGroupDeclaration__Group__2 )
            // InternalNabla.g:3796:2: rule__VarGroupDeclaration__Group__1__Impl rule__VarGroupDeclaration__Group__2
            {
            pushFollow(FOLLOW_31);
            rule__VarGroupDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarGroupDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarGroupDeclaration__Group__1"


    // $ANTLR start "rule__VarGroupDeclaration__Group__1__Impl"
    // InternalNabla.g:3803:1: rule__VarGroupDeclaration__Group__1__Impl : ( ( rule__VarGroupDeclaration__VariablesAssignment_1 ) ) ;
    public final void rule__VarGroupDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3807:1: ( ( ( rule__VarGroupDeclaration__VariablesAssignment_1 ) ) )
            // InternalNabla.g:3808:1: ( ( rule__VarGroupDeclaration__VariablesAssignment_1 ) )
            {
            // InternalNabla.g:3808:1: ( ( rule__VarGroupDeclaration__VariablesAssignment_1 ) )
            // InternalNabla.g:3809:2: ( rule__VarGroupDeclaration__VariablesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarGroupDeclarationAccess().getVariablesAssignment_1()); 
            }
            // InternalNabla.g:3810:2: ( rule__VarGroupDeclaration__VariablesAssignment_1 )
            // InternalNabla.g:3810:3: rule__VarGroupDeclaration__VariablesAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__VarGroupDeclaration__VariablesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarGroupDeclarationAccess().getVariablesAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarGroupDeclaration__Group__1__Impl"


    // $ANTLR start "rule__VarGroupDeclaration__Group__2"
    // InternalNabla.g:3818:1: rule__VarGroupDeclaration__Group__2 : rule__VarGroupDeclaration__Group__2__Impl rule__VarGroupDeclaration__Group__3 ;
    public final void rule__VarGroupDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3822:1: ( rule__VarGroupDeclaration__Group__2__Impl rule__VarGroupDeclaration__Group__3 )
            // InternalNabla.g:3823:2: rule__VarGroupDeclaration__Group__2__Impl rule__VarGroupDeclaration__Group__3
            {
            pushFollow(FOLLOW_31);
            rule__VarGroupDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarGroupDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarGroupDeclaration__Group__2"


    // $ANTLR start "rule__VarGroupDeclaration__Group__2__Impl"
    // InternalNabla.g:3830:1: rule__VarGroupDeclaration__Group__2__Impl : ( ( rule__VarGroupDeclaration__Group_2__0 )* ) ;
    public final void rule__VarGroupDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3834:1: ( ( ( rule__VarGroupDeclaration__Group_2__0 )* ) )
            // InternalNabla.g:3835:1: ( ( rule__VarGroupDeclaration__Group_2__0 )* )
            {
            // InternalNabla.g:3835:1: ( ( rule__VarGroupDeclaration__Group_2__0 )* )
            // InternalNabla.g:3836:2: ( rule__VarGroupDeclaration__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarGroupDeclarationAccess().getGroup_2()); 
            }
            // InternalNabla.g:3837:2: ( rule__VarGroupDeclaration__Group_2__0 )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==41) ) {
                    alt34=1;
                }


                switch (alt34) {
            	case 1 :
            	    // InternalNabla.g:3837:3: rule__VarGroupDeclaration__Group_2__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__VarGroupDeclaration__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarGroupDeclarationAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarGroupDeclaration__Group__2__Impl"


    // $ANTLR start "rule__VarGroupDeclaration__Group__3"
    // InternalNabla.g:3845:1: rule__VarGroupDeclaration__Group__3 : rule__VarGroupDeclaration__Group__3__Impl ;
    public final void rule__VarGroupDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3849:1: ( rule__VarGroupDeclaration__Group__3__Impl )
            // InternalNabla.g:3850:2: rule__VarGroupDeclaration__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarGroupDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarGroupDeclaration__Group__3"


    // $ANTLR start "rule__VarGroupDeclaration__Group__3__Impl"
    // InternalNabla.g:3856:1: rule__VarGroupDeclaration__Group__3__Impl : ( ';' ) ;
    public final void rule__VarGroupDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3860:1: ( ( ';' ) )
            // InternalNabla.g:3861:1: ( ';' )
            {
            // InternalNabla.g:3861:1: ( ';' )
            // InternalNabla.g:3862:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarGroupDeclarationAccess().getSemicolonKeyword_3()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarGroupDeclarationAccess().getSemicolonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarGroupDeclaration__Group__3__Impl"


    // $ANTLR start "rule__VarGroupDeclaration__Group_2__0"
    // InternalNabla.g:3872:1: rule__VarGroupDeclaration__Group_2__0 : rule__VarGroupDeclaration__Group_2__0__Impl rule__VarGroupDeclaration__Group_2__1 ;
    public final void rule__VarGroupDeclaration__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3876:1: ( rule__VarGroupDeclaration__Group_2__0__Impl rule__VarGroupDeclaration__Group_2__1 )
            // InternalNabla.g:3877:2: rule__VarGroupDeclaration__Group_2__0__Impl rule__VarGroupDeclaration__Group_2__1
            {
            pushFollow(FOLLOW_3);
            rule__VarGroupDeclaration__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarGroupDeclaration__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarGroupDeclaration__Group_2__0"


    // $ANTLR start "rule__VarGroupDeclaration__Group_2__0__Impl"
    // InternalNabla.g:3884:1: rule__VarGroupDeclaration__Group_2__0__Impl : ( ',' ) ;
    public final void rule__VarGroupDeclaration__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3888:1: ( ( ',' ) )
            // InternalNabla.g:3889:1: ( ',' )
            {
            // InternalNabla.g:3889:1: ( ',' )
            // InternalNabla.g:3890:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarGroupDeclarationAccess().getCommaKeyword_2_0()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarGroupDeclarationAccess().getCommaKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarGroupDeclaration__Group_2__0__Impl"


    // $ANTLR start "rule__VarGroupDeclaration__Group_2__1"
    // InternalNabla.g:3899:1: rule__VarGroupDeclaration__Group_2__1 : rule__VarGroupDeclaration__Group_2__1__Impl ;
    public final void rule__VarGroupDeclaration__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3903:1: ( rule__VarGroupDeclaration__Group_2__1__Impl )
            // InternalNabla.g:3904:2: rule__VarGroupDeclaration__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarGroupDeclaration__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarGroupDeclaration__Group_2__1"


    // $ANTLR start "rule__VarGroupDeclaration__Group_2__1__Impl"
    // InternalNabla.g:3910:1: rule__VarGroupDeclaration__Group_2__1__Impl : ( ( rule__VarGroupDeclaration__VariablesAssignment_2_1 ) ) ;
    public final void rule__VarGroupDeclaration__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3914:1: ( ( ( rule__VarGroupDeclaration__VariablesAssignment_2_1 ) ) )
            // InternalNabla.g:3915:1: ( ( rule__VarGroupDeclaration__VariablesAssignment_2_1 ) )
            {
            // InternalNabla.g:3915:1: ( ( rule__VarGroupDeclaration__VariablesAssignment_2_1 ) )
            // InternalNabla.g:3916:2: ( rule__VarGroupDeclaration__VariablesAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarGroupDeclarationAccess().getVariablesAssignment_2_1()); 
            }
            // InternalNabla.g:3917:2: ( rule__VarGroupDeclaration__VariablesAssignment_2_1 )
            // InternalNabla.g:3917:3: rule__VarGroupDeclaration__VariablesAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__VarGroupDeclaration__VariablesAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarGroupDeclarationAccess().getVariablesAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarGroupDeclaration__Group_2__1__Impl"


    // $ANTLR start "rule__ArrayVar__Group__0"
    // InternalNabla.g:3926:1: rule__ArrayVar__Group__0 : rule__ArrayVar__Group__0__Impl rule__ArrayVar__Group__1 ;
    public final void rule__ArrayVar__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3930:1: ( rule__ArrayVar__Group__0__Impl rule__ArrayVar__Group__1 )
            // InternalNabla.g:3931:2: rule__ArrayVar__Group__0__Impl rule__ArrayVar__Group__1
            {
            pushFollow(FOLLOW_32);
            rule__ArrayVar__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayVar__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__Group__0"


    // $ANTLR start "rule__ArrayVar__Group__0__Impl"
    // InternalNabla.g:3938:1: rule__ArrayVar__Group__0__Impl : ( ( rule__ArrayVar__NameAssignment_0 ) ) ;
    public final void rule__ArrayVar__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3942:1: ( ( ( rule__ArrayVar__NameAssignment_0 ) ) )
            // InternalNabla.g:3943:1: ( ( rule__ArrayVar__NameAssignment_0 ) )
            {
            // InternalNabla.g:3943:1: ( ( rule__ArrayVar__NameAssignment_0 ) )
            // InternalNabla.g:3944:2: ( rule__ArrayVar__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayVarAccess().getNameAssignment_0()); 
            }
            // InternalNabla.g:3945:2: ( rule__ArrayVar__NameAssignment_0 )
            // InternalNabla.g:3945:3: rule__ArrayVar__NameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ArrayVar__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayVarAccess().getNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__Group__0__Impl"


    // $ANTLR start "rule__ArrayVar__Group__1"
    // InternalNabla.g:3953:1: rule__ArrayVar__Group__1 : rule__ArrayVar__Group__1__Impl rule__ArrayVar__Group__2 ;
    public final void rule__ArrayVar__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3957:1: ( rule__ArrayVar__Group__1__Impl rule__ArrayVar__Group__2 )
            // InternalNabla.g:3958:2: rule__ArrayVar__Group__1__Impl rule__ArrayVar__Group__2
            {
            pushFollow(FOLLOW_3);
            rule__ArrayVar__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayVar__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__Group__1"


    // $ANTLR start "rule__ArrayVar__Group__1__Impl"
    // InternalNabla.g:3965:1: rule__ArrayVar__Group__1__Impl : ( '[' ) ;
    public final void rule__ArrayVar__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3969:1: ( ( '[' ) )
            // InternalNabla.g:3970:1: ( '[' )
            {
            // InternalNabla.g:3970:1: ( '[' )
            // InternalNabla.g:3971:2: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayVarAccess().getLeftSquareBracketKeyword_1()); 
            }
            match(input,48,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayVarAccess().getLeftSquareBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__Group__1__Impl"


    // $ANTLR start "rule__ArrayVar__Group__2"
    // InternalNabla.g:3980:1: rule__ArrayVar__Group__2 : rule__ArrayVar__Group__2__Impl rule__ArrayVar__Group__3 ;
    public final void rule__ArrayVar__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3984:1: ( rule__ArrayVar__Group__2__Impl rule__ArrayVar__Group__3 )
            // InternalNabla.g:3985:2: rule__ArrayVar__Group__2__Impl rule__ArrayVar__Group__3
            {
            pushFollow(FOLLOW_33);
            rule__ArrayVar__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayVar__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__Group__2"


    // $ANTLR start "rule__ArrayVar__Group__2__Impl"
    // InternalNabla.g:3992:1: rule__ArrayVar__Group__2__Impl : ( ( rule__ArrayVar__DimensionsAssignment_2 ) ) ;
    public final void rule__ArrayVar__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:3996:1: ( ( ( rule__ArrayVar__DimensionsAssignment_2 ) ) )
            // InternalNabla.g:3997:1: ( ( rule__ArrayVar__DimensionsAssignment_2 ) )
            {
            // InternalNabla.g:3997:1: ( ( rule__ArrayVar__DimensionsAssignment_2 ) )
            // InternalNabla.g:3998:2: ( rule__ArrayVar__DimensionsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayVarAccess().getDimensionsAssignment_2()); 
            }
            // InternalNabla.g:3999:2: ( rule__ArrayVar__DimensionsAssignment_2 )
            // InternalNabla.g:3999:3: rule__ArrayVar__DimensionsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__ArrayVar__DimensionsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayVarAccess().getDimensionsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__Group__2__Impl"


    // $ANTLR start "rule__ArrayVar__Group__3"
    // InternalNabla.g:4007:1: rule__ArrayVar__Group__3 : rule__ArrayVar__Group__3__Impl rule__ArrayVar__Group__4 ;
    public final void rule__ArrayVar__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4011:1: ( rule__ArrayVar__Group__3__Impl rule__ArrayVar__Group__4 )
            // InternalNabla.g:4012:2: rule__ArrayVar__Group__3__Impl rule__ArrayVar__Group__4
            {
            pushFollow(FOLLOW_33);
            rule__ArrayVar__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayVar__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__Group__3"


    // $ANTLR start "rule__ArrayVar__Group__3__Impl"
    // InternalNabla.g:4019:1: rule__ArrayVar__Group__3__Impl : ( ( rule__ArrayVar__Group_3__0 )* ) ;
    public final void rule__ArrayVar__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4023:1: ( ( ( rule__ArrayVar__Group_3__0 )* ) )
            // InternalNabla.g:4024:1: ( ( rule__ArrayVar__Group_3__0 )* )
            {
            // InternalNabla.g:4024:1: ( ( rule__ArrayVar__Group_3__0 )* )
            // InternalNabla.g:4025:2: ( rule__ArrayVar__Group_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayVarAccess().getGroup_3()); 
            }
            // InternalNabla.g:4026:2: ( rule__ArrayVar__Group_3__0 )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( (LA35_0==41) ) {
                    alt35=1;
                }


                switch (alt35) {
            	case 1 :
            	    // InternalNabla.g:4026:3: rule__ArrayVar__Group_3__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__ArrayVar__Group_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayVarAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__Group__3__Impl"


    // $ANTLR start "rule__ArrayVar__Group__4"
    // InternalNabla.g:4034:1: rule__ArrayVar__Group__4 : rule__ArrayVar__Group__4__Impl ;
    public final void rule__ArrayVar__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4038:1: ( rule__ArrayVar__Group__4__Impl )
            // InternalNabla.g:4039:2: rule__ArrayVar__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayVar__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__Group__4"


    // $ANTLR start "rule__ArrayVar__Group__4__Impl"
    // InternalNabla.g:4045:1: rule__ArrayVar__Group__4__Impl : ( ']' ) ;
    public final void rule__ArrayVar__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4049:1: ( ( ']' ) )
            // InternalNabla.g:4050:1: ( ']' )
            {
            // InternalNabla.g:4050:1: ( ']' )
            // InternalNabla.g:4051:2: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayVarAccess().getRightSquareBracketKeyword_4()); 
            }
            match(input,49,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayVarAccess().getRightSquareBracketKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__Group__4__Impl"


    // $ANTLR start "rule__ArrayVar__Group_3__0"
    // InternalNabla.g:4061:1: rule__ArrayVar__Group_3__0 : rule__ArrayVar__Group_3__0__Impl rule__ArrayVar__Group_3__1 ;
    public final void rule__ArrayVar__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4065:1: ( rule__ArrayVar__Group_3__0__Impl rule__ArrayVar__Group_3__1 )
            // InternalNabla.g:4066:2: rule__ArrayVar__Group_3__0__Impl rule__ArrayVar__Group_3__1
            {
            pushFollow(FOLLOW_3);
            rule__ArrayVar__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayVar__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__Group_3__0"


    // $ANTLR start "rule__ArrayVar__Group_3__0__Impl"
    // InternalNabla.g:4073:1: rule__ArrayVar__Group_3__0__Impl : ( ',' ) ;
    public final void rule__ArrayVar__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4077:1: ( ( ',' ) )
            // InternalNabla.g:4078:1: ( ',' )
            {
            // InternalNabla.g:4078:1: ( ',' )
            // InternalNabla.g:4079:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayVarAccess().getCommaKeyword_3_0()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayVarAccess().getCommaKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__Group_3__0__Impl"


    // $ANTLR start "rule__ArrayVar__Group_3__1"
    // InternalNabla.g:4088:1: rule__ArrayVar__Group_3__1 : rule__ArrayVar__Group_3__1__Impl ;
    public final void rule__ArrayVar__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4092:1: ( rule__ArrayVar__Group_3__1__Impl )
            // InternalNabla.g:4093:2: rule__ArrayVar__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayVar__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__Group_3__1"


    // $ANTLR start "rule__ArrayVar__Group_3__1__Impl"
    // InternalNabla.g:4099:1: rule__ArrayVar__Group_3__1__Impl : ( ( rule__ArrayVar__DimensionsAssignment_3_1 ) ) ;
    public final void rule__ArrayVar__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4103:1: ( ( ( rule__ArrayVar__DimensionsAssignment_3_1 ) ) )
            // InternalNabla.g:4104:1: ( ( rule__ArrayVar__DimensionsAssignment_3_1 ) )
            {
            // InternalNabla.g:4104:1: ( ( rule__ArrayVar__DimensionsAssignment_3_1 ) )
            // InternalNabla.g:4105:2: ( rule__ArrayVar__DimensionsAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayVarAccess().getDimensionsAssignment_3_1()); 
            }
            // InternalNabla.g:4106:2: ( rule__ArrayVar__DimensionsAssignment_3_1 )
            // InternalNabla.g:4106:3: rule__ArrayVar__DimensionsAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__ArrayVar__DimensionsAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayVarAccess().getDimensionsAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__Group_3__1__Impl"


    // $ANTLR start "rule__Connectivity__Group__0"
    // InternalNabla.g:4115:1: rule__Connectivity__Group__0 : rule__Connectivity__Group__0__Impl rule__Connectivity__Group__1 ;
    public final void rule__Connectivity__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4119:1: ( rule__Connectivity__Group__0__Impl rule__Connectivity__Group__1 )
            // InternalNabla.g:4120:2: rule__Connectivity__Group__0__Impl rule__Connectivity__Group__1
            {
            pushFollow(FOLLOW_14);
            rule__Connectivity__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Connectivity__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__0"


    // $ANTLR start "rule__Connectivity__Group__0__Impl"
    // InternalNabla.g:4127:1: rule__Connectivity__Group__0__Impl : ( ( rule__Connectivity__NameAssignment_0 ) ) ;
    public final void rule__Connectivity__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4131:1: ( ( ( rule__Connectivity__NameAssignment_0 ) ) )
            // InternalNabla.g:4132:1: ( ( rule__Connectivity__NameAssignment_0 ) )
            {
            // InternalNabla.g:4132:1: ( ( rule__Connectivity__NameAssignment_0 ) )
            // InternalNabla.g:4133:2: ( rule__Connectivity__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getNameAssignment_0()); 
            }
            // InternalNabla.g:4134:2: ( rule__Connectivity__NameAssignment_0 )
            // InternalNabla.g:4134:3: rule__Connectivity__NameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Connectivity__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__0__Impl"


    // $ANTLR start "rule__Connectivity__Group__1"
    // InternalNabla.g:4142:1: rule__Connectivity__Group__1 : rule__Connectivity__Group__1__Impl rule__Connectivity__Group__2 ;
    public final void rule__Connectivity__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4146:1: ( rule__Connectivity__Group__1__Impl rule__Connectivity__Group__2 )
            // InternalNabla.g:4147:2: rule__Connectivity__Group__1__Impl rule__Connectivity__Group__2
            {
            pushFollow(FOLLOW_22);
            rule__Connectivity__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Connectivity__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__1"


    // $ANTLR start "rule__Connectivity__Group__1__Impl"
    // InternalNabla.g:4154:1: rule__Connectivity__Group__1__Impl : ( ':' ) ;
    public final void rule__Connectivity__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4158:1: ( ( ':' ) )
            // InternalNabla.g:4159:1: ( ':' )
            {
            // InternalNabla.g:4159:1: ( ':' )
            // InternalNabla.g:4160:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getColonKeyword_1()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getColonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__1__Impl"


    // $ANTLR start "rule__Connectivity__Group__2"
    // InternalNabla.g:4169:1: rule__Connectivity__Group__2 : rule__Connectivity__Group__2__Impl rule__Connectivity__Group__3 ;
    public final void rule__Connectivity__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4173:1: ( rule__Connectivity__Group__2__Impl rule__Connectivity__Group__3 )
            // InternalNabla.g:4174:2: rule__Connectivity__Group__2__Impl rule__Connectivity__Group__3
            {
            pushFollow(FOLLOW_34);
            rule__Connectivity__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Connectivity__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__2"


    // $ANTLR start "rule__Connectivity__Group__2__Impl"
    // InternalNabla.g:4181:1: rule__Connectivity__Group__2__Impl : ( '(' ) ;
    public final void rule__Connectivity__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4185:1: ( ( '(' ) )
            // InternalNabla.g:4186:1: ( '(' )
            {
            // InternalNabla.g:4186:1: ( '(' )
            // InternalNabla.g:4187:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__2__Impl"


    // $ANTLR start "rule__Connectivity__Group__3"
    // InternalNabla.g:4196:1: rule__Connectivity__Group__3 : rule__Connectivity__Group__3__Impl rule__Connectivity__Group__4 ;
    public final void rule__Connectivity__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4200:1: ( rule__Connectivity__Group__3__Impl rule__Connectivity__Group__4 )
            // InternalNabla.g:4201:2: rule__Connectivity__Group__3__Impl rule__Connectivity__Group__4
            {
            pushFollow(FOLLOW_23);
            rule__Connectivity__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Connectivity__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__3"


    // $ANTLR start "rule__Connectivity__Group__3__Impl"
    // InternalNabla.g:4208:1: rule__Connectivity__Group__3__Impl : ( ( rule__Connectivity__Alternatives_3 ) ) ;
    public final void rule__Connectivity__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4212:1: ( ( ( rule__Connectivity__Alternatives_3 ) ) )
            // InternalNabla.g:4213:1: ( ( rule__Connectivity__Alternatives_3 ) )
            {
            // InternalNabla.g:4213:1: ( ( rule__Connectivity__Alternatives_3 ) )
            // InternalNabla.g:4214:2: ( rule__Connectivity__Alternatives_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getAlternatives_3()); 
            }
            // InternalNabla.g:4215:2: ( rule__Connectivity__Alternatives_3 )
            // InternalNabla.g:4215:3: rule__Connectivity__Alternatives_3
            {
            pushFollow(FOLLOW_2);
            rule__Connectivity__Alternatives_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getAlternatives_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__3__Impl"


    // $ANTLR start "rule__Connectivity__Group__4"
    // InternalNabla.g:4223:1: rule__Connectivity__Group__4 : rule__Connectivity__Group__4__Impl rule__Connectivity__Group__5 ;
    public final void rule__Connectivity__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4227:1: ( rule__Connectivity__Group__4__Impl rule__Connectivity__Group__5 )
            // InternalNabla.g:4228:2: rule__Connectivity__Group__4__Impl rule__Connectivity__Group__5
            {
            pushFollow(FOLLOW_35);
            rule__Connectivity__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Connectivity__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__4"


    // $ANTLR start "rule__Connectivity__Group__4__Impl"
    // InternalNabla.g:4235:1: rule__Connectivity__Group__4__Impl : ( ')' ) ;
    public final void rule__Connectivity__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4239:1: ( ( ')' ) )
            // InternalNabla.g:4240:1: ( ')' )
            {
            // InternalNabla.g:4240:1: ( ')' )
            // InternalNabla.g:4241:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__4__Impl"


    // $ANTLR start "rule__Connectivity__Group__5"
    // InternalNabla.g:4250:1: rule__Connectivity__Group__5 : rule__Connectivity__Group__5__Impl rule__Connectivity__Group__6 ;
    public final void rule__Connectivity__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4254:1: ( rule__Connectivity__Group__5__Impl rule__Connectivity__Group__6 )
            // InternalNabla.g:4255:2: rule__Connectivity__Group__5__Impl rule__Connectivity__Group__6
            {
            pushFollow(FOLLOW_36);
            rule__Connectivity__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Connectivity__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__5"


    // $ANTLR start "rule__Connectivity__Group__5__Impl"
    // InternalNabla.g:4262:1: rule__Connectivity__Group__5__Impl : ( '\\u2192' ) ;
    public final void rule__Connectivity__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4266:1: ( ( '\\u2192' ) )
            // InternalNabla.g:4267:1: ( '\\u2192' )
            {
            // InternalNabla.g:4267:1: ( '\\u2192' )
            // InternalNabla.g:4268:2: '\\u2192'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getRightwardsArrowKeyword_5()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getRightwardsArrowKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__5__Impl"


    // $ANTLR start "rule__Connectivity__Group__6"
    // InternalNabla.g:4277:1: rule__Connectivity__Group__6 : rule__Connectivity__Group__6__Impl rule__Connectivity__Group__7 ;
    public final void rule__Connectivity__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4281:1: ( rule__Connectivity__Group__6__Impl rule__Connectivity__Group__7 )
            // InternalNabla.g:4282:2: rule__Connectivity__Group__6__Impl rule__Connectivity__Group__7
            {
            pushFollow(FOLLOW_4);
            rule__Connectivity__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Connectivity__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__6"


    // $ANTLR start "rule__Connectivity__Group__6__Impl"
    // InternalNabla.g:4289:1: rule__Connectivity__Group__6__Impl : ( ( rule__Connectivity__ReturnTypeAssignment_6 ) ) ;
    public final void rule__Connectivity__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4293:1: ( ( ( rule__Connectivity__ReturnTypeAssignment_6 ) ) )
            // InternalNabla.g:4294:1: ( ( rule__Connectivity__ReturnTypeAssignment_6 ) )
            {
            // InternalNabla.g:4294:1: ( ( rule__Connectivity__ReturnTypeAssignment_6 ) )
            // InternalNabla.g:4295:2: ( rule__Connectivity__ReturnTypeAssignment_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getReturnTypeAssignment_6()); 
            }
            // InternalNabla.g:4296:2: ( rule__Connectivity__ReturnTypeAssignment_6 )
            // InternalNabla.g:4296:3: rule__Connectivity__ReturnTypeAssignment_6
            {
            pushFollow(FOLLOW_2);
            rule__Connectivity__ReturnTypeAssignment_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getReturnTypeAssignment_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__6__Impl"


    // $ANTLR start "rule__Connectivity__Group__7"
    // InternalNabla.g:4304:1: rule__Connectivity__Group__7 : rule__Connectivity__Group__7__Impl ;
    public final void rule__Connectivity__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4308:1: ( rule__Connectivity__Group__7__Impl )
            // InternalNabla.g:4309:2: rule__Connectivity__Group__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Connectivity__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__7"


    // $ANTLR start "rule__Connectivity__Group__7__Impl"
    // InternalNabla.g:4315:1: rule__Connectivity__Group__7__Impl : ( ';' ) ;
    public final void rule__Connectivity__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4319:1: ( ( ';' ) )
            // InternalNabla.g:4320:1: ( ';' )
            {
            // InternalNabla.g:4320:1: ( ';' )
            // InternalNabla.g:4321:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getSemicolonKeyword_7()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getSemicolonKeyword_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group__7__Impl"


    // $ANTLR start "rule__Connectivity__Group_3_0__0"
    // InternalNabla.g:4331:1: rule__Connectivity__Group_3_0__0 : rule__Connectivity__Group_3_0__0__Impl rule__Connectivity__Group_3_0__1 ;
    public final void rule__Connectivity__Group_3_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4335:1: ( rule__Connectivity__Group_3_0__0__Impl rule__Connectivity__Group_3_0__1 )
            // InternalNabla.g:4336:2: rule__Connectivity__Group_3_0__0__Impl rule__Connectivity__Group_3_0__1
            {
            pushFollow(FOLLOW_17);
            rule__Connectivity__Group_3_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Connectivity__Group_3_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group_3_0__0"


    // $ANTLR start "rule__Connectivity__Group_3_0__0__Impl"
    // InternalNabla.g:4343:1: rule__Connectivity__Group_3_0__0__Impl : ( ( rule__Connectivity__InTypesAssignment_3_0_0 ) ) ;
    public final void rule__Connectivity__Group_3_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4347:1: ( ( ( rule__Connectivity__InTypesAssignment_3_0_0 ) ) )
            // InternalNabla.g:4348:1: ( ( rule__Connectivity__InTypesAssignment_3_0_0 ) )
            {
            // InternalNabla.g:4348:1: ( ( rule__Connectivity__InTypesAssignment_3_0_0 ) )
            // InternalNabla.g:4349:2: ( rule__Connectivity__InTypesAssignment_3_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getInTypesAssignment_3_0_0()); 
            }
            // InternalNabla.g:4350:2: ( rule__Connectivity__InTypesAssignment_3_0_0 )
            // InternalNabla.g:4350:3: rule__Connectivity__InTypesAssignment_3_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Connectivity__InTypesAssignment_3_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getInTypesAssignment_3_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group_3_0__0__Impl"


    // $ANTLR start "rule__Connectivity__Group_3_0__1"
    // InternalNabla.g:4358:1: rule__Connectivity__Group_3_0__1 : rule__Connectivity__Group_3_0__1__Impl ;
    public final void rule__Connectivity__Group_3_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4362:1: ( rule__Connectivity__Group_3_0__1__Impl )
            // InternalNabla.g:4363:2: rule__Connectivity__Group_3_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Connectivity__Group_3_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group_3_0__1"


    // $ANTLR start "rule__Connectivity__Group_3_0__1__Impl"
    // InternalNabla.g:4369:1: rule__Connectivity__Group_3_0__1__Impl : ( ( rule__Connectivity__Group_3_0_1__0 )* ) ;
    public final void rule__Connectivity__Group_3_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4373:1: ( ( ( rule__Connectivity__Group_3_0_1__0 )* ) )
            // InternalNabla.g:4374:1: ( ( rule__Connectivity__Group_3_0_1__0 )* )
            {
            // InternalNabla.g:4374:1: ( ( rule__Connectivity__Group_3_0_1__0 )* )
            // InternalNabla.g:4375:2: ( rule__Connectivity__Group_3_0_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getGroup_3_0_1()); 
            }
            // InternalNabla.g:4376:2: ( rule__Connectivity__Group_3_0_1__0 )*
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( (LA36_0==41) ) {
                    alt36=1;
                }


                switch (alt36) {
            	case 1 :
            	    // InternalNabla.g:4376:3: rule__Connectivity__Group_3_0_1__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__Connectivity__Group_3_0_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop36;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getGroup_3_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group_3_0__1__Impl"


    // $ANTLR start "rule__Connectivity__Group_3_0_1__0"
    // InternalNabla.g:4385:1: rule__Connectivity__Group_3_0_1__0 : rule__Connectivity__Group_3_0_1__0__Impl rule__Connectivity__Group_3_0_1__1 ;
    public final void rule__Connectivity__Group_3_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4389:1: ( rule__Connectivity__Group_3_0_1__0__Impl rule__Connectivity__Group_3_0_1__1 )
            // InternalNabla.g:4390:2: rule__Connectivity__Group_3_0_1__0__Impl rule__Connectivity__Group_3_0_1__1
            {
            pushFollow(FOLLOW_37);
            rule__Connectivity__Group_3_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Connectivity__Group_3_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group_3_0_1__0"


    // $ANTLR start "rule__Connectivity__Group_3_0_1__0__Impl"
    // InternalNabla.g:4397:1: rule__Connectivity__Group_3_0_1__0__Impl : ( ',' ) ;
    public final void rule__Connectivity__Group_3_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4401:1: ( ( ',' ) )
            // InternalNabla.g:4402:1: ( ',' )
            {
            // InternalNabla.g:4402:1: ( ',' )
            // InternalNabla.g:4403:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getCommaKeyword_3_0_1_0()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getCommaKeyword_3_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group_3_0_1__0__Impl"


    // $ANTLR start "rule__Connectivity__Group_3_0_1__1"
    // InternalNabla.g:4412:1: rule__Connectivity__Group_3_0_1__1 : rule__Connectivity__Group_3_0_1__1__Impl ;
    public final void rule__Connectivity__Group_3_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4416:1: ( rule__Connectivity__Group_3_0_1__1__Impl )
            // InternalNabla.g:4417:2: rule__Connectivity__Group_3_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Connectivity__Group_3_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group_3_0_1__1"


    // $ANTLR start "rule__Connectivity__Group_3_0_1__1__Impl"
    // InternalNabla.g:4423:1: rule__Connectivity__Group_3_0_1__1__Impl : ( ( rule__Connectivity__InTypesAssignment_3_0_1_1 ) ) ;
    public final void rule__Connectivity__Group_3_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4427:1: ( ( ( rule__Connectivity__InTypesAssignment_3_0_1_1 ) ) )
            // InternalNabla.g:4428:1: ( ( rule__Connectivity__InTypesAssignment_3_0_1_1 ) )
            {
            // InternalNabla.g:4428:1: ( ( rule__Connectivity__InTypesAssignment_3_0_1_1 ) )
            // InternalNabla.g:4429:2: ( rule__Connectivity__InTypesAssignment_3_0_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getInTypesAssignment_3_0_1_1()); 
            }
            // InternalNabla.g:4430:2: ( rule__Connectivity__InTypesAssignment_3_0_1_1 )
            // InternalNabla.g:4430:3: rule__Connectivity__InTypesAssignment_3_0_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Connectivity__InTypesAssignment_3_0_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getInTypesAssignment_3_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__Group_3_0_1__1__Impl"


    // $ANTLR start "rule__ItemArgType__Group_0__0"
    // InternalNabla.g:4439:1: rule__ItemArgType__Group_0__0 : rule__ItemArgType__Group_0__0__Impl rule__ItemArgType__Group_0__1 ;
    public final void rule__ItemArgType__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4443:1: ( rule__ItemArgType__Group_0__0__Impl rule__ItemArgType__Group_0__1 )
            // InternalNabla.g:4444:2: rule__ItemArgType__Group_0__0__Impl rule__ItemArgType__Group_0__1
            {
            pushFollow(FOLLOW_37);
            rule__ItemArgType__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ItemArgType__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItemArgType__Group_0__0"


    // $ANTLR start "rule__ItemArgType__Group_0__0__Impl"
    // InternalNabla.g:4451:1: rule__ItemArgType__Group_0__0__Impl : ( ( rule__ItemArgType__MultipleAssignment_0_0 ) ) ;
    public final void rule__ItemArgType__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4455:1: ( ( ( rule__ItemArgType__MultipleAssignment_0_0 ) ) )
            // InternalNabla.g:4456:1: ( ( rule__ItemArgType__MultipleAssignment_0_0 ) )
            {
            // InternalNabla.g:4456:1: ( ( rule__ItemArgType__MultipleAssignment_0_0 ) )
            // InternalNabla.g:4457:2: ( rule__ItemArgType__MultipleAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItemArgTypeAccess().getMultipleAssignment_0_0()); 
            }
            // InternalNabla.g:4458:2: ( rule__ItemArgType__MultipleAssignment_0_0 )
            // InternalNabla.g:4458:3: rule__ItemArgType__MultipleAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__ItemArgType__MultipleAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItemArgTypeAccess().getMultipleAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItemArgType__Group_0__0__Impl"


    // $ANTLR start "rule__ItemArgType__Group_0__1"
    // InternalNabla.g:4466:1: rule__ItemArgType__Group_0__1 : rule__ItemArgType__Group_0__1__Impl rule__ItemArgType__Group_0__2 ;
    public final void rule__ItemArgType__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4470:1: ( rule__ItemArgType__Group_0__1__Impl rule__ItemArgType__Group_0__2 )
            // InternalNabla.g:4471:2: rule__ItemArgType__Group_0__1__Impl rule__ItemArgType__Group_0__2
            {
            pushFollow(FOLLOW_18);
            rule__ItemArgType__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ItemArgType__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItemArgType__Group_0__1"


    // $ANTLR start "rule__ItemArgType__Group_0__1__Impl"
    // InternalNabla.g:4478:1: rule__ItemArgType__Group_0__1__Impl : ( ( rule__ItemArgType__TypeAssignment_0_1 ) ) ;
    public final void rule__ItemArgType__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4482:1: ( ( ( rule__ItemArgType__TypeAssignment_0_1 ) ) )
            // InternalNabla.g:4483:1: ( ( rule__ItemArgType__TypeAssignment_0_1 ) )
            {
            // InternalNabla.g:4483:1: ( ( rule__ItemArgType__TypeAssignment_0_1 ) )
            // InternalNabla.g:4484:2: ( rule__ItemArgType__TypeAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItemArgTypeAccess().getTypeAssignment_0_1()); 
            }
            // InternalNabla.g:4485:2: ( rule__ItemArgType__TypeAssignment_0_1 )
            // InternalNabla.g:4485:3: rule__ItemArgType__TypeAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__ItemArgType__TypeAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItemArgTypeAccess().getTypeAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItemArgType__Group_0__1__Impl"


    // $ANTLR start "rule__ItemArgType__Group_0__2"
    // InternalNabla.g:4493:1: rule__ItemArgType__Group_0__2 : rule__ItemArgType__Group_0__2__Impl ;
    public final void rule__ItemArgType__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4497:1: ( rule__ItemArgType__Group_0__2__Impl )
            // InternalNabla.g:4498:2: rule__ItemArgType__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ItemArgType__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItemArgType__Group_0__2"


    // $ANTLR start "rule__ItemArgType__Group_0__2__Impl"
    // InternalNabla.g:4504:1: rule__ItemArgType__Group_0__2__Impl : ( '}' ) ;
    public final void rule__ItemArgType__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4508:1: ( ( '}' ) )
            // InternalNabla.g:4509:1: ( '}' )
            {
            // InternalNabla.g:4509:1: ( '}' )
            // InternalNabla.g:4510:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItemArgTypeAccess().getRightCurlyBracketKeyword_0_2()); 
            }
            match(input,37,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItemArgTypeAccess().getRightCurlyBracketKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItemArgType__Group_0__2__Impl"


    // $ANTLR start "rule__Function__Group__0"
    // InternalNabla.g:4520:1: rule__Function__Group__0 : rule__Function__Group__0__Impl rule__Function__Group__1 ;
    public final void rule__Function__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4524:1: ( rule__Function__Group__0__Impl rule__Function__Group__1 )
            // InternalNabla.g:4525:2: rule__Function__Group__0__Impl rule__Function__Group__1
            {
            pushFollow(FOLLOW_3);
            rule__Function__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__0"


    // $ANTLR start "rule__Function__Group__0__Impl"
    // InternalNabla.g:4532:1: rule__Function__Group__0__Impl : ( () ) ;
    public final void rule__Function__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4536:1: ( ( () ) )
            // InternalNabla.g:4537:1: ( () )
            {
            // InternalNabla.g:4537:1: ( () )
            // InternalNabla.g:4538:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getFunctionAction_0()); 
            }
            // InternalNabla.g:4539:2: ()
            // InternalNabla.g:4539:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getFunctionAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__0__Impl"


    // $ANTLR start "rule__Function__Group__1"
    // InternalNabla.g:4547:1: rule__Function__Group__1 : rule__Function__Group__1__Impl rule__Function__Group__2 ;
    public final void rule__Function__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4551:1: ( rule__Function__Group__1__Impl rule__Function__Group__2 )
            // InternalNabla.g:4552:2: rule__Function__Group__1__Impl rule__Function__Group__2
            {
            pushFollow(FOLLOW_14);
            rule__Function__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__1"


    // $ANTLR start "rule__Function__Group__1__Impl"
    // InternalNabla.g:4559:1: rule__Function__Group__1__Impl : ( ( rule__Function__NameAssignment_1 ) ) ;
    public final void rule__Function__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4563:1: ( ( ( rule__Function__NameAssignment_1 ) ) )
            // InternalNabla.g:4564:1: ( ( rule__Function__NameAssignment_1 ) )
            {
            // InternalNabla.g:4564:1: ( ( rule__Function__NameAssignment_1 ) )
            // InternalNabla.g:4565:2: ( rule__Function__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getNameAssignment_1()); 
            }
            // InternalNabla.g:4566:2: ( rule__Function__NameAssignment_1 )
            // InternalNabla.g:4566:3: rule__Function__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Function__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__1__Impl"


    // $ANTLR start "rule__Function__Group__2"
    // InternalNabla.g:4574:1: rule__Function__Group__2 : rule__Function__Group__2__Impl rule__Function__Group__3 ;
    public final void rule__Function__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4578:1: ( rule__Function__Group__2__Impl rule__Function__Group__3 )
            // InternalNabla.g:4579:2: rule__Function__Group__2__Impl rule__Function__Group__3
            {
            pushFollow(FOLLOW_22);
            rule__Function__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__2"


    // $ANTLR start "rule__Function__Group__2__Impl"
    // InternalNabla.g:4586:1: rule__Function__Group__2__Impl : ( ':' ) ;
    public final void rule__Function__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4590:1: ( ( ':' ) )
            // InternalNabla.g:4591:1: ( ':' )
            {
            // InternalNabla.g:4591:1: ( ':' )
            // InternalNabla.g:4592:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getColonKeyword_2()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getColonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__2__Impl"


    // $ANTLR start "rule__Function__Group__3"
    // InternalNabla.g:4601:1: rule__Function__Group__3 : rule__Function__Group__3__Impl rule__Function__Group__4 ;
    public final void rule__Function__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4605:1: ( rule__Function__Group__3__Impl rule__Function__Group__4 )
            // InternalNabla.g:4606:2: rule__Function__Group__3__Impl rule__Function__Group__4
            {
            pushFollow(FOLLOW_31);
            rule__Function__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__3"


    // $ANTLR start "rule__Function__Group__3__Impl"
    // InternalNabla.g:4613:1: rule__Function__Group__3__Impl : ( ( rule__Function__ArgGroupsAssignment_3 ) ) ;
    public final void rule__Function__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4617:1: ( ( ( rule__Function__ArgGroupsAssignment_3 ) ) )
            // InternalNabla.g:4618:1: ( ( rule__Function__ArgGroupsAssignment_3 ) )
            {
            // InternalNabla.g:4618:1: ( ( rule__Function__ArgGroupsAssignment_3 ) )
            // InternalNabla.g:4619:2: ( rule__Function__ArgGroupsAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getArgGroupsAssignment_3()); 
            }
            // InternalNabla.g:4620:2: ( rule__Function__ArgGroupsAssignment_3 )
            // InternalNabla.g:4620:3: rule__Function__ArgGroupsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Function__ArgGroupsAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getArgGroupsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__3__Impl"


    // $ANTLR start "rule__Function__Group__4"
    // InternalNabla.g:4628:1: rule__Function__Group__4 : rule__Function__Group__4__Impl rule__Function__Group__5 ;
    public final void rule__Function__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4632:1: ( rule__Function__Group__4__Impl rule__Function__Group__5 )
            // InternalNabla.g:4633:2: rule__Function__Group__4__Impl rule__Function__Group__5
            {
            pushFollow(FOLLOW_31);
            rule__Function__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__4"


    // $ANTLR start "rule__Function__Group__4__Impl"
    // InternalNabla.g:4640:1: rule__Function__Group__4__Impl : ( ( rule__Function__Group_4__0 )* ) ;
    public final void rule__Function__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4644:1: ( ( ( rule__Function__Group_4__0 )* ) )
            // InternalNabla.g:4645:1: ( ( rule__Function__Group_4__0 )* )
            {
            // InternalNabla.g:4645:1: ( ( rule__Function__Group_4__0 )* )
            // InternalNabla.g:4646:2: ( rule__Function__Group_4__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGroup_4()); 
            }
            // InternalNabla.g:4647:2: ( rule__Function__Group_4__0 )*
            loop37:
            do {
                int alt37=2;
                int LA37_0 = input.LA(1);

                if ( (LA37_0==41) ) {
                    alt37=1;
                }


                switch (alt37) {
            	case 1 :
            	    // InternalNabla.g:4647:3: rule__Function__Group_4__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__Function__Group_4__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop37;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__4__Impl"


    // $ANTLR start "rule__Function__Group__5"
    // InternalNabla.g:4655:1: rule__Function__Group__5 : rule__Function__Group__5__Impl ;
    public final void rule__Function__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4659:1: ( rule__Function__Group__5__Impl )
            // InternalNabla.g:4660:2: rule__Function__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Function__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__5"


    // $ANTLR start "rule__Function__Group__5__Impl"
    // InternalNabla.g:4666:1: rule__Function__Group__5__Impl : ( ';' ) ;
    public final void rule__Function__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4670:1: ( ( ';' ) )
            // InternalNabla.g:4671:1: ( ';' )
            {
            // InternalNabla.g:4671:1: ( ';' )
            // InternalNabla.g:4672:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getSemicolonKeyword_5()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getSemicolonKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__5__Impl"


    // $ANTLR start "rule__Function__Group_4__0"
    // InternalNabla.g:4682:1: rule__Function__Group_4__0 : rule__Function__Group_4__0__Impl rule__Function__Group_4__1 ;
    public final void rule__Function__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4686:1: ( rule__Function__Group_4__0__Impl rule__Function__Group_4__1 )
            // InternalNabla.g:4687:2: rule__Function__Group_4__0__Impl rule__Function__Group_4__1
            {
            pushFollow(FOLLOW_22);
            rule__Function__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_4__0"


    // $ANTLR start "rule__Function__Group_4__0__Impl"
    // InternalNabla.g:4694:1: rule__Function__Group_4__0__Impl : ( ',' ) ;
    public final void rule__Function__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4698:1: ( ( ',' ) )
            // InternalNabla.g:4699:1: ( ',' )
            {
            // InternalNabla.g:4699:1: ( ',' )
            // InternalNabla.g:4700:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getCommaKeyword_4_0()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getCommaKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_4__0__Impl"


    // $ANTLR start "rule__Function__Group_4__1"
    // InternalNabla.g:4709:1: rule__Function__Group_4__1 : rule__Function__Group_4__1__Impl ;
    public final void rule__Function__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4713:1: ( rule__Function__Group_4__1__Impl )
            // InternalNabla.g:4714:2: rule__Function__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Function__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_4__1"


    // $ANTLR start "rule__Function__Group_4__1__Impl"
    // InternalNabla.g:4720:1: rule__Function__Group_4__1__Impl : ( ( rule__Function__ArgGroupsAssignment_4_1 ) ) ;
    public final void rule__Function__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4724:1: ( ( ( rule__Function__ArgGroupsAssignment_4_1 ) ) )
            // InternalNabla.g:4725:1: ( ( rule__Function__ArgGroupsAssignment_4_1 ) )
            {
            // InternalNabla.g:4725:1: ( ( rule__Function__ArgGroupsAssignment_4_1 ) )
            // InternalNabla.g:4726:2: ( rule__Function__ArgGroupsAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getArgGroupsAssignment_4_1()); 
            }
            // InternalNabla.g:4727:2: ( rule__Function__ArgGroupsAssignment_4_1 )
            // InternalNabla.g:4727:3: rule__Function__ArgGroupsAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__Function__ArgGroupsAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getArgGroupsAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_4__1__Impl"


    // $ANTLR start "rule__FunctionArg__Group__0"
    // InternalNabla.g:4736:1: rule__FunctionArg__Group__0 : rule__FunctionArg__Group__0__Impl rule__FunctionArg__Group__1 ;
    public final void rule__FunctionArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4740:1: ( rule__FunctionArg__Group__0__Impl rule__FunctionArg__Group__1 )
            // InternalNabla.g:4741:2: rule__FunctionArg__Group__0__Impl rule__FunctionArg__Group__1
            {
            pushFollow(FOLLOW_38);
            rule__FunctionArg__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionArg__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group__0"


    // $ANTLR start "rule__FunctionArg__Group__0__Impl"
    // InternalNabla.g:4748:1: rule__FunctionArg__Group__0__Impl : ( '(' ) ;
    public final void rule__FunctionArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4752:1: ( ( '(' ) )
            // InternalNabla.g:4753:1: ( '(' )
            {
            // InternalNabla.g:4753:1: ( '(' )
            // InternalNabla.g:4754:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionArgAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionArgAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group__0__Impl"


    // $ANTLR start "rule__FunctionArg__Group__1"
    // InternalNabla.g:4763:1: rule__FunctionArg__Group__1 : rule__FunctionArg__Group__1__Impl rule__FunctionArg__Group__2 ;
    public final void rule__FunctionArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4767:1: ( rule__FunctionArg__Group__1__Impl rule__FunctionArg__Group__2 )
            // InternalNabla.g:4768:2: rule__FunctionArg__Group__1__Impl rule__FunctionArg__Group__2
            {
            pushFollow(FOLLOW_23);
            rule__FunctionArg__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionArg__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group__1"


    // $ANTLR start "rule__FunctionArg__Group__1__Impl"
    // InternalNabla.g:4775:1: rule__FunctionArg__Group__1__Impl : ( ( rule__FunctionArg__Alternatives_1 ) ) ;
    public final void rule__FunctionArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4779:1: ( ( ( rule__FunctionArg__Alternatives_1 ) ) )
            // InternalNabla.g:4780:1: ( ( rule__FunctionArg__Alternatives_1 ) )
            {
            // InternalNabla.g:4780:1: ( ( rule__FunctionArg__Alternatives_1 ) )
            // InternalNabla.g:4781:2: ( rule__FunctionArg__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionArgAccess().getAlternatives_1()); 
            }
            // InternalNabla.g:4782:2: ( rule__FunctionArg__Alternatives_1 )
            // InternalNabla.g:4782:3: rule__FunctionArg__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__FunctionArg__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionArgAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group__1__Impl"


    // $ANTLR start "rule__FunctionArg__Group__2"
    // InternalNabla.g:4790:1: rule__FunctionArg__Group__2 : rule__FunctionArg__Group__2__Impl rule__FunctionArg__Group__3 ;
    public final void rule__FunctionArg__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4794:1: ( rule__FunctionArg__Group__2__Impl rule__FunctionArg__Group__3 )
            // InternalNabla.g:4795:2: rule__FunctionArg__Group__2__Impl rule__FunctionArg__Group__3
            {
            pushFollow(FOLLOW_35);
            rule__FunctionArg__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionArg__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group__2"


    // $ANTLR start "rule__FunctionArg__Group__2__Impl"
    // InternalNabla.g:4802:1: rule__FunctionArg__Group__2__Impl : ( ')' ) ;
    public final void rule__FunctionArg__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4806:1: ( ( ')' ) )
            // InternalNabla.g:4807:1: ( ')' )
            {
            // InternalNabla.g:4807:1: ( ')' )
            // InternalNabla.g:4808:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionArgAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionArgAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group__2__Impl"


    // $ANTLR start "rule__FunctionArg__Group__3"
    // InternalNabla.g:4817:1: rule__FunctionArg__Group__3 : rule__FunctionArg__Group__3__Impl rule__FunctionArg__Group__4 ;
    public final void rule__FunctionArg__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4821:1: ( rule__FunctionArg__Group__3__Impl rule__FunctionArg__Group__4 )
            // InternalNabla.g:4822:2: rule__FunctionArg__Group__3__Impl rule__FunctionArg__Group__4
            {
            pushFollow(FOLLOW_30);
            rule__FunctionArg__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionArg__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group__3"


    // $ANTLR start "rule__FunctionArg__Group__3__Impl"
    // InternalNabla.g:4829:1: rule__FunctionArg__Group__3__Impl : ( '\\u2192' ) ;
    public final void rule__FunctionArg__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4833:1: ( ( '\\u2192' ) )
            // InternalNabla.g:4834:1: ( '\\u2192' )
            {
            // InternalNabla.g:4834:1: ( '\\u2192' )
            // InternalNabla.g:4835:2: '\\u2192'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionArgAccess().getRightwardsArrowKeyword_3()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionArgAccess().getRightwardsArrowKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group__3__Impl"


    // $ANTLR start "rule__FunctionArg__Group__4"
    // InternalNabla.g:4844:1: rule__FunctionArg__Group__4 : rule__FunctionArg__Group__4__Impl ;
    public final void rule__FunctionArg__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4848:1: ( rule__FunctionArg__Group__4__Impl )
            // InternalNabla.g:4849:2: rule__FunctionArg__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionArg__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group__4"


    // $ANTLR start "rule__FunctionArg__Group__4__Impl"
    // InternalNabla.g:4855:1: rule__FunctionArg__Group__4__Impl : ( ( rule__FunctionArg__ReturnTypeAssignment_4 ) ) ;
    public final void rule__FunctionArg__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4859:1: ( ( ( rule__FunctionArg__ReturnTypeAssignment_4 ) ) )
            // InternalNabla.g:4860:1: ( ( rule__FunctionArg__ReturnTypeAssignment_4 ) )
            {
            // InternalNabla.g:4860:1: ( ( rule__FunctionArg__ReturnTypeAssignment_4 ) )
            // InternalNabla.g:4861:2: ( rule__FunctionArg__ReturnTypeAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionArgAccess().getReturnTypeAssignment_4()); 
            }
            // InternalNabla.g:4862:2: ( rule__FunctionArg__ReturnTypeAssignment_4 )
            // InternalNabla.g:4862:3: rule__FunctionArg__ReturnTypeAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__FunctionArg__ReturnTypeAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionArgAccess().getReturnTypeAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group__4__Impl"


    // $ANTLR start "rule__FunctionArg__Group_1_0__0"
    // InternalNabla.g:4871:1: rule__FunctionArg__Group_1_0__0 : rule__FunctionArg__Group_1_0__0__Impl rule__FunctionArg__Group_1_0__1 ;
    public final void rule__FunctionArg__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4875:1: ( rule__FunctionArg__Group_1_0__0__Impl rule__FunctionArg__Group_1_0__1 )
            // InternalNabla.g:4876:2: rule__FunctionArg__Group_1_0__0__Impl rule__FunctionArg__Group_1_0__1
            {
            pushFollow(FOLLOW_17);
            rule__FunctionArg__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionArg__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group_1_0__0"


    // $ANTLR start "rule__FunctionArg__Group_1_0__0__Impl"
    // InternalNabla.g:4883:1: rule__FunctionArg__Group_1_0__0__Impl : ( ( rule__FunctionArg__InTypesAssignment_1_0_0 ) ) ;
    public final void rule__FunctionArg__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4887:1: ( ( ( rule__FunctionArg__InTypesAssignment_1_0_0 ) ) )
            // InternalNabla.g:4888:1: ( ( rule__FunctionArg__InTypesAssignment_1_0_0 ) )
            {
            // InternalNabla.g:4888:1: ( ( rule__FunctionArg__InTypesAssignment_1_0_0 ) )
            // InternalNabla.g:4889:2: ( rule__FunctionArg__InTypesAssignment_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionArgAccess().getInTypesAssignment_1_0_0()); 
            }
            // InternalNabla.g:4890:2: ( rule__FunctionArg__InTypesAssignment_1_0_0 )
            // InternalNabla.g:4890:3: rule__FunctionArg__InTypesAssignment_1_0_0
            {
            pushFollow(FOLLOW_2);
            rule__FunctionArg__InTypesAssignment_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionArgAccess().getInTypesAssignment_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group_1_0__0__Impl"


    // $ANTLR start "rule__FunctionArg__Group_1_0__1"
    // InternalNabla.g:4898:1: rule__FunctionArg__Group_1_0__1 : rule__FunctionArg__Group_1_0__1__Impl ;
    public final void rule__FunctionArg__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4902:1: ( rule__FunctionArg__Group_1_0__1__Impl )
            // InternalNabla.g:4903:2: rule__FunctionArg__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionArg__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group_1_0__1"


    // $ANTLR start "rule__FunctionArg__Group_1_0__1__Impl"
    // InternalNabla.g:4909:1: rule__FunctionArg__Group_1_0__1__Impl : ( ( rule__FunctionArg__Group_1_0_1__0 )* ) ;
    public final void rule__FunctionArg__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4913:1: ( ( ( rule__FunctionArg__Group_1_0_1__0 )* ) )
            // InternalNabla.g:4914:1: ( ( rule__FunctionArg__Group_1_0_1__0 )* )
            {
            // InternalNabla.g:4914:1: ( ( rule__FunctionArg__Group_1_0_1__0 )* )
            // InternalNabla.g:4915:2: ( rule__FunctionArg__Group_1_0_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionArgAccess().getGroup_1_0_1()); 
            }
            // InternalNabla.g:4916:2: ( rule__FunctionArg__Group_1_0_1__0 )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==41) ) {
                    alt38=1;
                }


                switch (alt38) {
            	case 1 :
            	    // InternalNabla.g:4916:3: rule__FunctionArg__Group_1_0_1__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__FunctionArg__Group_1_0_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionArgAccess().getGroup_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group_1_0__1__Impl"


    // $ANTLR start "rule__FunctionArg__Group_1_0_1__0"
    // InternalNabla.g:4925:1: rule__FunctionArg__Group_1_0_1__0 : rule__FunctionArg__Group_1_0_1__0__Impl rule__FunctionArg__Group_1_0_1__1 ;
    public final void rule__FunctionArg__Group_1_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4929:1: ( rule__FunctionArg__Group_1_0_1__0__Impl rule__FunctionArg__Group_1_0_1__1 )
            // InternalNabla.g:4930:2: rule__FunctionArg__Group_1_0_1__0__Impl rule__FunctionArg__Group_1_0_1__1
            {
            pushFollow(FOLLOW_30);
            rule__FunctionArg__Group_1_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionArg__Group_1_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group_1_0_1__0"


    // $ANTLR start "rule__FunctionArg__Group_1_0_1__0__Impl"
    // InternalNabla.g:4937:1: rule__FunctionArg__Group_1_0_1__0__Impl : ( ',' ) ;
    public final void rule__FunctionArg__Group_1_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4941:1: ( ( ',' ) )
            // InternalNabla.g:4942:1: ( ',' )
            {
            // InternalNabla.g:4942:1: ( ',' )
            // InternalNabla.g:4943:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionArgAccess().getCommaKeyword_1_0_1_0()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionArgAccess().getCommaKeyword_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group_1_0_1__0__Impl"


    // $ANTLR start "rule__FunctionArg__Group_1_0_1__1"
    // InternalNabla.g:4952:1: rule__FunctionArg__Group_1_0_1__1 : rule__FunctionArg__Group_1_0_1__1__Impl ;
    public final void rule__FunctionArg__Group_1_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4956:1: ( rule__FunctionArg__Group_1_0_1__1__Impl )
            // InternalNabla.g:4957:2: rule__FunctionArg__Group_1_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionArg__Group_1_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group_1_0_1__1"


    // $ANTLR start "rule__FunctionArg__Group_1_0_1__1__Impl"
    // InternalNabla.g:4963:1: rule__FunctionArg__Group_1_0_1__1__Impl : ( ( rule__FunctionArg__InTypesAssignment_1_0_1_1 ) ) ;
    public final void rule__FunctionArg__Group_1_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4967:1: ( ( ( rule__FunctionArg__InTypesAssignment_1_0_1_1 ) ) )
            // InternalNabla.g:4968:1: ( ( rule__FunctionArg__InTypesAssignment_1_0_1_1 ) )
            {
            // InternalNabla.g:4968:1: ( ( rule__FunctionArg__InTypesAssignment_1_0_1_1 ) )
            // InternalNabla.g:4969:2: ( rule__FunctionArg__InTypesAssignment_1_0_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionArgAccess().getInTypesAssignment_1_0_1_1()); 
            }
            // InternalNabla.g:4970:2: ( rule__FunctionArg__InTypesAssignment_1_0_1_1 )
            // InternalNabla.g:4970:3: rule__FunctionArg__InTypesAssignment_1_0_1_1
            {
            pushFollow(FOLLOW_2);
            rule__FunctionArg__InTypesAssignment_1_0_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionArgAccess().getInTypesAssignment_1_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__Group_1_0_1__1__Impl"


    // $ANTLR start "rule__Reduction__Group__0"
    // InternalNabla.g:4979:1: rule__Reduction__Group__0 : rule__Reduction__Group__0__Impl rule__Reduction__Group__1 ;
    public final void rule__Reduction__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4983:1: ( rule__Reduction__Group__0__Impl rule__Reduction__Group__1 )
            // InternalNabla.g:4984:2: rule__Reduction__Group__0__Impl rule__Reduction__Group__1
            {
            pushFollow(FOLLOW_3);
            rule__Reduction__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Reduction__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group__0"


    // $ANTLR start "rule__Reduction__Group__0__Impl"
    // InternalNabla.g:4991:1: rule__Reduction__Group__0__Impl : ( () ) ;
    public final void rule__Reduction__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:4995:1: ( ( () ) )
            // InternalNabla.g:4996:1: ( () )
            {
            // InternalNabla.g:4996:1: ( () )
            // InternalNabla.g:4997:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionAccess().getReductionAction_0()); 
            }
            // InternalNabla.g:4998:2: ()
            // InternalNabla.g:4998:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionAccess().getReductionAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group__0__Impl"


    // $ANTLR start "rule__Reduction__Group__1"
    // InternalNabla.g:5006:1: rule__Reduction__Group__1 : rule__Reduction__Group__1__Impl rule__Reduction__Group__2 ;
    public final void rule__Reduction__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5010:1: ( rule__Reduction__Group__1__Impl rule__Reduction__Group__2 )
            // InternalNabla.g:5011:2: rule__Reduction__Group__1__Impl rule__Reduction__Group__2
            {
            pushFollow(FOLLOW_14);
            rule__Reduction__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Reduction__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group__1"


    // $ANTLR start "rule__Reduction__Group__1__Impl"
    // InternalNabla.g:5018:1: rule__Reduction__Group__1__Impl : ( ( rule__Reduction__NameAssignment_1 ) ) ;
    public final void rule__Reduction__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5022:1: ( ( ( rule__Reduction__NameAssignment_1 ) ) )
            // InternalNabla.g:5023:1: ( ( rule__Reduction__NameAssignment_1 ) )
            {
            // InternalNabla.g:5023:1: ( ( rule__Reduction__NameAssignment_1 ) )
            // InternalNabla.g:5024:2: ( rule__Reduction__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionAccess().getNameAssignment_1()); 
            }
            // InternalNabla.g:5025:2: ( rule__Reduction__NameAssignment_1 )
            // InternalNabla.g:5025:3: rule__Reduction__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Reduction__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group__1__Impl"


    // $ANTLR start "rule__Reduction__Group__2"
    // InternalNabla.g:5033:1: rule__Reduction__Group__2 : rule__Reduction__Group__2__Impl rule__Reduction__Group__3 ;
    public final void rule__Reduction__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5037:1: ( rule__Reduction__Group__2__Impl rule__Reduction__Group__3 )
            // InternalNabla.g:5038:2: rule__Reduction__Group__2__Impl rule__Reduction__Group__3
            {
            pushFollow(FOLLOW_22);
            rule__Reduction__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Reduction__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group__2"


    // $ANTLR start "rule__Reduction__Group__2__Impl"
    // InternalNabla.g:5045:1: rule__Reduction__Group__2__Impl : ( ':' ) ;
    public final void rule__Reduction__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5049:1: ( ( ':' ) )
            // InternalNabla.g:5050:1: ( ':' )
            {
            // InternalNabla.g:5050:1: ( ':' )
            // InternalNabla.g:5051:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionAccess().getColonKeyword_2()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionAccess().getColonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group__2__Impl"


    // $ANTLR start "rule__Reduction__Group__3"
    // InternalNabla.g:5060:1: rule__Reduction__Group__3 : rule__Reduction__Group__3__Impl rule__Reduction__Group__4 ;
    public final void rule__Reduction__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5064:1: ( rule__Reduction__Group__3__Impl rule__Reduction__Group__4 )
            // InternalNabla.g:5065:2: rule__Reduction__Group__3__Impl rule__Reduction__Group__4
            {
            pushFollow(FOLLOW_31);
            rule__Reduction__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Reduction__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group__3"


    // $ANTLR start "rule__Reduction__Group__3__Impl"
    // InternalNabla.g:5072:1: rule__Reduction__Group__3__Impl : ( ( rule__Reduction__ArgGroupsAssignment_3 ) ) ;
    public final void rule__Reduction__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5076:1: ( ( ( rule__Reduction__ArgGroupsAssignment_3 ) ) )
            // InternalNabla.g:5077:1: ( ( rule__Reduction__ArgGroupsAssignment_3 ) )
            {
            // InternalNabla.g:5077:1: ( ( rule__Reduction__ArgGroupsAssignment_3 ) )
            // InternalNabla.g:5078:2: ( rule__Reduction__ArgGroupsAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionAccess().getArgGroupsAssignment_3()); 
            }
            // InternalNabla.g:5079:2: ( rule__Reduction__ArgGroupsAssignment_3 )
            // InternalNabla.g:5079:3: rule__Reduction__ArgGroupsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Reduction__ArgGroupsAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionAccess().getArgGroupsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group__3__Impl"


    // $ANTLR start "rule__Reduction__Group__4"
    // InternalNabla.g:5087:1: rule__Reduction__Group__4 : rule__Reduction__Group__4__Impl rule__Reduction__Group__5 ;
    public final void rule__Reduction__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5091:1: ( rule__Reduction__Group__4__Impl rule__Reduction__Group__5 )
            // InternalNabla.g:5092:2: rule__Reduction__Group__4__Impl rule__Reduction__Group__5
            {
            pushFollow(FOLLOW_31);
            rule__Reduction__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Reduction__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group__4"


    // $ANTLR start "rule__Reduction__Group__4__Impl"
    // InternalNabla.g:5099:1: rule__Reduction__Group__4__Impl : ( ( rule__Reduction__Group_4__0 )* ) ;
    public final void rule__Reduction__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5103:1: ( ( ( rule__Reduction__Group_4__0 )* ) )
            // InternalNabla.g:5104:1: ( ( rule__Reduction__Group_4__0 )* )
            {
            // InternalNabla.g:5104:1: ( ( rule__Reduction__Group_4__0 )* )
            // InternalNabla.g:5105:2: ( rule__Reduction__Group_4__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionAccess().getGroup_4()); 
            }
            // InternalNabla.g:5106:2: ( rule__Reduction__Group_4__0 )*
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( (LA39_0==41) ) {
                    alt39=1;
                }


                switch (alt39) {
            	case 1 :
            	    // InternalNabla.g:5106:3: rule__Reduction__Group_4__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__Reduction__Group_4__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group__4__Impl"


    // $ANTLR start "rule__Reduction__Group__5"
    // InternalNabla.g:5114:1: rule__Reduction__Group__5 : rule__Reduction__Group__5__Impl ;
    public final void rule__Reduction__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5118:1: ( rule__Reduction__Group__5__Impl )
            // InternalNabla.g:5119:2: rule__Reduction__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Reduction__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group__5"


    // $ANTLR start "rule__Reduction__Group__5__Impl"
    // InternalNabla.g:5125:1: rule__Reduction__Group__5__Impl : ( ';' ) ;
    public final void rule__Reduction__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5129:1: ( ( ';' ) )
            // InternalNabla.g:5130:1: ( ';' )
            {
            // InternalNabla.g:5130:1: ( ';' )
            // InternalNabla.g:5131:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionAccess().getSemicolonKeyword_5()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionAccess().getSemicolonKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group__5__Impl"


    // $ANTLR start "rule__Reduction__Group_4__0"
    // InternalNabla.g:5141:1: rule__Reduction__Group_4__0 : rule__Reduction__Group_4__0__Impl rule__Reduction__Group_4__1 ;
    public final void rule__Reduction__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5145:1: ( rule__Reduction__Group_4__0__Impl rule__Reduction__Group_4__1 )
            // InternalNabla.g:5146:2: rule__Reduction__Group_4__0__Impl rule__Reduction__Group_4__1
            {
            pushFollow(FOLLOW_22);
            rule__Reduction__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Reduction__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group_4__0"


    // $ANTLR start "rule__Reduction__Group_4__0__Impl"
    // InternalNabla.g:5153:1: rule__Reduction__Group_4__0__Impl : ( ',' ) ;
    public final void rule__Reduction__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5157:1: ( ( ',' ) )
            // InternalNabla.g:5158:1: ( ',' )
            {
            // InternalNabla.g:5158:1: ( ',' )
            // InternalNabla.g:5159:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionAccess().getCommaKeyword_4_0()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionAccess().getCommaKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group_4__0__Impl"


    // $ANTLR start "rule__Reduction__Group_4__1"
    // InternalNabla.g:5168:1: rule__Reduction__Group_4__1 : rule__Reduction__Group_4__1__Impl ;
    public final void rule__Reduction__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5172:1: ( rule__Reduction__Group_4__1__Impl )
            // InternalNabla.g:5173:2: rule__Reduction__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Reduction__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group_4__1"


    // $ANTLR start "rule__Reduction__Group_4__1__Impl"
    // InternalNabla.g:5179:1: rule__Reduction__Group_4__1__Impl : ( ( rule__Reduction__ArgGroupsAssignment_4_1 ) ) ;
    public final void rule__Reduction__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5183:1: ( ( ( rule__Reduction__ArgGroupsAssignment_4_1 ) ) )
            // InternalNabla.g:5184:1: ( ( rule__Reduction__ArgGroupsAssignment_4_1 ) )
            {
            // InternalNabla.g:5184:1: ( ( rule__Reduction__ArgGroupsAssignment_4_1 ) )
            // InternalNabla.g:5185:2: ( rule__Reduction__ArgGroupsAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionAccess().getArgGroupsAssignment_4_1()); 
            }
            // InternalNabla.g:5186:2: ( rule__Reduction__ArgGroupsAssignment_4_1 )
            // InternalNabla.g:5186:3: rule__Reduction__ArgGroupsAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__Reduction__ArgGroupsAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionAccess().getArgGroupsAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__Group_4__1__Impl"


    // $ANTLR start "rule__ReductionArg__Group__0"
    // InternalNabla.g:5195:1: rule__ReductionArg__Group__0 : rule__ReductionArg__Group__0__Impl rule__ReductionArg__Group__1 ;
    public final void rule__ReductionArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5199:1: ( rule__ReductionArg__Group__0__Impl rule__ReductionArg__Group__1 )
            // InternalNabla.g:5200:2: rule__ReductionArg__Group__0__Impl rule__ReductionArg__Group__1
            {
            pushFollow(FOLLOW_21);
            rule__ReductionArg__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ReductionArg__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__Group__0"


    // $ANTLR start "rule__ReductionArg__Group__0__Impl"
    // InternalNabla.g:5207:1: rule__ReductionArg__Group__0__Impl : ( '(' ) ;
    public final void rule__ReductionArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5211:1: ( ( '(' ) )
            // InternalNabla.g:5212:1: ( '(' )
            {
            // InternalNabla.g:5212:1: ( '(' )
            // InternalNabla.g:5213:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionArgAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionArgAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__Group__0__Impl"


    // $ANTLR start "rule__ReductionArg__Group__1"
    // InternalNabla.g:5222:1: rule__ReductionArg__Group__1 : rule__ReductionArg__Group__1__Impl rule__ReductionArg__Group__2 ;
    public final void rule__ReductionArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5226:1: ( rule__ReductionArg__Group__1__Impl rule__ReductionArg__Group__2 )
            // InternalNabla.g:5227:2: rule__ReductionArg__Group__1__Impl rule__ReductionArg__Group__2
            {
            pushFollow(FOLLOW_17);
            rule__ReductionArg__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ReductionArg__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__Group__1"


    // $ANTLR start "rule__ReductionArg__Group__1__Impl"
    // InternalNabla.g:5234:1: rule__ReductionArg__Group__1__Impl : ( ( rule__ReductionArg__SeedAssignment_1 ) ) ;
    public final void rule__ReductionArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5238:1: ( ( ( rule__ReductionArg__SeedAssignment_1 ) ) )
            // InternalNabla.g:5239:1: ( ( rule__ReductionArg__SeedAssignment_1 ) )
            {
            // InternalNabla.g:5239:1: ( ( rule__ReductionArg__SeedAssignment_1 ) )
            // InternalNabla.g:5240:2: ( rule__ReductionArg__SeedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionArgAccess().getSeedAssignment_1()); 
            }
            // InternalNabla.g:5241:2: ( rule__ReductionArg__SeedAssignment_1 )
            // InternalNabla.g:5241:3: rule__ReductionArg__SeedAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ReductionArg__SeedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionArgAccess().getSeedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__Group__1__Impl"


    // $ANTLR start "rule__ReductionArg__Group__2"
    // InternalNabla.g:5249:1: rule__ReductionArg__Group__2 : rule__ReductionArg__Group__2__Impl rule__ReductionArg__Group__3 ;
    public final void rule__ReductionArg__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5253:1: ( rule__ReductionArg__Group__2__Impl rule__ReductionArg__Group__3 )
            // InternalNabla.g:5254:2: rule__ReductionArg__Group__2__Impl rule__ReductionArg__Group__3
            {
            pushFollow(FOLLOW_30);
            rule__ReductionArg__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ReductionArg__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__Group__2"


    // $ANTLR start "rule__ReductionArg__Group__2__Impl"
    // InternalNabla.g:5261:1: rule__ReductionArg__Group__2__Impl : ( ',' ) ;
    public final void rule__ReductionArg__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5265:1: ( ( ',' ) )
            // InternalNabla.g:5266:1: ( ',' )
            {
            // InternalNabla.g:5266:1: ( ',' )
            // InternalNabla.g:5267:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionArgAccess().getCommaKeyword_2()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionArgAccess().getCommaKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__Group__2__Impl"


    // $ANTLR start "rule__ReductionArg__Group__3"
    // InternalNabla.g:5276:1: rule__ReductionArg__Group__3 : rule__ReductionArg__Group__3__Impl rule__ReductionArg__Group__4 ;
    public final void rule__ReductionArg__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5280:1: ( rule__ReductionArg__Group__3__Impl rule__ReductionArg__Group__4 )
            // InternalNabla.g:5281:2: rule__ReductionArg__Group__3__Impl rule__ReductionArg__Group__4
            {
            pushFollow(FOLLOW_23);
            rule__ReductionArg__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ReductionArg__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__Group__3"


    // $ANTLR start "rule__ReductionArg__Group__3__Impl"
    // InternalNabla.g:5288:1: rule__ReductionArg__Group__3__Impl : ( ( rule__ReductionArg__CollectionTypeAssignment_3 ) ) ;
    public final void rule__ReductionArg__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5292:1: ( ( ( rule__ReductionArg__CollectionTypeAssignment_3 ) ) )
            // InternalNabla.g:5293:1: ( ( rule__ReductionArg__CollectionTypeAssignment_3 ) )
            {
            // InternalNabla.g:5293:1: ( ( rule__ReductionArg__CollectionTypeAssignment_3 ) )
            // InternalNabla.g:5294:2: ( rule__ReductionArg__CollectionTypeAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionArgAccess().getCollectionTypeAssignment_3()); 
            }
            // InternalNabla.g:5295:2: ( rule__ReductionArg__CollectionTypeAssignment_3 )
            // InternalNabla.g:5295:3: rule__ReductionArg__CollectionTypeAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__ReductionArg__CollectionTypeAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionArgAccess().getCollectionTypeAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__Group__3__Impl"


    // $ANTLR start "rule__ReductionArg__Group__4"
    // InternalNabla.g:5303:1: rule__ReductionArg__Group__4 : rule__ReductionArg__Group__4__Impl rule__ReductionArg__Group__5 ;
    public final void rule__ReductionArg__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5307:1: ( rule__ReductionArg__Group__4__Impl rule__ReductionArg__Group__5 )
            // InternalNabla.g:5308:2: rule__ReductionArg__Group__4__Impl rule__ReductionArg__Group__5
            {
            pushFollow(FOLLOW_35);
            rule__ReductionArg__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ReductionArg__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__Group__4"


    // $ANTLR start "rule__ReductionArg__Group__4__Impl"
    // InternalNabla.g:5315:1: rule__ReductionArg__Group__4__Impl : ( ')' ) ;
    public final void rule__ReductionArg__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5319:1: ( ( ')' ) )
            // InternalNabla.g:5320:1: ( ')' )
            {
            // InternalNabla.g:5320:1: ( ')' )
            // InternalNabla.g:5321:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionArgAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionArgAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__Group__4__Impl"


    // $ANTLR start "rule__ReductionArg__Group__5"
    // InternalNabla.g:5330:1: rule__ReductionArg__Group__5 : rule__ReductionArg__Group__5__Impl rule__ReductionArg__Group__6 ;
    public final void rule__ReductionArg__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5334:1: ( rule__ReductionArg__Group__5__Impl rule__ReductionArg__Group__6 )
            // InternalNabla.g:5335:2: rule__ReductionArg__Group__5__Impl rule__ReductionArg__Group__6
            {
            pushFollow(FOLLOW_30);
            rule__ReductionArg__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ReductionArg__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__Group__5"


    // $ANTLR start "rule__ReductionArg__Group__5__Impl"
    // InternalNabla.g:5342:1: rule__ReductionArg__Group__5__Impl : ( '\\u2192' ) ;
    public final void rule__ReductionArg__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5346:1: ( ( '\\u2192' ) )
            // InternalNabla.g:5347:1: ( '\\u2192' )
            {
            // InternalNabla.g:5347:1: ( '\\u2192' )
            // InternalNabla.g:5348:2: '\\u2192'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionArgAccess().getRightwardsArrowKeyword_5()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionArgAccess().getRightwardsArrowKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__Group__5__Impl"


    // $ANTLR start "rule__ReductionArg__Group__6"
    // InternalNabla.g:5357:1: rule__ReductionArg__Group__6 : rule__ReductionArg__Group__6__Impl ;
    public final void rule__ReductionArg__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5361:1: ( rule__ReductionArg__Group__6__Impl )
            // InternalNabla.g:5362:2: rule__ReductionArg__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ReductionArg__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__Group__6"


    // $ANTLR start "rule__ReductionArg__Group__6__Impl"
    // InternalNabla.g:5368:1: rule__ReductionArg__Group__6__Impl : ( ( rule__ReductionArg__ReturnTypeAssignment_6 ) ) ;
    public final void rule__ReductionArg__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5372:1: ( ( ( rule__ReductionArg__ReturnTypeAssignment_6 ) ) )
            // InternalNabla.g:5373:1: ( ( rule__ReductionArg__ReturnTypeAssignment_6 ) )
            {
            // InternalNabla.g:5373:1: ( ( rule__ReductionArg__ReturnTypeAssignment_6 ) )
            // InternalNabla.g:5374:2: ( rule__ReductionArg__ReturnTypeAssignment_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionArgAccess().getReturnTypeAssignment_6()); 
            }
            // InternalNabla.g:5375:2: ( rule__ReductionArg__ReturnTypeAssignment_6 )
            // InternalNabla.g:5375:3: rule__ReductionArg__ReturnTypeAssignment_6
            {
            pushFollow(FOLLOW_2);
            rule__ReductionArg__ReturnTypeAssignment_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionArgAccess().getReturnTypeAssignment_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__Group__6__Impl"


    // $ANTLR start "rule__Or__Group__0"
    // InternalNabla.g:5384:1: rule__Or__Group__0 : rule__Or__Group__0__Impl rule__Or__Group__1 ;
    public final void rule__Or__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5388:1: ( rule__Or__Group__0__Impl rule__Or__Group__1 )
            // InternalNabla.g:5389:2: rule__Or__Group__0__Impl rule__Or__Group__1
            {
            pushFollow(FOLLOW_39);
            rule__Or__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Or__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__0"


    // $ANTLR start "rule__Or__Group__0__Impl"
    // InternalNabla.g:5396:1: rule__Or__Group__0__Impl : ( ruleAnd ) ;
    public final void rule__Or__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5400:1: ( ( ruleAnd ) )
            // InternalNabla.g:5401:1: ( ruleAnd )
            {
            // InternalNabla.g:5401:1: ( ruleAnd )
            // InternalNabla.g:5402:2: ruleAnd
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getAndParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnd();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getAndParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__0__Impl"


    // $ANTLR start "rule__Or__Group__1"
    // InternalNabla.g:5411:1: rule__Or__Group__1 : rule__Or__Group__1__Impl ;
    public final void rule__Or__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5415:1: ( rule__Or__Group__1__Impl )
            // InternalNabla.g:5416:2: rule__Or__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Or__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__1"


    // $ANTLR start "rule__Or__Group__1__Impl"
    // InternalNabla.g:5422:1: rule__Or__Group__1__Impl : ( ( rule__Or__Group_1__0 )* ) ;
    public final void rule__Or__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5426:1: ( ( ( rule__Or__Group_1__0 )* ) )
            // InternalNabla.g:5427:1: ( ( rule__Or__Group_1__0 )* )
            {
            // InternalNabla.g:5427:1: ( ( rule__Or__Group_1__0 )* )
            // InternalNabla.g:5428:2: ( rule__Or__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getGroup_1()); 
            }
            // InternalNabla.g:5429:2: ( rule__Or__Group_1__0 )*
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0==61) ) {
                    alt40=1;
                }


                switch (alt40) {
            	case 1 :
            	    // InternalNabla.g:5429:3: rule__Or__Group_1__0
            	    {
            	    pushFollow(FOLLOW_40);
            	    rule__Or__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__1__Impl"


    // $ANTLR start "rule__Or__Group_1__0"
    // InternalNabla.g:5438:1: rule__Or__Group_1__0 : rule__Or__Group_1__0__Impl rule__Or__Group_1__1 ;
    public final void rule__Or__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5442:1: ( rule__Or__Group_1__0__Impl rule__Or__Group_1__1 )
            // InternalNabla.g:5443:2: rule__Or__Group_1__0__Impl rule__Or__Group_1__1
            {
            pushFollow(FOLLOW_39);
            rule__Or__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Or__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__0"


    // $ANTLR start "rule__Or__Group_1__0__Impl"
    // InternalNabla.g:5450:1: rule__Or__Group_1__0__Impl : ( () ) ;
    public final void rule__Or__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5454:1: ( ( () ) )
            // InternalNabla.g:5455:1: ( () )
            {
            // InternalNabla.g:5455:1: ( () )
            // InternalNabla.g:5456:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getOrLeftAction_1_0()); 
            }
            // InternalNabla.g:5457:2: ()
            // InternalNabla.g:5457:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getOrLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__0__Impl"


    // $ANTLR start "rule__Or__Group_1__1"
    // InternalNabla.g:5465:1: rule__Or__Group_1__1 : rule__Or__Group_1__1__Impl rule__Or__Group_1__2 ;
    public final void rule__Or__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5469:1: ( rule__Or__Group_1__1__Impl rule__Or__Group_1__2 )
            // InternalNabla.g:5470:2: rule__Or__Group_1__1__Impl rule__Or__Group_1__2
            {
            pushFollow(FOLLOW_21);
            rule__Or__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Or__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__1"


    // $ANTLR start "rule__Or__Group_1__1__Impl"
    // InternalNabla.g:5477:1: rule__Or__Group_1__1__Impl : ( ( rule__Or__OpAssignment_1_1 ) ) ;
    public final void rule__Or__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5481:1: ( ( ( rule__Or__OpAssignment_1_1 ) ) )
            // InternalNabla.g:5482:1: ( ( rule__Or__OpAssignment_1_1 ) )
            {
            // InternalNabla.g:5482:1: ( ( rule__Or__OpAssignment_1_1 ) )
            // InternalNabla.g:5483:2: ( rule__Or__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getOpAssignment_1_1()); 
            }
            // InternalNabla.g:5484:2: ( rule__Or__OpAssignment_1_1 )
            // InternalNabla.g:5484:3: rule__Or__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Or__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__1__Impl"


    // $ANTLR start "rule__Or__Group_1__2"
    // InternalNabla.g:5492:1: rule__Or__Group_1__2 : rule__Or__Group_1__2__Impl ;
    public final void rule__Or__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5496:1: ( rule__Or__Group_1__2__Impl )
            // InternalNabla.g:5497:2: rule__Or__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Or__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__2"


    // $ANTLR start "rule__Or__Group_1__2__Impl"
    // InternalNabla.g:5503:1: rule__Or__Group_1__2__Impl : ( ( rule__Or__RightAssignment_1_2 ) ) ;
    public final void rule__Or__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5507:1: ( ( ( rule__Or__RightAssignment_1_2 ) ) )
            // InternalNabla.g:5508:1: ( ( rule__Or__RightAssignment_1_2 ) )
            {
            // InternalNabla.g:5508:1: ( ( rule__Or__RightAssignment_1_2 ) )
            // InternalNabla.g:5509:2: ( rule__Or__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getRightAssignment_1_2()); 
            }
            // InternalNabla.g:5510:2: ( rule__Or__RightAssignment_1_2 )
            // InternalNabla.g:5510:3: rule__Or__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Or__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__2__Impl"


    // $ANTLR start "rule__And__Group__0"
    // InternalNabla.g:5519:1: rule__And__Group__0 : rule__And__Group__0__Impl rule__And__Group__1 ;
    public final void rule__And__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5523:1: ( rule__And__Group__0__Impl rule__And__Group__1 )
            // InternalNabla.g:5524:2: rule__And__Group__0__Impl rule__And__Group__1
            {
            pushFollow(FOLLOW_41);
            rule__And__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__And__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__0"


    // $ANTLR start "rule__And__Group__0__Impl"
    // InternalNabla.g:5531:1: rule__And__Group__0__Impl : ( ruleEquality ) ;
    public final void rule__And__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5535:1: ( ( ruleEquality ) )
            // InternalNabla.g:5536:1: ( ruleEquality )
            {
            // InternalNabla.g:5536:1: ( ruleEquality )
            // InternalNabla.g:5537:2: ruleEquality
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEquality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__0__Impl"


    // $ANTLR start "rule__And__Group__1"
    // InternalNabla.g:5546:1: rule__And__Group__1 : rule__And__Group__1__Impl ;
    public final void rule__And__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5550:1: ( rule__And__Group__1__Impl )
            // InternalNabla.g:5551:2: rule__And__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__And__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__1"


    // $ANTLR start "rule__And__Group__1__Impl"
    // InternalNabla.g:5557:1: rule__And__Group__1__Impl : ( ( rule__And__Group_1__0 )* ) ;
    public final void rule__And__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5561:1: ( ( ( rule__And__Group_1__0 )* ) )
            // InternalNabla.g:5562:1: ( ( rule__And__Group_1__0 )* )
            {
            // InternalNabla.g:5562:1: ( ( rule__And__Group_1__0 )* )
            // InternalNabla.g:5563:2: ( rule__And__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getGroup_1()); 
            }
            // InternalNabla.g:5564:2: ( rule__And__Group_1__0 )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==62) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // InternalNabla.g:5564:3: rule__And__Group_1__0
            	    {
            	    pushFollow(FOLLOW_42);
            	    rule__And__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__1__Impl"


    // $ANTLR start "rule__And__Group_1__0"
    // InternalNabla.g:5573:1: rule__And__Group_1__0 : rule__And__Group_1__0__Impl rule__And__Group_1__1 ;
    public final void rule__And__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5577:1: ( rule__And__Group_1__0__Impl rule__And__Group_1__1 )
            // InternalNabla.g:5578:2: rule__And__Group_1__0__Impl rule__And__Group_1__1
            {
            pushFollow(FOLLOW_41);
            rule__And__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__And__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__0"


    // $ANTLR start "rule__And__Group_1__0__Impl"
    // InternalNabla.g:5585:1: rule__And__Group_1__0__Impl : ( () ) ;
    public final void rule__And__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5589:1: ( ( () ) )
            // InternalNabla.g:5590:1: ( () )
            {
            // InternalNabla.g:5590:1: ( () )
            // InternalNabla.g:5591:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getAndLeftAction_1_0()); 
            }
            // InternalNabla.g:5592:2: ()
            // InternalNabla.g:5592:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getAndLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__0__Impl"


    // $ANTLR start "rule__And__Group_1__1"
    // InternalNabla.g:5600:1: rule__And__Group_1__1 : rule__And__Group_1__1__Impl rule__And__Group_1__2 ;
    public final void rule__And__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5604:1: ( rule__And__Group_1__1__Impl rule__And__Group_1__2 )
            // InternalNabla.g:5605:2: rule__And__Group_1__1__Impl rule__And__Group_1__2
            {
            pushFollow(FOLLOW_21);
            rule__And__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__And__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__1"


    // $ANTLR start "rule__And__Group_1__1__Impl"
    // InternalNabla.g:5612:1: rule__And__Group_1__1__Impl : ( ( rule__And__OpAssignment_1_1 ) ) ;
    public final void rule__And__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5616:1: ( ( ( rule__And__OpAssignment_1_1 ) ) )
            // InternalNabla.g:5617:1: ( ( rule__And__OpAssignment_1_1 ) )
            {
            // InternalNabla.g:5617:1: ( ( rule__And__OpAssignment_1_1 ) )
            // InternalNabla.g:5618:2: ( rule__And__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getOpAssignment_1_1()); 
            }
            // InternalNabla.g:5619:2: ( rule__And__OpAssignment_1_1 )
            // InternalNabla.g:5619:3: rule__And__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__And__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__1__Impl"


    // $ANTLR start "rule__And__Group_1__2"
    // InternalNabla.g:5627:1: rule__And__Group_1__2 : rule__And__Group_1__2__Impl ;
    public final void rule__And__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5631:1: ( rule__And__Group_1__2__Impl )
            // InternalNabla.g:5632:2: rule__And__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__And__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__2"


    // $ANTLR start "rule__And__Group_1__2__Impl"
    // InternalNabla.g:5638:1: rule__And__Group_1__2__Impl : ( ( rule__And__RightAssignment_1_2 ) ) ;
    public final void rule__And__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5642:1: ( ( ( rule__And__RightAssignment_1_2 ) ) )
            // InternalNabla.g:5643:1: ( ( rule__And__RightAssignment_1_2 ) )
            {
            // InternalNabla.g:5643:1: ( ( rule__And__RightAssignment_1_2 ) )
            // InternalNabla.g:5644:2: ( rule__And__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getRightAssignment_1_2()); 
            }
            // InternalNabla.g:5645:2: ( rule__And__RightAssignment_1_2 )
            // InternalNabla.g:5645:3: rule__And__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__And__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__2__Impl"


    // $ANTLR start "rule__Equality__Group__0"
    // InternalNabla.g:5654:1: rule__Equality__Group__0 : rule__Equality__Group__0__Impl rule__Equality__Group__1 ;
    public final void rule__Equality__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5658:1: ( rule__Equality__Group__0__Impl rule__Equality__Group__1 )
            // InternalNabla.g:5659:2: rule__Equality__Group__0__Impl rule__Equality__Group__1
            {
            pushFollow(FOLLOW_43);
            rule__Equality__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Equality__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__0"


    // $ANTLR start "rule__Equality__Group__0__Impl"
    // InternalNabla.g:5666:1: rule__Equality__Group__0__Impl : ( ruleComparison ) ;
    public final void rule__Equality__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5670:1: ( ( ruleComparison ) )
            // InternalNabla.g:5671:1: ( ruleComparison )
            {
            // InternalNabla.g:5671:1: ( ruleComparison )
            // InternalNabla.g:5672:2: ruleComparison
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__0__Impl"


    // $ANTLR start "rule__Equality__Group__1"
    // InternalNabla.g:5681:1: rule__Equality__Group__1 : rule__Equality__Group__1__Impl ;
    public final void rule__Equality__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5685:1: ( rule__Equality__Group__1__Impl )
            // InternalNabla.g:5686:2: rule__Equality__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Equality__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__1"


    // $ANTLR start "rule__Equality__Group__1__Impl"
    // InternalNabla.g:5692:1: rule__Equality__Group__1__Impl : ( ( rule__Equality__Group_1__0 )* ) ;
    public final void rule__Equality__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5696:1: ( ( ( rule__Equality__Group_1__0 )* ) )
            // InternalNabla.g:5697:1: ( ( rule__Equality__Group_1__0 )* )
            {
            // InternalNabla.g:5697:1: ( ( rule__Equality__Group_1__0 )* )
            // InternalNabla.g:5698:2: ( rule__Equality__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAccess().getGroup_1()); 
            }
            // InternalNabla.g:5699:2: ( rule__Equality__Group_1__0 )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( ((LA42_0>=13 && LA42_0<=14)) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // InternalNabla.g:5699:3: rule__Equality__Group_1__0
            	    {
            	    pushFollow(FOLLOW_44);
            	    rule__Equality__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__1__Impl"


    // $ANTLR start "rule__Equality__Group_1__0"
    // InternalNabla.g:5708:1: rule__Equality__Group_1__0 : rule__Equality__Group_1__0__Impl rule__Equality__Group_1__1 ;
    public final void rule__Equality__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5712:1: ( rule__Equality__Group_1__0__Impl rule__Equality__Group_1__1 )
            // InternalNabla.g:5713:2: rule__Equality__Group_1__0__Impl rule__Equality__Group_1__1
            {
            pushFollow(FOLLOW_43);
            rule__Equality__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Equality__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__0"


    // $ANTLR start "rule__Equality__Group_1__0__Impl"
    // InternalNabla.g:5720:1: rule__Equality__Group_1__0__Impl : ( () ) ;
    public final void rule__Equality__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5724:1: ( ( () ) )
            // InternalNabla.g:5725:1: ( () )
            {
            // InternalNabla.g:5725:1: ( () )
            // InternalNabla.g:5726:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0()); 
            }
            // InternalNabla.g:5727:2: ()
            // InternalNabla.g:5727:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__0__Impl"


    // $ANTLR start "rule__Equality__Group_1__1"
    // InternalNabla.g:5735:1: rule__Equality__Group_1__1 : rule__Equality__Group_1__1__Impl rule__Equality__Group_1__2 ;
    public final void rule__Equality__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5739:1: ( rule__Equality__Group_1__1__Impl rule__Equality__Group_1__2 )
            // InternalNabla.g:5740:2: rule__Equality__Group_1__1__Impl rule__Equality__Group_1__2
            {
            pushFollow(FOLLOW_21);
            rule__Equality__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Equality__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__1"


    // $ANTLR start "rule__Equality__Group_1__1__Impl"
    // InternalNabla.g:5747:1: rule__Equality__Group_1__1__Impl : ( ( rule__Equality__OpAssignment_1_1 ) ) ;
    public final void rule__Equality__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5751:1: ( ( ( rule__Equality__OpAssignment_1_1 ) ) )
            // InternalNabla.g:5752:1: ( ( rule__Equality__OpAssignment_1_1 ) )
            {
            // InternalNabla.g:5752:1: ( ( rule__Equality__OpAssignment_1_1 ) )
            // InternalNabla.g:5753:2: ( rule__Equality__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAccess().getOpAssignment_1_1()); 
            }
            // InternalNabla.g:5754:2: ( rule__Equality__OpAssignment_1_1 )
            // InternalNabla.g:5754:3: rule__Equality__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Equality__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__1__Impl"


    // $ANTLR start "rule__Equality__Group_1__2"
    // InternalNabla.g:5762:1: rule__Equality__Group_1__2 : rule__Equality__Group_1__2__Impl ;
    public final void rule__Equality__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5766:1: ( rule__Equality__Group_1__2__Impl )
            // InternalNabla.g:5767:2: rule__Equality__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Equality__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__2"


    // $ANTLR start "rule__Equality__Group_1__2__Impl"
    // InternalNabla.g:5773:1: rule__Equality__Group_1__2__Impl : ( ( rule__Equality__RightAssignment_1_2 ) ) ;
    public final void rule__Equality__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5777:1: ( ( ( rule__Equality__RightAssignment_1_2 ) ) )
            // InternalNabla.g:5778:1: ( ( rule__Equality__RightAssignment_1_2 ) )
            {
            // InternalNabla.g:5778:1: ( ( rule__Equality__RightAssignment_1_2 ) )
            // InternalNabla.g:5779:2: ( rule__Equality__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAccess().getRightAssignment_1_2()); 
            }
            // InternalNabla.g:5780:2: ( rule__Equality__RightAssignment_1_2 )
            // InternalNabla.g:5780:3: rule__Equality__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Equality__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__2__Impl"


    // $ANTLR start "rule__Comparison__Group__0"
    // InternalNabla.g:5789:1: rule__Comparison__Group__0 : rule__Comparison__Group__0__Impl rule__Comparison__Group__1 ;
    public final void rule__Comparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5793:1: ( rule__Comparison__Group__0__Impl rule__Comparison__Group__1 )
            // InternalNabla.g:5794:2: rule__Comparison__Group__0__Impl rule__Comparison__Group__1
            {
            pushFollow(FOLLOW_45);
            rule__Comparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0"


    // $ANTLR start "rule__Comparison__Group__0__Impl"
    // InternalNabla.g:5801:1: rule__Comparison__Group__0__Impl : ( rulePlusOrMinus ) ;
    public final void rule__Comparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5805:1: ( ( rulePlusOrMinus ) )
            // InternalNabla.g:5806:1: ( rulePlusOrMinus )
            {
            // InternalNabla.g:5806:1: ( rulePlusOrMinus )
            // InternalNabla.g:5807:2: rulePlusOrMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePlusOrMinus();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0__Impl"


    // $ANTLR start "rule__Comparison__Group__1"
    // InternalNabla.g:5816:1: rule__Comparison__Group__1 : rule__Comparison__Group__1__Impl ;
    public final void rule__Comparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5820:1: ( rule__Comparison__Group__1__Impl )
            // InternalNabla.g:5821:2: rule__Comparison__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1"


    // $ANTLR start "rule__Comparison__Group__1__Impl"
    // InternalNabla.g:5827:1: rule__Comparison__Group__1__Impl : ( ( rule__Comparison__Group_1__0 )* ) ;
    public final void rule__Comparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5831:1: ( ( ( rule__Comparison__Group_1__0 )* ) )
            // InternalNabla.g:5832:1: ( ( rule__Comparison__Group_1__0 )* )
            {
            // InternalNabla.g:5832:1: ( ( rule__Comparison__Group_1__0 )* )
            // InternalNabla.g:5833:2: ( rule__Comparison__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getGroup_1()); 
            }
            // InternalNabla.g:5834:2: ( rule__Comparison__Group_1__0 )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( ((LA43_0>=15 && LA43_0<=18)) ) {
                    alt43=1;
                }


                switch (alt43) {
            	case 1 :
            	    // InternalNabla.g:5834:3: rule__Comparison__Group_1__0
            	    {
            	    pushFollow(FOLLOW_46);
            	    rule__Comparison__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1__Impl"


    // $ANTLR start "rule__Comparison__Group_1__0"
    // InternalNabla.g:5843:1: rule__Comparison__Group_1__0 : rule__Comparison__Group_1__0__Impl rule__Comparison__Group_1__1 ;
    public final void rule__Comparison__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5847:1: ( rule__Comparison__Group_1__0__Impl rule__Comparison__Group_1__1 )
            // InternalNabla.g:5848:2: rule__Comparison__Group_1__0__Impl rule__Comparison__Group_1__1
            {
            pushFollow(FOLLOW_45);
            rule__Comparison__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Comparison__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__0"


    // $ANTLR start "rule__Comparison__Group_1__0__Impl"
    // InternalNabla.g:5855:1: rule__Comparison__Group_1__0__Impl : ( () ) ;
    public final void rule__Comparison__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5859:1: ( ( () ) )
            // InternalNabla.g:5860:1: ( () )
            {
            // InternalNabla.g:5860:1: ( () )
            // InternalNabla.g:5861:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0()); 
            }
            // InternalNabla.g:5862:2: ()
            // InternalNabla.g:5862:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__0__Impl"


    // $ANTLR start "rule__Comparison__Group_1__1"
    // InternalNabla.g:5870:1: rule__Comparison__Group_1__1 : rule__Comparison__Group_1__1__Impl rule__Comparison__Group_1__2 ;
    public final void rule__Comparison__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5874:1: ( rule__Comparison__Group_1__1__Impl rule__Comparison__Group_1__2 )
            // InternalNabla.g:5875:2: rule__Comparison__Group_1__1__Impl rule__Comparison__Group_1__2
            {
            pushFollow(FOLLOW_21);
            rule__Comparison__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Comparison__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__1"


    // $ANTLR start "rule__Comparison__Group_1__1__Impl"
    // InternalNabla.g:5882:1: rule__Comparison__Group_1__1__Impl : ( ( rule__Comparison__OpAssignment_1_1 ) ) ;
    public final void rule__Comparison__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5886:1: ( ( ( rule__Comparison__OpAssignment_1_1 ) ) )
            // InternalNabla.g:5887:1: ( ( rule__Comparison__OpAssignment_1_1 ) )
            {
            // InternalNabla.g:5887:1: ( ( rule__Comparison__OpAssignment_1_1 ) )
            // InternalNabla.g:5888:2: ( rule__Comparison__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); 
            }
            // InternalNabla.g:5889:2: ( rule__Comparison__OpAssignment_1_1 )
            // InternalNabla.g:5889:3: rule__Comparison__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__1__Impl"


    // $ANTLR start "rule__Comparison__Group_1__2"
    // InternalNabla.g:5897:1: rule__Comparison__Group_1__2 : rule__Comparison__Group_1__2__Impl ;
    public final void rule__Comparison__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5901:1: ( rule__Comparison__Group_1__2__Impl )
            // InternalNabla.g:5902:2: rule__Comparison__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__2"


    // $ANTLR start "rule__Comparison__Group_1__2__Impl"
    // InternalNabla.g:5908:1: rule__Comparison__Group_1__2__Impl : ( ( rule__Comparison__RightAssignment_1_2 ) ) ;
    public final void rule__Comparison__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5912:1: ( ( ( rule__Comparison__RightAssignment_1_2 ) ) )
            // InternalNabla.g:5913:1: ( ( rule__Comparison__RightAssignment_1_2 ) )
            {
            // InternalNabla.g:5913:1: ( ( rule__Comparison__RightAssignment_1_2 ) )
            // InternalNabla.g:5914:2: ( rule__Comparison__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); 
            }
            // InternalNabla.g:5915:2: ( rule__Comparison__RightAssignment_1_2 )
            // InternalNabla.g:5915:3: rule__Comparison__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__2__Impl"


    // $ANTLR start "rule__PlusOrMinus__Group__0"
    // InternalNabla.g:5924:1: rule__PlusOrMinus__Group__0 : rule__PlusOrMinus__Group__0__Impl rule__PlusOrMinus__Group__1 ;
    public final void rule__PlusOrMinus__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5928:1: ( rule__PlusOrMinus__Group__0__Impl rule__PlusOrMinus__Group__1 )
            // InternalNabla.g:5929:2: rule__PlusOrMinus__Group__0__Impl rule__PlusOrMinus__Group__1
            {
            pushFollow(FOLLOW_47);
            rule__PlusOrMinus__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group__0"


    // $ANTLR start "rule__PlusOrMinus__Group__0__Impl"
    // InternalNabla.g:5936:1: rule__PlusOrMinus__Group__0__Impl : ( ruleMulOrDiv ) ;
    public final void rule__PlusOrMinus__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5940:1: ( ( ruleMulOrDiv ) )
            // InternalNabla.g:5941:1: ( ruleMulOrDiv )
            {
            // InternalNabla.g:5941:1: ( ruleMulOrDiv )
            // InternalNabla.g:5942:2: ruleMulOrDiv
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMulOrDiv();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group__0__Impl"


    // $ANTLR start "rule__PlusOrMinus__Group__1"
    // InternalNabla.g:5951:1: rule__PlusOrMinus__Group__1 : rule__PlusOrMinus__Group__1__Impl ;
    public final void rule__PlusOrMinus__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5955:1: ( rule__PlusOrMinus__Group__1__Impl )
            // InternalNabla.g:5956:2: rule__PlusOrMinus__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group__1"


    // $ANTLR start "rule__PlusOrMinus__Group__1__Impl"
    // InternalNabla.g:5962:1: rule__PlusOrMinus__Group__1__Impl : ( ( rule__PlusOrMinus__Group_1__0 )* ) ;
    public final void rule__PlusOrMinus__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5966:1: ( ( ( rule__PlusOrMinus__Group_1__0 )* ) )
            // InternalNabla.g:5967:1: ( ( rule__PlusOrMinus__Group_1__0 )* )
            {
            // InternalNabla.g:5967:1: ( ( rule__PlusOrMinus__Group_1__0 )* )
            // InternalNabla.g:5968:2: ( rule__PlusOrMinus__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getGroup_1()); 
            }
            // InternalNabla.g:5969:2: ( rule__PlusOrMinus__Group_1__0 )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==51||LA44_0==63) ) {
                    alt44=1;
                }


                switch (alt44) {
            	case 1 :
            	    // InternalNabla.g:5969:3: rule__PlusOrMinus__Group_1__0
            	    {
            	    pushFollow(FOLLOW_48);
            	    rule__PlusOrMinus__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group__1__Impl"


    // $ANTLR start "rule__PlusOrMinus__Group_1__0"
    // InternalNabla.g:5978:1: rule__PlusOrMinus__Group_1__0 : rule__PlusOrMinus__Group_1__0__Impl rule__PlusOrMinus__Group_1__1 ;
    public final void rule__PlusOrMinus__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5982:1: ( rule__PlusOrMinus__Group_1__0__Impl rule__PlusOrMinus__Group_1__1 )
            // InternalNabla.g:5983:2: rule__PlusOrMinus__Group_1__0__Impl rule__PlusOrMinus__Group_1__1
            {
            pushFollow(FOLLOW_21);
            rule__PlusOrMinus__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1__0"


    // $ANTLR start "rule__PlusOrMinus__Group_1__0__Impl"
    // InternalNabla.g:5990:1: rule__PlusOrMinus__Group_1__0__Impl : ( ( rule__PlusOrMinus__Alternatives_1_0 ) ) ;
    public final void rule__PlusOrMinus__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:5994:1: ( ( ( rule__PlusOrMinus__Alternatives_1_0 ) ) )
            // InternalNabla.g:5995:1: ( ( rule__PlusOrMinus__Alternatives_1_0 ) )
            {
            // InternalNabla.g:5995:1: ( ( rule__PlusOrMinus__Alternatives_1_0 ) )
            // InternalNabla.g:5996:2: ( rule__PlusOrMinus__Alternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getAlternatives_1_0()); 
            }
            // InternalNabla.g:5997:2: ( rule__PlusOrMinus__Alternatives_1_0 )
            // InternalNabla.g:5997:3: rule__PlusOrMinus__Alternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__Alternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1__0__Impl"


    // $ANTLR start "rule__PlusOrMinus__Group_1__1"
    // InternalNabla.g:6005:1: rule__PlusOrMinus__Group_1__1 : rule__PlusOrMinus__Group_1__1__Impl ;
    public final void rule__PlusOrMinus__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6009:1: ( rule__PlusOrMinus__Group_1__1__Impl )
            // InternalNabla.g:6010:2: rule__PlusOrMinus__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1__1"


    // $ANTLR start "rule__PlusOrMinus__Group_1__1__Impl"
    // InternalNabla.g:6016:1: rule__PlusOrMinus__Group_1__1__Impl : ( ( rule__PlusOrMinus__RightAssignment_1_1 ) ) ;
    public final void rule__PlusOrMinus__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6020:1: ( ( ( rule__PlusOrMinus__RightAssignment_1_1 ) ) )
            // InternalNabla.g:6021:1: ( ( rule__PlusOrMinus__RightAssignment_1_1 ) )
            {
            // InternalNabla.g:6021:1: ( ( rule__PlusOrMinus__RightAssignment_1_1 ) )
            // InternalNabla.g:6022:2: ( rule__PlusOrMinus__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getRightAssignment_1_1()); 
            }
            // InternalNabla.g:6023:2: ( rule__PlusOrMinus__RightAssignment_1_1 )
            // InternalNabla.g:6023:3: rule__PlusOrMinus__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1__1__Impl"


    // $ANTLR start "rule__PlusOrMinus__Group_1_0_0__0"
    // InternalNabla.g:6032:1: rule__PlusOrMinus__Group_1_0_0__0 : rule__PlusOrMinus__Group_1_0_0__0__Impl rule__PlusOrMinus__Group_1_0_0__1 ;
    public final void rule__PlusOrMinus__Group_1_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6036:1: ( rule__PlusOrMinus__Group_1_0_0__0__Impl rule__PlusOrMinus__Group_1_0_0__1 )
            // InternalNabla.g:6037:2: rule__PlusOrMinus__Group_1_0_0__0__Impl rule__PlusOrMinus__Group_1_0_0__1
            {
            pushFollow(FOLLOW_49);
            rule__PlusOrMinus__Group_1_0_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__Group_1_0_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1_0_0__0"


    // $ANTLR start "rule__PlusOrMinus__Group_1_0_0__0__Impl"
    // InternalNabla.g:6044:1: rule__PlusOrMinus__Group_1_0_0__0__Impl : ( () ) ;
    public final void rule__PlusOrMinus__Group_1_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6048:1: ( ( () ) )
            // InternalNabla.g:6049:1: ( () )
            {
            // InternalNabla.g:6049:1: ( () )
            // InternalNabla.g:6050:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0()); 
            }
            // InternalNabla.g:6051:2: ()
            // InternalNabla.g:6051:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1_0_0__0__Impl"


    // $ANTLR start "rule__PlusOrMinus__Group_1_0_0__1"
    // InternalNabla.g:6059:1: rule__PlusOrMinus__Group_1_0_0__1 : rule__PlusOrMinus__Group_1_0_0__1__Impl ;
    public final void rule__PlusOrMinus__Group_1_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6063:1: ( rule__PlusOrMinus__Group_1_0_0__1__Impl )
            // InternalNabla.g:6064:2: rule__PlusOrMinus__Group_1_0_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__Group_1_0_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1_0_0__1"


    // $ANTLR start "rule__PlusOrMinus__Group_1_0_0__1__Impl"
    // InternalNabla.g:6070:1: rule__PlusOrMinus__Group_1_0_0__1__Impl : ( ( rule__PlusOrMinus__OpAssignment_1_0_0_1 ) ) ;
    public final void rule__PlusOrMinus__Group_1_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6074:1: ( ( ( rule__PlusOrMinus__OpAssignment_1_0_0_1 ) ) )
            // InternalNabla.g:6075:1: ( ( rule__PlusOrMinus__OpAssignment_1_0_0_1 ) )
            {
            // InternalNabla.g:6075:1: ( ( rule__PlusOrMinus__OpAssignment_1_0_0_1 ) )
            // InternalNabla.g:6076:2: ( rule__PlusOrMinus__OpAssignment_1_0_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getOpAssignment_1_0_0_1()); 
            }
            // InternalNabla.g:6077:2: ( rule__PlusOrMinus__OpAssignment_1_0_0_1 )
            // InternalNabla.g:6077:3: rule__PlusOrMinus__OpAssignment_1_0_0_1
            {
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__OpAssignment_1_0_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getOpAssignment_1_0_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1_0_0__1__Impl"


    // $ANTLR start "rule__PlusOrMinus__Group_1_0_1__0"
    // InternalNabla.g:6086:1: rule__PlusOrMinus__Group_1_0_1__0 : rule__PlusOrMinus__Group_1_0_1__0__Impl rule__PlusOrMinus__Group_1_0_1__1 ;
    public final void rule__PlusOrMinus__Group_1_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6090:1: ( rule__PlusOrMinus__Group_1_0_1__0__Impl rule__PlusOrMinus__Group_1_0_1__1 )
            // InternalNabla.g:6091:2: rule__PlusOrMinus__Group_1_0_1__0__Impl rule__PlusOrMinus__Group_1_0_1__1
            {
            pushFollow(FOLLOW_47);
            rule__PlusOrMinus__Group_1_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__Group_1_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1_0_1__0"


    // $ANTLR start "rule__PlusOrMinus__Group_1_0_1__0__Impl"
    // InternalNabla.g:6098:1: rule__PlusOrMinus__Group_1_0_1__0__Impl : ( () ) ;
    public final void rule__PlusOrMinus__Group_1_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6102:1: ( ( () ) )
            // InternalNabla.g:6103:1: ( () )
            {
            // InternalNabla.g:6103:1: ( () )
            // InternalNabla.g:6104:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0()); 
            }
            // InternalNabla.g:6105:2: ()
            // InternalNabla.g:6105:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1_0_1__0__Impl"


    // $ANTLR start "rule__PlusOrMinus__Group_1_0_1__1"
    // InternalNabla.g:6113:1: rule__PlusOrMinus__Group_1_0_1__1 : rule__PlusOrMinus__Group_1_0_1__1__Impl ;
    public final void rule__PlusOrMinus__Group_1_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6117:1: ( rule__PlusOrMinus__Group_1_0_1__1__Impl )
            // InternalNabla.g:6118:2: rule__PlusOrMinus__Group_1_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__Group_1_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1_0_1__1"


    // $ANTLR start "rule__PlusOrMinus__Group_1_0_1__1__Impl"
    // InternalNabla.g:6124:1: rule__PlusOrMinus__Group_1_0_1__1__Impl : ( ( rule__PlusOrMinus__OpAssignment_1_0_1_1 ) ) ;
    public final void rule__PlusOrMinus__Group_1_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6128:1: ( ( ( rule__PlusOrMinus__OpAssignment_1_0_1_1 ) ) )
            // InternalNabla.g:6129:1: ( ( rule__PlusOrMinus__OpAssignment_1_0_1_1 ) )
            {
            // InternalNabla.g:6129:1: ( ( rule__PlusOrMinus__OpAssignment_1_0_1_1 ) )
            // InternalNabla.g:6130:2: ( rule__PlusOrMinus__OpAssignment_1_0_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getOpAssignment_1_0_1_1()); 
            }
            // InternalNabla.g:6131:2: ( rule__PlusOrMinus__OpAssignment_1_0_1_1 )
            // InternalNabla.g:6131:3: rule__PlusOrMinus__OpAssignment_1_0_1_1
            {
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__OpAssignment_1_0_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getOpAssignment_1_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1_0_1__1__Impl"


    // $ANTLR start "rule__MulOrDiv__Group__0"
    // InternalNabla.g:6140:1: rule__MulOrDiv__Group__0 : rule__MulOrDiv__Group__0__Impl rule__MulOrDiv__Group__1 ;
    public final void rule__MulOrDiv__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6144:1: ( rule__MulOrDiv__Group__0__Impl rule__MulOrDiv__Group__1 )
            // InternalNabla.g:6145:2: rule__MulOrDiv__Group__0__Impl rule__MulOrDiv__Group__1
            {
            pushFollow(FOLLOW_50);
            rule__MulOrDiv__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group__0"


    // $ANTLR start "rule__MulOrDiv__Group__0__Impl"
    // InternalNabla.g:6152:1: rule__MulOrDiv__Group__0__Impl : ( rulePrimary ) ;
    public final void rule__MulOrDiv__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6156:1: ( ( rulePrimary ) )
            // InternalNabla.g:6157:1: ( rulePrimary )
            {
            // InternalNabla.g:6157:1: ( rulePrimary )
            // InternalNabla.g:6158:2: rulePrimary
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivAccess().getPrimaryParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePrimary();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivAccess().getPrimaryParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group__0__Impl"


    // $ANTLR start "rule__MulOrDiv__Group__1"
    // InternalNabla.g:6167:1: rule__MulOrDiv__Group__1 : rule__MulOrDiv__Group__1__Impl ;
    public final void rule__MulOrDiv__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6171:1: ( rule__MulOrDiv__Group__1__Impl )
            // InternalNabla.g:6172:2: rule__MulOrDiv__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group__1"


    // $ANTLR start "rule__MulOrDiv__Group__1__Impl"
    // InternalNabla.g:6178:1: rule__MulOrDiv__Group__1__Impl : ( ( rule__MulOrDiv__Group_1__0 )* ) ;
    public final void rule__MulOrDiv__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6182:1: ( ( ( rule__MulOrDiv__Group_1__0 )* ) )
            // InternalNabla.g:6183:1: ( ( rule__MulOrDiv__Group_1__0 )* )
            {
            // InternalNabla.g:6183:1: ( ( rule__MulOrDiv__Group_1__0 )* )
            // InternalNabla.g:6184:2: ( rule__MulOrDiv__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivAccess().getGroup_1()); 
            }
            // InternalNabla.g:6185:2: ( rule__MulOrDiv__Group_1__0 )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( ((LA45_0>=19 && LA45_0<=20)) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalNabla.g:6185:3: rule__MulOrDiv__Group_1__0
            	    {
            	    pushFollow(FOLLOW_51);
            	    rule__MulOrDiv__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group__1__Impl"


    // $ANTLR start "rule__MulOrDiv__Group_1__0"
    // InternalNabla.g:6194:1: rule__MulOrDiv__Group_1__0 : rule__MulOrDiv__Group_1__0__Impl rule__MulOrDiv__Group_1__1 ;
    public final void rule__MulOrDiv__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6198:1: ( rule__MulOrDiv__Group_1__0__Impl rule__MulOrDiv__Group_1__1 )
            // InternalNabla.g:6199:2: rule__MulOrDiv__Group_1__0__Impl rule__MulOrDiv__Group_1__1
            {
            pushFollow(FOLLOW_50);
            rule__MulOrDiv__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group_1__0"


    // $ANTLR start "rule__MulOrDiv__Group_1__0__Impl"
    // InternalNabla.g:6206:1: rule__MulOrDiv__Group_1__0__Impl : ( () ) ;
    public final void rule__MulOrDiv__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6210:1: ( ( () ) )
            // InternalNabla.g:6211:1: ( () )
            {
            // InternalNabla.g:6211:1: ( () )
            // InternalNabla.g:6212:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivAccess().getMulOrDivLeftAction_1_0()); 
            }
            // InternalNabla.g:6213:2: ()
            // InternalNabla.g:6213:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivAccess().getMulOrDivLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group_1__0__Impl"


    // $ANTLR start "rule__MulOrDiv__Group_1__1"
    // InternalNabla.g:6221:1: rule__MulOrDiv__Group_1__1 : rule__MulOrDiv__Group_1__1__Impl rule__MulOrDiv__Group_1__2 ;
    public final void rule__MulOrDiv__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6225:1: ( rule__MulOrDiv__Group_1__1__Impl rule__MulOrDiv__Group_1__2 )
            // InternalNabla.g:6226:2: rule__MulOrDiv__Group_1__1__Impl rule__MulOrDiv__Group_1__2
            {
            pushFollow(FOLLOW_21);
            rule__MulOrDiv__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group_1__1"


    // $ANTLR start "rule__MulOrDiv__Group_1__1__Impl"
    // InternalNabla.g:6233:1: rule__MulOrDiv__Group_1__1__Impl : ( ( rule__MulOrDiv__OpAssignment_1_1 ) ) ;
    public final void rule__MulOrDiv__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6237:1: ( ( ( rule__MulOrDiv__OpAssignment_1_1 ) ) )
            // InternalNabla.g:6238:1: ( ( rule__MulOrDiv__OpAssignment_1_1 ) )
            {
            // InternalNabla.g:6238:1: ( ( rule__MulOrDiv__OpAssignment_1_1 ) )
            // InternalNabla.g:6239:2: ( rule__MulOrDiv__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivAccess().getOpAssignment_1_1()); 
            }
            // InternalNabla.g:6240:2: ( rule__MulOrDiv__OpAssignment_1_1 )
            // InternalNabla.g:6240:3: rule__MulOrDiv__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group_1__1__Impl"


    // $ANTLR start "rule__MulOrDiv__Group_1__2"
    // InternalNabla.g:6248:1: rule__MulOrDiv__Group_1__2 : rule__MulOrDiv__Group_1__2__Impl ;
    public final void rule__MulOrDiv__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6252:1: ( rule__MulOrDiv__Group_1__2__Impl )
            // InternalNabla.g:6253:2: rule__MulOrDiv__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group_1__2"


    // $ANTLR start "rule__MulOrDiv__Group_1__2__Impl"
    // InternalNabla.g:6259:1: rule__MulOrDiv__Group_1__2__Impl : ( ( rule__MulOrDiv__RightAssignment_1_2 ) ) ;
    public final void rule__MulOrDiv__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6263:1: ( ( ( rule__MulOrDiv__RightAssignment_1_2 ) ) )
            // InternalNabla.g:6264:1: ( ( rule__MulOrDiv__RightAssignment_1_2 ) )
            {
            // InternalNabla.g:6264:1: ( ( rule__MulOrDiv__RightAssignment_1_2 ) )
            // InternalNabla.g:6265:2: ( rule__MulOrDiv__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivAccess().getRightAssignment_1_2()); 
            }
            // InternalNabla.g:6266:2: ( rule__MulOrDiv__RightAssignment_1_2 )
            // InternalNabla.g:6266:3: rule__MulOrDiv__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group_1__2__Impl"


    // $ANTLR start "rule__Primary__Group_0__0"
    // InternalNabla.g:6275:1: rule__Primary__Group_0__0 : rule__Primary__Group_0__0__Impl rule__Primary__Group_0__1 ;
    public final void rule__Primary__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6279:1: ( rule__Primary__Group_0__0__Impl rule__Primary__Group_0__1 )
            // InternalNabla.g:6280:2: rule__Primary__Group_0__0__Impl rule__Primary__Group_0__1
            {
            pushFollow(FOLLOW_22);
            rule__Primary__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__0"


    // $ANTLR start "rule__Primary__Group_0__0__Impl"
    // InternalNabla.g:6287:1: rule__Primary__Group_0__0__Impl : ( () ) ;
    public final void rule__Primary__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6291:1: ( ( () ) )
            // InternalNabla.g:6292:1: ( () )
            {
            // InternalNabla.g:6292:1: ( () )
            // InternalNabla.g:6293:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getParenthesisAction_0_0()); 
            }
            // InternalNabla.g:6294:2: ()
            // InternalNabla.g:6294:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getParenthesisAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__0__Impl"


    // $ANTLR start "rule__Primary__Group_0__1"
    // InternalNabla.g:6302:1: rule__Primary__Group_0__1 : rule__Primary__Group_0__1__Impl rule__Primary__Group_0__2 ;
    public final void rule__Primary__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6306:1: ( rule__Primary__Group_0__1__Impl rule__Primary__Group_0__2 )
            // InternalNabla.g:6307:2: rule__Primary__Group_0__1__Impl rule__Primary__Group_0__2
            {
            pushFollow(FOLLOW_21);
            rule__Primary__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__1"


    // $ANTLR start "rule__Primary__Group_0__1__Impl"
    // InternalNabla.g:6314:1: rule__Primary__Group_0__1__Impl : ( '(' ) ;
    public final void rule__Primary__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6318:1: ( ( '(' ) )
            // InternalNabla.g:6319:1: ( '(' )
            {
            // InternalNabla.g:6319:1: ( '(' )
            // InternalNabla.g:6320:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_1()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__1__Impl"


    // $ANTLR start "rule__Primary__Group_0__2"
    // InternalNabla.g:6329:1: rule__Primary__Group_0__2 : rule__Primary__Group_0__2__Impl rule__Primary__Group_0__3 ;
    public final void rule__Primary__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6333:1: ( rule__Primary__Group_0__2__Impl rule__Primary__Group_0__3 )
            // InternalNabla.g:6334:2: rule__Primary__Group_0__2__Impl rule__Primary__Group_0__3
            {
            pushFollow(FOLLOW_23);
            rule__Primary__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__2"


    // $ANTLR start "rule__Primary__Group_0__2__Impl"
    // InternalNabla.g:6341:1: rule__Primary__Group_0__2__Impl : ( ( rule__Primary__ExpressionAssignment_0_2 ) ) ;
    public final void rule__Primary__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6345:1: ( ( ( rule__Primary__ExpressionAssignment_0_2 ) ) )
            // InternalNabla.g:6346:1: ( ( rule__Primary__ExpressionAssignment_0_2 ) )
            {
            // InternalNabla.g:6346:1: ( ( rule__Primary__ExpressionAssignment_0_2 ) )
            // InternalNabla.g:6347:2: ( rule__Primary__ExpressionAssignment_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getExpressionAssignment_0_2()); 
            }
            // InternalNabla.g:6348:2: ( rule__Primary__ExpressionAssignment_0_2 )
            // InternalNabla.g:6348:3: rule__Primary__ExpressionAssignment_0_2
            {
            pushFollow(FOLLOW_2);
            rule__Primary__ExpressionAssignment_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getExpressionAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__2__Impl"


    // $ANTLR start "rule__Primary__Group_0__3"
    // InternalNabla.g:6356:1: rule__Primary__Group_0__3 : rule__Primary__Group_0__3__Impl ;
    public final void rule__Primary__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6360:1: ( rule__Primary__Group_0__3__Impl )
            // InternalNabla.g:6361:2: rule__Primary__Group_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__3"


    // $ANTLR start "rule__Primary__Group_0__3__Impl"
    // InternalNabla.g:6367:1: rule__Primary__Group_0__3__Impl : ( ')' ) ;
    public final void rule__Primary__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6371:1: ( ( ')' ) )
            // InternalNabla.g:6372:1: ( ')' )
            {
            // InternalNabla.g:6372:1: ( ')' )
            // InternalNabla.g:6373:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_3()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__3__Impl"


    // $ANTLR start "rule__Primary__Group_1__0"
    // InternalNabla.g:6383:1: rule__Primary__Group_1__0 : rule__Primary__Group_1__0__Impl rule__Primary__Group_1__1 ;
    public final void rule__Primary__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6387:1: ( rule__Primary__Group_1__0__Impl rule__Primary__Group_1__1 )
            // InternalNabla.g:6388:2: rule__Primary__Group_1__0__Impl rule__Primary__Group_1__1
            {
            pushFollow(FOLLOW_52);
            rule__Primary__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Primary__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__0"


    // $ANTLR start "rule__Primary__Group_1__0__Impl"
    // InternalNabla.g:6395:1: rule__Primary__Group_1__0__Impl : ( () ) ;
    public final void rule__Primary__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6399:1: ( ( () ) )
            // InternalNabla.g:6400:1: ( () )
            {
            // InternalNabla.g:6400:1: ( () )
            // InternalNabla.g:6401:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getUnaryMinusAction_1_0()); 
            }
            // InternalNabla.g:6402:2: ()
            // InternalNabla.g:6402:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getUnaryMinusAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__0__Impl"


    // $ANTLR start "rule__Primary__Group_1__1"
    // InternalNabla.g:6410:1: rule__Primary__Group_1__1 : rule__Primary__Group_1__1__Impl rule__Primary__Group_1__2 ;
    public final void rule__Primary__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6414:1: ( rule__Primary__Group_1__1__Impl rule__Primary__Group_1__2 )
            // InternalNabla.g:6415:2: rule__Primary__Group_1__1__Impl rule__Primary__Group_1__2
            {
            pushFollow(FOLLOW_21);
            rule__Primary__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Primary__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__1"


    // $ANTLR start "rule__Primary__Group_1__1__Impl"
    // InternalNabla.g:6422:1: rule__Primary__Group_1__1__Impl : ( '-' ) ;
    public final void rule__Primary__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6426:1: ( ( '-' ) )
            // InternalNabla.g:6427:1: ( '-' )
            {
            // InternalNabla.g:6427:1: ( '-' )
            // InternalNabla.g:6428:2: '-'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getHyphenMinusKeyword_1_1()); 
            }
            match(input,51,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getHyphenMinusKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__1__Impl"


    // $ANTLR start "rule__Primary__Group_1__2"
    // InternalNabla.g:6437:1: rule__Primary__Group_1__2 : rule__Primary__Group_1__2__Impl ;
    public final void rule__Primary__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6441:1: ( rule__Primary__Group_1__2__Impl )
            // InternalNabla.g:6442:2: rule__Primary__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__2"


    // $ANTLR start "rule__Primary__Group_1__2__Impl"
    // InternalNabla.g:6448:1: rule__Primary__Group_1__2__Impl : ( ( rule__Primary__ExpressionAssignment_1_2 ) ) ;
    public final void rule__Primary__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6452:1: ( ( ( rule__Primary__ExpressionAssignment_1_2 ) ) )
            // InternalNabla.g:6453:1: ( ( rule__Primary__ExpressionAssignment_1_2 ) )
            {
            // InternalNabla.g:6453:1: ( ( rule__Primary__ExpressionAssignment_1_2 ) )
            // InternalNabla.g:6454:2: ( rule__Primary__ExpressionAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2()); 
            }
            // InternalNabla.g:6455:2: ( rule__Primary__ExpressionAssignment_1_2 )
            // InternalNabla.g:6455:3: rule__Primary__ExpressionAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Primary__ExpressionAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__2__Impl"


    // $ANTLR start "rule__Primary__Group_2__0"
    // InternalNabla.g:6464:1: rule__Primary__Group_2__0 : rule__Primary__Group_2__0__Impl rule__Primary__Group_2__1 ;
    public final void rule__Primary__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6468:1: ( rule__Primary__Group_2__0__Impl rule__Primary__Group_2__1 )
            // InternalNabla.g:6469:2: rule__Primary__Group_2__0__Impl rule__Primary__Group_2__1
            {
            pushFollow(FOLLOW_53);
            rule__Primary__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Primary__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__0"


    // $ANTLR start "rule__Primary__Group_2__0__Impl"
    // InternalNabla.g:6476:1: rule__Primary__Group_2__0__Impl : ( () ) ;
    public final void rule__Primary__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6480:1: ( ( () ) )
            // InternalNabla.g:6481:1: ( () )
            {
            // InternalNabla.g:6481:1: ( () )
            // InternalNabla.g:6482:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getNotAction_2_0()); 
            }
            // InternalNabla.g:6483:2: ()
            // InternalNabla.g:6483:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getNotAction_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__0__Impl"


    // $ANTLR start "rule__Primary__Group_2__1"
    // InternalNabla.g:6491:1: rule__Primary__Group_2__1 : rule__Primary__Group_2__1__Impl rule__Primary__Group_2__2 ;
    public final void rule__Primary__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6495:1: ( rule__Primary__Group_2__1__Impl rule__Primary__Group_2__2 )
            // InternalNabla.g:6496:2: rule__Primary__Group_2__1__Impl rule__Primary__Group_2__2
            {
            pushFollow(FOLLOW_21);
            rule__Primary__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Primary__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__1"


    // $ANTLR start "rule__Primary__Group_2__1__Impl"
    // InternalNabla.g:6503:1: rule__Primary__Group_2__1__Impl : ( '!' ) ;
    public final void rule__Primary__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6507:1: ( ( '!' ) )
            // InternalNabla.g:6508:1: ( '!' )
            {
            // InternalNabla.g:6508:1: ( '!' )
            // InternalNabla.g:6509:2: '!'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_2_1()); 
            }
            match(input,52,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__1__Impl"


    // $ANTLR start "rule__Primary__Group_2__2"
    // InternalNabla.g:6518:1: rule__Primary__Group_2__2 : rule__Primary__Group_2__2__Impl ;
    public final void rule__Primary__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6522:1: ( rule__Primary__Group_2__2__Impl )
            // InternalNabla.g:6523:2: rule__Primary__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__2"


    // $ANTLR start "rule__Primary__Group_2__2__Impl"
    // InternalNabla.g:6529:1: rule__Primary__Group_2__2__Impl : ( ( rule__Primary__ExpressionAssignment_2_2 ) ) ;
    public final void rule__Primary__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6533:1: ( ( ( rule__Primary__ExpressionAssignment_2_2 ) ) )
            // InternalNabla.g:6534:1: ( ( rule__Primary__ExpressionAssignment_2_2 ) )
            {
            // InternalNabla.g:6534:1: ( ( rule__Primary__ExpressionAssignment_2_2 ) )
            // InternalNabla.g:6535:2: ( rule__Primary__ExpressionAssignment_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getExpressionAssignment_2_2()); 
            }
            // InternalNabla.g:6536:2: ( rule__Primary__ExpressionAssignment_2_2 )
            // InternalNabla.g:6536:3: rule__Primary__ExpressionAssignment_2_2
            {
            pushFollow(FOLLOW_2);
            rule__Primary__ExpressionAssignment_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getExpressionAssignment_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__2__Impl"


    // $ANTLR start "rule__Atomic__Group_0__0"
    // InternalNabla.g:6545:1: rule__Atomic__Group_0__0 : rule__Atomic__Group_0__0__Impl rule__Atomic__Group_0__1 ;
    public final void rule__Atomic__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6549:1: ( rule__Atomic__Group_0__0__Impl rule__Atomic__Group_0__1 )
            // InternalNabla.g:6550:2: rule__Atomic__Group_0__0__Impl rule__Atomic__Group_0__1
            {
            pushFollow(FOLLOW_54);
            rule__Atomic__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_0__0"


    // $ANTLR start "rule__Atomic__Group_0__0__Impl"
    // InternalNabla.g:6557:1: rule__Atomic__Group_0__0__Impl : ( () ) ;
    public final void rule__Atomic__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6561:1: ( ( () ) )
            // InternalNabla.g:6562:1: ( () )
            {
            // InternalNabla.g:6562:1: ( () )
            // InternalNabla.g:6563:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getIntConstantAction_0_0()); 
            }
            // InternalNabla.g:6564:2: ()
            // InternalNabla.g:6564:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getIntConstantAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_0__0__Impl"


    // $ANTLR start "rule__Atomic__Group_0__1"
    // InternalNabla.g:6572:1: rule__Atomic__Group_0__1 : rule__Atomic__Group_0__1__Impl ;
    public final void rule__Atomic__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6576:1: ( rule__Atomic__Group_0__1__Impl )
            // InternalNabla.g:6577:2: rule__Atomic__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_0__1"


    // $ANTLR start "rule__Atomic__Group_0__1__Impl"
    // InternalNabla.g:6583:1: rule__Atomic__Group_0__1__Impl : ( ( rule__Atomic__ValueAssignment_0_1 ) ) ;
    public final void rule__Atomic__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6587:1: ( ( ( rule__Atomic__ValueAssignment_0_1 ) ) )
            // InternalNabla.g:6588:1: ( ( rule__Atomic__ValueAssignment_0_1 ) )
            {
            // InternalNabla.g:6588:1: ( ( rule__Atomic__ValueAssignment_0_1 ) )
            // InternalNabla.g:6589:2: ( rule__Atomic__ValueAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); 
            }
            // InternalNabla.g:6590:2: ( rule__Atomic__ValueAssignment_0_1 )
            // InternalNabla.g:6590:3: rule__Atomic__ValueAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__ValueAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_0__1__Impl"


    // $ANTLR start "rule__Atomic__Group_1__0"
    // InternalNabla.g:6599:1: rule__Atomic__Group_1__0 : rule__Atomic__Group_1__0__Impl rule__Atomic__Group_1__1 ;
    public final void rule__Atomic__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6603:1: ( rule__Atomic__Group_1__0__Impl rule__Atomic__Group_1__1 )
            // InternalNabla.g:6604:2: rule__Atomic__Group_1__0__Impl rule__Atomic__Group_1__1
            {
            pushFollow(FOLLOW_55);
            rule__Atomic__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_1__0"


    // $ANTLR start "rule__Atomic__Group_1__0__Impl"
    // InternalNabla.g:6611:1: rule__Atomic__Group_1__0__Impl : ( () ) ;
    public final void rule__Atomic__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6615:1: ( ( () ) )
            // InternalNabla.g:6616:1: ( () )
            {
            // InternalNabla.g:6616:1: ( () )
            // InternalNabla.g:6617:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getRealConstantAction_1_0()); 
            }
            // InternalNabla.g:6618:2: ()
            // InternalNabla.g:6618:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getRealConstantAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_1__0__Impl"


    // $ANTLR start "rule__Atomic__Group_1__1"
    // InternalNabla.g:6626:1: rule__Atomic__Group_1__1 : rule__Atomic__Group_1__1__Impl ;
    public final void rule__Atomic__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6630:1: ( rule__Atomic__Group_1__1__Impl )
            // InternalNabla.g:6631:2: rule__Atomic__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_1__1"


    // $ANTLR start "rule__Atomic__Group_1__1__Impl"
    // InternalNabla.g:6637:1: rule__Atomic__Group_1__1__Impl : ( ( rule__Atomic__ValueAssignment_1_1 ) ) ;
    public final void rule__Atomic__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6641:1: ( ( ( rule__Atomic__ValueAssignment_1_1 ) ) )
            // InternalNabla.g:6642:1: ( ( rule__Atomic__ValueAssignment_1_1 ) )
            {
            // InternalNabla.g:6642:1: ( ( rule__Atomic__ValueAssignment_1_1 ) )
            // InternalNabla.g:6643:2: ( rule__Atomic__ValueAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); 
            }
            // InternalNabla.g:6644:2: ( rule__Atomic__ValueAssignment_1_1 )
            // InternalNabla.g:6644:3: rule__Atomic__ValueAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__ValueAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_1__1__Impl"


    // $ANTLR start "rule__Atomic__Group_4__0"
    // InternalNabla.g:6653:1: rule__Atomic__Group_4__0 : rule__Atomic__Group_4__0__Impl rule__Atomic__Group_4__1 ;
    public final void rule__Atomic__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6657:1: ( rule__Atomic__Group_4__0__Impl rule__Atomic__Group_4__1 )
            // InternalNabla.g:6658:2: rule__Atomic__Group_4__0__Impl rule__Atomic__Group_4__1
            {
            pushFollow(FOLLOW_56);
            rule__Atomic__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_4__0"


    // $ANTLR start "rule__Atomic__Group_4__0__Impl"
    // InternalNabla.g:6665:1: rule__Atomic__Group_4__0__Impl : ( () ) ;
    public final void rule__Atomic__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6669:1: ( ( () ) )
            // InternalNabla.g:6670:1: ( () )
            {
            // InternalNabla.g:6670:1: ( () )
            // InternalNabla.g:6671:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getBoolConstantAction_4_0()); 
            }
            // InternalNabla.g:6672:2: ()
            // InternalNabla.g:6672:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getBoolConstantAction_4_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_4__0__Impl"


    // $ANTLR start "rule__Atomic__Group_4__1"
    // InternalNabla.g:6680:1: rule__Atomic__Group_4__1 : rule__Atomic__Group_4__1__Impl ;
    public final void rule__Atomic__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6684:1: ( rule__Atomic__Group_4__1__Impl )
            // InternalNabla.g:6685:2: rule__Atomic__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_4__1"


    // $ANTLR start "rule__Atomic__Group_4__1__Impl"
    // InternalNabla.g:6691:1: rule__Atomic__Group_4__1__Impl : ( ( rule__Atomic__Alternatives_4_1 ) ) ;
    public final void rule__Atomic__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6695:1: ( ( ( rule__Atomic__Alternatives_4_1 ) ) )
            // InternalNabla.g:6696:1: ( ( rule__Atomic__Alternatives_4_1 ) )
            {
            // InternalNabla.g:6696:1: ( ( rule__Atomic__Alternatives_4_1 ) )
            // InternalNabla.g:6697:2: ( rule__Atomic__Alternatives_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getAlternatives_4_1()); 
            }
            // InternalNabla.g:6698:2: ( rule__Atomic__Alternatives_4_1 )
            // InternalNabla.g:6698:3: rule__Atomic__Alternatives_4_1
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Alternatives_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getAlternatives_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_4__1__Impl"


    // $ANTLR start "rule__Atomic__Group_5__0"
    // InternalNabla.g:6707:1: rule__Atomic__Group_5__0 : rule__Atomic__Group_5__0__Impl rule__Atomic__Group_5__1 ;
    public final void rule__Atomic__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6711:1: ( rule__Atomic__Group_5__0__Impl rule__Atomic__Group_5__1 )
            // InternalNabla.g:6712:2: rule__Atomic__Group_5__0__Impl rule__Atomic__Group_5__1
            {
            pushFollow(FOLLOW_11);
            rule__Atomic__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_5__0"


    // $ANTLR start "rule__Atomic__Group_5__0__Impl"
    // InternalNabla.g:6719:1: rule__Atomic__Group_5__0__Impl : ( () ) ;
    public final void rule__Atomic__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6723:1: ( ( () ) )
            // InternalNabla.g:6724:1: ( () )
            {
            // InternalNabla.g:6724:1: ( () )
            // InternalNabla.g:6725:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getReal2x2ConstantAction_5_0()); 
            }
            // InternalNabla.g:6726:2: ()
            // InternalNabla.g:6726:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getReal2x2ConstantAction_5_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_5__0__Impl"


    // $ANTLR start "rule__Atomic__Group_5__1"
    // InternalNabla.g:6734:1: rule__Atomic__Group_5__1 : rule__Atomic__Group_5__1__Impl rule__Atomic__Group_5__2 ;
    public final void rule__Atomic__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6738:1: ( rule__Atomic__Group_5__1__Impl rule__Atomic__Group_5__2 )
            // InternalNabla.g:6739:2: rule__Atomic__Group_5__1__Impl rule__Atomic__Group_5__2
            {
            pushFollow(FOLLOW_11);
            rule__Atomic__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_5__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_5__1"


    // $ANTLR start "rule__Atomic__Group_5__1__Impl"
    // InternalNabla.g:6746:1: rule__Atomic__Group_5__1__Impl : ( '{' ) ;
    public final void rule__Atomic__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6750:1: ( ( '{' ) )
            // InternalNabla.g:6751:1: ( '{' )
            {
            // InternalNabla.g:6751:1: ( '{' )
            // InternalNabla.g:6752:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getLeftCurlyBracketKeyword_5_1()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getLeftCurlyBracketKeyword_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_5__1__Impl"


    // $ANTLR start "rule__Atomic__Group_5__2"
    // InternalNabla.g:6761:1: rule__Atomic__Group_5__2 : rule__Atomic__Group_5__2__Impl rule__Atomic__Group_5__3 ;
    public final void rule__Atomic__Group_5__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6765:1: ( rule__Atomic__Group_5__2__Impl rule__Atomic__Group_5__3 )
            // InternalNabla.g:6766:2: rule__Atomic__Group_5__2__Impl rule__Atomic__Group_5__3
            {
            pushFollow(FOLLOW_17);
            rule__Atomic__Group_5__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_5__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_5__2"


    // $ANTLR start "rule__Atomic__Group_5__2__Impl"
    // InternalNabla.g:6773:1: rule__Atomic__Group_5__2__Impl : ( ( rule__Atomic__XAssignment_5_2 ) ) ;
    public final void rule__Atomic__Group_5__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6777:1: ( ( ( rule__Atomic__XAssignment_5_2 ) ) )
            // InternalNabla.g:6778:1: ( ( rule__Atomic__XAssignment_5_2 ) )
            {
            // InternalNabla.g:6778:1: ( ( rule__Atomic__XAssignment_5_2 ) )
            // InternalNabla.g:6779:2: ( rule__Atomic__XAssignment_5_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getXAssignment_5_2()); 
            }
            // InternalNabla.g:6780:2: ( rule__Atomic__XAssignment_5_2 )
            // InternalNabla.g:6780:3: rule__Atomic__XAssignment_5_2
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__XAssignment_5_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getXAssignment_5_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_5__2__Impl"


    // $ANTLR start "rule__Atomic__Group_5__3"
    // InternalNabla.g:6788:1: rule__Atomic__Group_5__3 : rule__Atomic__Group_5__3__Impl rule__Atomic__Group_5__4 ;
    public final void rule__Atomic__Group_5__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6792:1: ( rule__Atomic__Group_5__3__Impl rule__Atomic__Group_5__4 )
            // InternalNabla.g:6793:2: rule__Atomic__Group_5__3__Impl rule__Atomic__Group_5__4
            {
            pushFollow(FOLLOW_11);
            rule__Atomic__Group_5__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_5__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_5__3"


    // $ANTLR start "rule__Atomic__Group_5__3__Impl"
    // InternalNabla.g:6800:1: rule__Atomic__Group_5__3__Impl : ( ',' ) ;
    public final void rule__Atomic__Group_5__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6804:1: ( ( ',' ) )
            // InternalNabla.g:6805:1: ( ',' )
            {
            // InternalNabla.g:6805:1: ( ',' )
            // InternalNabla.g:6806:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getCommaKeyword_5_3()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getCommaKeyword_5_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_5__3__Impl"


    // $ANTLR start "rule__Atomic__Group_5__4"
    // InternalNabla.g:6815:1: rule__Atomic__Group_5__4 : rule__Atomic__Group_5__4__Impl rule__Atomic__Group_5__5 ;
    public final void rule__Atomic__Group_5__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6819:1: ( rule__Atomic__Group_5__4__Impl rule__Atomic__Group_5__5 )
            // InternalNabla.g:6820:2: rule__Atomic__Group_5__4__Impl rule__Atomic__Group_5__5
            {
            pushFollow(FOLLOW_18);
            rule__Atomic__Group_5__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_5__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_5__4"


    // $ANTLR start "rule__Atomic__Group_5__4__Impl"
    // InternalNabla.g:6827:1: rule__Atomic__Group_5__4__Impl : ( ( rule__Atomic__YAssignment_5_4 ) ) ;
    public final void rule__Atomic__Group_5__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6831:1: ( ( ( rule__Atomic__YAssignment_5_4 ) ) )
            // InternalNabla.g:6832:1: ( ( rule__Atomic__YAssignment_5_4 ) )
            {
            // InternalNabla.g:6832:1: ( ( rule__Atomic__YAssignment_5_4 ) )
            // InternalNabla.g:6833:2: ( rule__Atomic__YAssignment_5_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getYAssignment_5_4()); 
            }
            // InternalNabla.g:6834:2: ( rule__Atomic__YAssignment_5_4 )
            // InternalNabla.g:6834:3: rule__Atomic__YAssignment_5_4
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__YAssignment_5_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getYAssignment_5_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_5__4__Impl"


    // $ANTLR start "rule__Atomic__Group_5__5"
    // InternalNabla.g:6842:1: rule__Atomic__Group_5__5 : rule__Atomic__Group_5__5__Impl ;
    public final void rule__Atomic__Group_5__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6846:1: ( rule__Atomic__Group_5__5__Impl )
            // InternalNabla.g:6847:2: rule__Atomic__Group_5__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_5__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_5__5"


    // $ANTLR start "rule__Atomic__Group_5__5__Impl"
    // InternalNabla.g:6853:1: rule__Atomic__Group_5__5__Impl : ( '}' ) ;
    public final void rule__Atomic__Group_5__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6857:1: ( ( '}' ) )
            // InternalNabla.g:6858:1: ( '}' )
            {
            // InternalNabla.g:6858:1: ( '}' )
            // InternalNabla.g:6859:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getRightCurlyBracketKeyword_5_5()); 
            }
            match(input,37,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getRightCurlyBracketKeyword_5_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_5__5__Impl"


    // $ANTLR start "rule__Atomic__Group_6__0"
    // InternalNabla.g:6869:1: rule__Atomic__Group_6__0 : rule__Atomic__Group_6__0__Impl rule__Atomic__Group_6__1 ;
    public final void rule__Atomic__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6873:1: ( rule__Atomic__Group_6__0__Impl rule__Atomic__Group_6__1 )
            // InternalNabla.g:6874:2: rule__Atomic__Group_6__0__Impl rule__Atomic__Group_6__1
            {
            pushFollow(FOLLOW_11);
            rule__Atomic__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__0"


    // $ANTLR start "rule__Atomic__Group_6__0__Impl"
    // InternalNabla.g:6881:1: rule__Atomic__Group_6__0__Impl : ( () ) ;
    public final void rule__Atomic__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6885:1: ( ( () ) )
            // InternalNabla.g:6886:1: ( () )
            {
            // InternalNabla.g:6886:1: ( () )
            // InternalNabla.g:6887:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getReal3x3ConstantAction_6_0()); 
            }
            // InternalNabla.g:6888:2: ()
            // InternalNabla.g:6888:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getReal3x3ConstantAction_6_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__0__Impl"


    // $ANTLR start "rule__Atomic__Group_6__1"
    // InternalNabla.g:6896:1: rule__Atomic__Group_6__1 : rule__Atomic__Group_6__1__Impl rule__Atomic__Group_6__2 ;
    public final void rule__Atomic__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6900:1: ( rule__Atomic__Group_6__1__Impl rule__Atomic__Group_6__2 )
            // InternalNabla.g:6901:2: rule__Atomic__Group_6__1__Impl rule__Atomic__Group_6__2
            {
            pushFollow(FOLLOW_11);
            rule__Atomic__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_6__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__1"


    // $ANTLR start "rule__Atomic__Group_6__1__Impl"
    // InternalNabla.g:6908:1: rule__Atomic__Group_6__1__Impl : ( '{' ) ;
    public final void rule__Atomic__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6912:1: ( ( '{' ) )
            // InternalNabla.g:6913:1: ( '{' )
            {
            // InternalNabla.g:6913:1: ( '{' )
            // InternalNabla.g:6914:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getLeftCurlyBracketKeyword_6_1()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getLeftCurlyBracketKeyword_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__1__Impl"


    // $ANTLR start "rule__Atomic__Group_6__2"
    // InternalNabla.g:6923:1: rule__Atomic__Group_6__2 : rule__Atomic__Group_6__2__Impl rule__Atomic__Group_6__3 ;
    public final void rule__Atomic__Group_6__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6927:1: ( rule__Atomic__Group_6__2__Impl rule__Atomic__Group_6__3 )
            // InternalNabla.g:6928:2: rule__Atomic__Group_6__2__Impl rule__Atomic__Group_6__3
            {
            pushFollow(FOLLOW_17);
            rule__Atomic__Group_6__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_6__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__2"


    // $ANTLR start "rule__Atomic__Group_6__2__Impl"
    // InternalNabla.g:6935:1: rule__Atomic__Group_6__2__Impl : ( ( rule__Atomic__XAssignment_6_2 ) ) ;
    public final void rule__Atomic__Group_6__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6939:1: ( ( ( rule__Atomic__XAssignment_6_2 ) ) )
            // InternalNabla.g:6940:1: ( ( rule__Atomic__XAssignment_6_2 ) )
            {
            // InternalNabla.g:6940:1: ( ( rule__Atomic__XAssignment_6_2 ) )
            // InternalNabla.g:6941:2: ( rule__Atomic__XAssignment_6_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getXAssignment_6_2()); 
            }
            // InternalNabla.g:6942:2: ( rule__Atomic__XAssignment_6_2 )
            // InternalNabla.g:6942:3: rule__Atomic__XAssignment_6_2
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__XAssignment_6_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getXAssignment_6_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__2__Impl"


    // $ANTLR start "rule__Atomic__Group_6__3"
    // InternalNabla.g:6950:1: rule__Atomic__Group_6__3 : rule__Atomic__Group_6__3__Impl rule__Atomic__Group_6__4 ;
    public final void rule__Atomic__Group_6__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6954:1: ( rule__Atomic__Group_6__3__Impl rule__Atomic__Group_6__4 )
            // InternalNabla.g:6955:2: rule__Atomic__Group_6__3__Impl rule__Atomic__Group_6__4
            {
            pushFollow(FOLLOW_11);
            rule__Atomic__Group_6__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_6__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__3"


    // $ANTLR start "rule__Atomic__Group_6__3__Impl"
    // InternalNabla.g:6962:1: rule__Atomic__Group_6__3__Impl : ( ',' ) ;
    public final void rule__Atomic__Group_6__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6966:1: ( ( ',' ) )
            // InternalNabla.g:6967:1: ( ',' )
            {
            // InternalNabla.g:6967:1: ( ',' )
            // InternalNabla.g:6968:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getCommaKeyword_6_3()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getCommaKeyword_6_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__3__Impl"


    // $ANTLR start "rule__Atomic__Group_6__4"
    // InternalNabla.g:6977:1: rule__Atomic__Group_6__4 : rule__Atomic__Group_6__4__Impl rule__Atomic__Group_6__5 ;
    public final void rule__Atomic__Group_6__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6981:1: ( rule__Atomic__Group_6__4__Impl rule__Atomic__Group_6__5 )
            // InternalNabla.g:6982:2: rule__Atomic__Group_6__4__Impl rule__Atomic__Group_6__5
            {
            pushFollow(FOLLOW_17);
            rule__Atomic__Group_6__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_6__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__4"


    // $ANTLR start "rule__Atomic__Group_6__4__Impl"
    // InternalNabla.g:6989:1: rule__Atomic__Group_6__4__Impl : ( ( rule__Atomic__YAssignment_6_4 ) ) ;
    public final void rule__Atomic__Group_6__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:6993:1: ( ( ( rule__Atomic__YAssignment_6_4 ) ) )
            // InternalNabla.g:6994:1: ( ( rule__Atomic__YAssignment_6_4 ) )
            {
            // InternalNabla.g:6994:1: ( ( rule__Atomic__YAssignment_6_4 ) )
            // InternalNabla.g:6995:2: ( rule__Atomic__YAssignment_6_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getYAssignment_6_4()); 
            }
            // InternalNabla.g:6996:2: ( rule__Atomic__YAssignment_6_4 )
            // InternalNabla.g:6996:3: rule__Atomic__YAssignment_6_4
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__YAssignment_6_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getYAssignment_6_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__4__Impl"


    // $ANTLR start "rule__Atomic__Group_6__5"
    // InternalNabla.g:7004:1: rule__Atomic__Group_6__5 : rule__Atomic__Group_6__5__Impl rule__Atomic__Group_6__6 ;
    public final void rule__Atomic__Group_6__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7008:1: ( rule__Atomic__Group_6__5__Impl rule__Atomic__Group_6__6 )
            // InternalNabla.g:7009:2: rule__Atomic__Group_6__5__Impl rule__Atomic__Group_6__6
            {
            pushFollow(FOLLOW_11);
            rule__Atomic__Group_6__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_6__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__5"


    // $ANTLR start "rule__Atomic__Group_6__5__Impl"
    // InternalNabla.g:7016:1: rule__Atomic__Group_6__5__Impl : ( ',' ) ;
    public final void rule__Atomic__Group_6__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7020:1: ( ( ',' ) )
            // InternalNabla.g:7021:1: ( ',' )
            {
            // InternalNabla.g:7021:1: ( ',' )
            // InternalNabla.g:7022:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getCommaKeyword_6_5()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getCommaKeyword_6_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__5__Impl"


    // $ANTLR start "rule__Atomic__Group_6__6"
    // InternalNabla.g:7031:1: rule__Atomic__Group_6__6 : rule__Atomic__Group_6__6__Impl rule__Atomic__Group_6__7 ;
    public final void rule__Atomic__Group_6__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7035:1: ( rule__Atomic__Group_6__6__Impl rule__Atomic__Group_6__7 )
            // InternalNabla.g:7036:2: rule__Atomic__Group_6__6__Impl rule__Atomic__Group_6__7
            {
            pushFollow(FOLLOW_18);
            rule__Atomic__Group_6__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_6__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__6"


    // $ANTLR start "rule__Atomic__Group_6__6__Impl"
    // InternalNabla.g:7043:1: rule__Atomic__Group_6__6__Impl : ( ( rule__Atomic__ZAssignment_6_6 ) ) ;
    public final void rule__Atomic__Group_6__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7047:1: ( ( ( rule__Atomic__ZAssignment_6_6 ) ) )
            // InternalNabla.g:7048:1: ( ( rule__Atomic__ZAssignment_6_6 ) )
            {
            // InternalNabla.g:7048:1: ( ( rule__Atomic__ZAssignment_6_6 ) )
            // InternalNabla.g:7049:2: ( rule__Atomic__ZAssignment_6_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getZAssignment_6_6()); 
            }
            // InternalNabla.g:7050:2: ( rule__Atomic__ZAssignment_6_6 )
            // InternalNabla.g:7050:3: rule__Atomic__ZAssignment_6_6
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__ZAssignment_6_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getZAssignment_6_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__6__Impl"


    // $ANTLR start "rule__Atomic__Group_6__7"
    // InternalNabla.g:7058:1: rule__Atomic__Group_6__7 : rule__Atomic__Group_6__7__Impl ;
    public final void rule__Atomic__Group_6__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7062:1: ( rule__Atomic__Group_6__7__Impl )
            // InternalNabla.g:7063:2: rule__Atomic__Group_6__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_6__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__7"


    // $ANTLR start "rule__Atomic__Group_6__7__Impl"
    // InternalNabla.g:7069:1: rule__Atomic__Group_6__7__Impl : ( '}' ) ;
    public final void rule__Atomic__Group_6__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7073:1: ( ( '}' ) )
            // InternalNabla.g:7074:1: ( '}' )
            {
            // InternalNabla.g:7074:1: ( '}' )
            // InternalNabla.g:7075:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getRightCurlyBracketKeyword_6_7()); 
            }
            match(input,37,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getRightCurlyBracketKeyword_6_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_6__7__Impl"


    // $ANTLR start "rule__Atomic__Group_7__0"
    // InternalNabla.g:7085:1: rule__Atomic__Group_7__0 : rule__Atomic__Group_7__0__Impl rule__Atomic__Group_7__1 ;
    public final void rule__Atomic__Group_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7089:1: ( rule__Atomic__Group_7__0__Impl rule__Atomic__Group_7__1 )
            // InternalNabla.g:7090:2: rule__Atomic__Group_7__0__Impl rule__Atomic__Group_7__1
            {
            pushFollow(FOLLOW_30);
            rule__Atomic__Group_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_7__0"


    // $ANTLR start "rule__Atomic__Group_7__0__Impl"
    // InternalNabla.g:7097:1: rule__Atomic__Group_7__0__Impl : ( () ) ;
    public final void rule__Atomic__Group_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7101:1: ( ( () ) )
            // InternalNabla.g:7102:1: ( () )
            {
            // InternalNabla.g:7102:1: ( () )
            // InternalNabla.g:7103:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getRealXCompactConstantAction_7_0()); 
            }
            // InternalNabla.g:7104:2: ()
            // InternalNabla.g:7104:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getRealXCompactConstantAction_7_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_7__0__Impl"


    // $ANTLR start "rule__Atomic__Group_7__1"
    // InternalNabla.g:7112:1: rule__Atomic__Group_7__1 : rule__Atomic__Group_7__1__Impl rule__Atomic__Group_7__2 ;
    public final void rule__Atomic__Group_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7116:1: ( rule__Atomic__Group_7__1__Impl rule__Atomic__Group_7__2 )
            // InternalNabla.g:7117:2: rule__Atomic__Group_7__1__Impl rule__Atomic__Group_7__2
            {
            pushFollow(FOLLOW_22);
            rule__Atomic__Group_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_7__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_7__1"


    // $ANTLR start "rule__Atomic__Group_7__1__Impl"
    // InternalNabla.g:7124:1: rule__Atomic__Group_7__1__Impl : ( ( rule__Atomic__TypeAssignment_7_1 ) ) ;
    public final void rule__Atomic__Group_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7128:1: ( ( ( rule__Atomic__TypeAssignment_7_1 ) ) )
            // InternalNabla.g:7129:1: ( ( rule__Atomic__TypeAssignment_7_1 ) )
            {
            // InternalNabla.g:7129:1: ( ( rule__Atomic__TypeAssignment_7_1 ) )
            // InternalNabla.g:7130:2: ( rule__Atomic__TypeAssignment_7_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getTypeAssignment_7_1()); 
            }
            // InternalNabla.g:7131:2: ( rule__Atomic__TypeAssignment_7_1 )
            // InternalNabla.g:7131:3: rule__Atomic__TypeAssignment_7_1
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__TypeAssignment_7_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getTypeAssignment_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_7__1__Impl"


    // $ANTLR start "rule__Atomic__Group_7__2"
    // InternalNabla.g:7139:1: rule__Atomic__Group_7__2 : rule__Atomic__Group_7__2__Impl rule__Atomic__Group_7__3 ;
    public final void rule__Atomic__Group_7__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7143:1: ( rule__Atomic__Group_7__2__Impl rule__Atomic__Group_7__3 )
            // InternalNabla.g:7144:2: rule__Atomic__Group_7__2__Impl rule__Atomic__Group_7__3
            {
            pushFollow(FOLLOW_55);
            rule__Atomic__Group_7__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_7__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_7__2"


    // $ANTLR start "rule__Atomic__Group_7__2__Impl"
    // InternalNabla.g:7151:1: rule__Atomic__Group_7__2__Impl : ( '(' ) ;
    public final void rule__Atomic__Group_7__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7155:1: ( ( '(' ) )
            // InternalNabla.g:7156:1: ( '(' )
            {
            // InternalNabla.g:7156:1: ( '(' )
            // InternalNabla.g:7157:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_7_2()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_7_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_7__2__Impl"


    // $ANTLR start "rule__Atomic__Group_7__3"
    // InternalNabla.g:7166:1: rule__Atomic__Group_7__3 : rule__Atomic__Group_7__3__Impl rule__Atomic__Group_7__4 ;
    public final void rule__Atomic__Group_7__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7170:1: ( rule__Atomic__Group_7__3__Impl rule__Atomic__Group_7__4 )
            // InternalNabla.g:7171:2: rule__Atomic__Group_7__3__Impl rule__Atomic__Group_7__4
            {
            pushFollow(FOLLOW_23);
            rule__Atomic__Group_7__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_7__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_7__3"


    // $ANTLR start "rule__Atomic__Group_7__3__Impl"
    // InternalNabla.g:7178:1: rule__Atomic__Group_7__3__Impl : ( ( rule__Atomic__ValueAssignment_7_3 ) ) ;
    public final void rule__Atomic__Group_7__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7182:1: ( ( ( rule__Atomic__ValueAssignment_7_3 ) ) )
            // InternalNabla.g:7183:1: ( ( rule__Atomic__ValueAssignment_7_3 ) )
            {
            // InternalNabla.g:7183:1: ( ( rule__Atomic__ValueAssignment_7_3 ) )
            // InternalNabla.g:7184:2: ( rule__Atomic__ValueAssignment_7_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getValueAssignment_7_3()); 
            }
            // InternalNabla.g:7185:2: ( rule__Atomic__ValueAssignment_7_3 )
            // InternalNabla.g:7185:3: rule__Atomic__ValueAssignment_7_3
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__ValueAssignment_7_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getValueAssignment_7_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_7__3__Impl"


    // $ANTLR start "rule__Atomic__Group_7__4"
    // InternalNabla.g:7193:1: rule__Atomic__Group_7__4 : rule__Atomic__Group_7__4__Impl ;
    public final void rule__Atomic__Group_7__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7197:1: ( rule__Atomic__Group_7__4__Impl )
            // InternalNabla.g:7198:2: rule__Atomic__Group_7__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_7__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_7__4"


    // $ANTLR start "rule__Atomic__Group_7__4__Impl"
    // InternalNabla.g:7204:1: rule__Atomic__Group_7__4__Impl : ( ')' ) ;
    public final void rule__Atomic__Group_7__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7208:1: ( ( ')' ) )
            // InternalNabla.g:7209:1: ( ')' )
            {
            // InternalNabla.g:7209:1: ( ')' )
            // InternalNabla.g:7210:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getRightParenthesisKeyword_7_4()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getRightParenthesisKeyword_7_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_7__4__Impl"


    // $ANTLR start "rule__Atomic__Group_8__0"
    // InternalNabla.g:7220:1: rule__Atomic__Group_8__0 : rule__Atomic__Group_8__0__Impl rule__Atomic__Group_8__1 ;
    public final void rule__Atomic__Group_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7224:1: ( rule__Atomic__Group_8__0__Impl rule__Atomic__Group_8__1 )
            // InternalNabla.g:7225:2: rule__Atomic__Group_8__0__Impl rule__Atomic__Group_8__1
            {
            pushFollow(FOLLOW_30);
            rule__Atomic__Group_8__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_8__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_8__0"


    // $ANTLR start "rule__Atomic__Group_8__0__Impl"
    // InternalNabla.g:7232:1: rule__Atomic__Group_8__0__Impl : ( () ) ;
    public final void rule__Atomic__Group_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7236:1: ( ( () ) )
            // InternalNabla.g:7237:1: ( () )
            {
            // InternalNabla.g:7237:1: ( () )
            // InternalNabla.g:7238:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getMinConstantAction_8_0()); 
            }
            // InternalNabla.g:7239:2: ()
            // InternalNabla.g:7239:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getMinConstantAction_8_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_8__0__Impl"


    // $ANTLR start "rule__Atomic__Group_8__1"
    // InternalNabla.g:7247:1: rule__Atomic__Group_8__1 : rule__Atomic__Group_8__1__Impl rule__Atomic__Group_8__2 ;
    public final void rule__Atomic__Group_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7251:1: ( rule__Atomic__Group_8__1__Impl rule__Atomic__Group_8__2 )
            // InternalNabla.g:7252:2: rule__Atomic__Group_8__1__Impl rule__Atomic__Group_8__2
            {
            pushFollow(FOLLOW_57);
            rule__Atomic__Group_8__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_8__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_8__1"


    // $ANTLR start "rule__Atomic__Group_8__1__Impl"
    // InternalNabla.g:7259:1: rule__Atomic__Group_8__1__Impl : ( ( rule__Atomic__TypeAssignment_8_1 ) ) ;
    public final void rule__Atomic__Group_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7263:1: ( ( ( rule__Atomic__TypeAssignment_8_1 ) ) )
            // InternalNabla.g:7264:1: ( ( rule__Atomic__TypeAssignment_8_1 ) )
            {
            // InternalNabla.g:7264:1: ( ( rule__Atomic__TypeAssignment_8_1 ) )
            // InternalNabla.g:7265:2: ( rule__Atomic__TypeAssignment_8_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getTypeAssignment_8_1()); 
            }
            // InternalNabla.g:7266:2: ( rule__Atomic__TypeAssignment_8_1 )
            // InternalNabla.g:7266:3: rule__Atomic__TypeAssignment_8_1
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__TypeAssignment_8_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getTypeAssignment_8_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_8__1__Impl"


    // $ANTLR start "rule__Atomic__Group_8__2"
    // InternalNabla.g:7274:1: rule__Atomic__Group_8__2 : rule__Atomic__Group_8__2__Impl ;
    public final void rule__Atomic__Group_8__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7278:1: ( rule__Atomic__Group_8__2__Impl )
            // InternalNabla.g:7279:2: rule__Atomic__Group_8__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_8__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_8__2"


    // $ANTLR start "rule__Atomic__Group_8__2__Impl"
    // InternalNabla.g:7285:1: rule__Atomic__Group_8__2__Impl : ( '.MinValue' ) ;
    public final void rule__Atomic__Group_8__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7289:1: ( ( '.MinValue' ) )
            // InternalNabla.g:7290:1: ( '.MinValue' )
            {
            // InternalNabla.g:7290:1: ( '.MinValue' )
            // InternalNabla.g:7291:2: '.MinValue'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getMinValueKeyword_8_2()); 
            }
            match(input,53,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getMinValueKeyword_8_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_8__2__Impl"


    // $ANTLR start "rule__Atomic__Group_9__0"
    // InternalNabla.g:7301:1: rule__Atomic__Group_9__0 : rule__Atomic__Group_9__0__Impl rule__Atomic__Group_9__1 ;
    public final void rule__Atomic__Group_9__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7305:1: ( rule__Atomic__Group_9__0__Impl rule__Atomic__Group_9__1 )
            // InternalNabla.g:7306:2: rule__Atomic__Group_9__0__Impl rule__Atomic__Group_9__1
            {
            pushFollow(FOLLOW_30);
            rule__Atomic__Group_9__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_9__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_9__0"


    // $ANTLR start "rule__Atomic__Group_9__0__Impl"
    // InternalNabla.g:7313:1: rule__Atomic__Group_9__0__Impl : ( () ) ;
    public final void rule__Atomic__Group_9__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7317:1: ( ( () ) )
            // InternalNabla.g:7318:1: ( () )
            {
            // InternalNabla.g:7318:1: ( () )
            // InternalNabla.g:7319:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getMaxConstantAction_9_0()); 
            }
            // InternalNabla.g:7320:2: ()
            // InternalNabla.g:7320:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getMaxConstantAction_9_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_9__0__Impl"


    // $ANTLR start "rule__Atomic__Group_9__1"
    // InternalNabla.g:7328:1: rule__Atomic__Group_9__1 : rule__Atomic__Group_9__1__Impl rule__Atomic__Group_9__2 ;
    public final void rule__Atomic__Group_9__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7332:1: ( rule__Atomic__Group_9__1__Impl rule__Atomic__Group_9__2 )
            // InternalNabla.g:7333:2: rule__Atomic__Group_9__1__Impl rule__Atomic__Group_9__2
            {
            pushFollow(FOLLOW_58);
            rule__Atomic__Group_9__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_9__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_9__1"


    // $ANTLR start "rule__Atomic__Group_9__1__Impl"
    // InternalNabla.g:7340:1: rule__Atomic__Group_9__1__Impl : ( ( rule__Atomic__TypeAssignment_9_1 ) ) ;
    public final void rule__Atomic__Group_9__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7344:1: ( ( ( rule__Atomic__TypeAssignment_9_1 ) ) )
            // InternalNabla.g:7345:1: ( ( rule__Atomic__TypeAssignment_9_1 ) )
            {
            // InternalNabla.g:7345:1: ( ( rule__Atomic__TypeAssignment_9_1 ) )
            // InternalNabla.g:7346:2: ( rule__Atomic__TypeAssignment_9_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getTypeAssignment_9_1()); 
            }
            // InternalNabla.g:7347:2: ( rule__Atomic__TypeAssignment_9_1 )
            // InternalNabla.g:7347:3: rule__Atomic__TypeAssignment_9_1
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__TypeAssignment_9_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getTypeAssignment_9_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_9__1__Impl"


    // $ANTLR start "rule__Atomic__Group_9__2"
    // InternalNabla.g:7355:1: rule__Atomic__Group_9__2 : rule__Atomic__Group_9__2__Impl ;
    public final void rule__Atomic__Group_9__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7359:1: ( rule__Atomic__Group_9__2__Impl )
            // InternalNabla.g:7360:2: rule__Atomic__Group_9__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_9__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_9__2"


    // $ANTLR start "rule__Atomic__Group_9__2__Impl"
    // InternalNabla.g:7366:1: rule__Atomic__Group_9__2__Impl : ( '.MaxValue' ) ;
    public final void rule__Atomic__Group_9__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7370:1: ( ( '.MaxValue' ) )
            // InternalNabla.g:7371:1: ( '.MaxValue' )
            {
            // InternalNabla.g:7371:1: ( '.MaxValue' )
            // InternalNabla.g:7372:2: '.MaxValue'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getMaxValueKeyword_9_2()); 
            }
            match(input,54,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getMaxValueKeyword_9_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_9__2__Impl"


    // $ANTLR start "rule__Atomic__Group_10__0"
    // InternalNabla.g:7382:1: rule__Atomic__Group_10__0 : rule__Atomic__Group_10__0__Impl rule__Atomic__Group_10__1 ;
    public final void rule__Atomic__Group_10__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7386:1: ( rule__Atomic__Group_10__0__Impl rule__Atomic__Group_10__1 )
            // InternalNabla.g:7387:2: rule__Atomic__Group_10__0__Impl rule__Atomic__Group_10__1
            {
            pushFollow(FOLLOW_3);
            rule__Atomic__Group_10__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_10__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10__0"


    // $ANTLR start "rule__Atomic__Group_10__0__Impl"
    // InternalNabla.g:7394:1: rule__Atomic__Group_10__0__Impl : ( () ) ;
    public final void rule__Atomic__Group_10__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7398:1: ( ( () ) )
            // InternalNabla.g:7399:1: ( () )
            {
            // InternalNabla.g:7399:1: ( () )
            // InternalNabla.g:7400:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getFunctionCallAction_10_0()); 
            }
            // InternalNabla.g:7401:2: ()
            // InternalNabla.g:7401:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getFunctionCallAction_10_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10__0__Impl"


    // $ANTLR start "rule__Atomic__Group_10__1"
    // InternalNabla.g:7409:1: rule__Atomic__Group_10__1 : rule__Atomic__Group_10__1__Impl rule__Atomic__Group_10__2 ;
    public final void rule__Atomic__Group_10__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7413:1: ( rule__Atomic__Group_10__1__Impl rule__Atomic__Group_10__2 )
            // InternalNabla.g:7414:2: rule__Atomic__Group_10__1__Impl rule__Atomic__Group_10__2
            {
            pushFollow(FOLLOW_22);
            rule__Atomic__Group_10__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_10__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10__1"


    // $ANTLR start "rule__Atomic__Group_10__1__Impl"
    // InternalNabla.g:7421:1: rule__Atomic__Group_10__1__Impl : ( ( rule__Atomic__FunctionAssignment_10_1 ) ) ;
    public final void rule__Atomic__Group_10__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7425:1: ( ( ( rule__Atomic__FunctionAssignment_10_1 ) ) )
            // InternalNabla.g:7426:1: ( ( rule__Atomic__FunctionAssignment_10_1 ) )
            {
            // InternalNabla.g:7426:1: ( ( rule__Atomic__FunctionAssignment_10_1 ) )
            // InternalNabla.g:7427:2: ( rule__Atomic__FunctionAssignment_10_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getFunctionAssignment_10_1()); 
            }
            // InternalNabla.g:7428:2: ( rule__Atomic__FunctionAssignment_10_1 )
            // InternalNabla.g:7428:3: rule__Atomic__FunctionAssignment_10_1
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__FunctionAssignment_10_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getFunctionAssignment_10_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10__1__Impl"


    // $ANTLR start "rule__Atomic__Group_10__2"
    // InternalNabla.g:7436:1: rule__Atomic__Group_10__2 : rule__Atomic__Group_10__2__Impl rule__Atomic__Group_10__3 ;
    public final void rule__Atomic__Group_10__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7440:1: ( rule__Atomic__Group_10__2__Impl rule__Atomic__Group_10__3 )
            // InternalNabla.g:7441:2: rule__Atomic__Group_10__2__Impl rule__Atomic__Group_10__3
            {
            pushFollow(FOLLOW_59);
            rule__Atomic__Group_10__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_10__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10__2"


    // $ANTLR start "rule__Atomic__Group_10__2__Impl"
    // InternalNabla.g:7448:1: rule__Atomic__Group_10__2__Impl : ( '(' ) ;
    public final void rule__Atomic__Group_10__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7452:1: ( ( '(' ) )
            // InternalNabla.g:7453:1: ( '(' )
            {
            // InternalNabla.g:7453:1: ( '(' )
            // InternalNabla.g:7454:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_10_2()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_10_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10__2__Impl"


    // $ANTLR start "rule__Atomic__Group_10__3"
    // InternalNabla.g:7463:1: rule__Atomic__Group_10__3 : rule__Atomic__Group_10__3__Impl rule__Atomic__Group_10__4 ;
    public final void rule__Atomic__Group_10__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7467:1: ( rule__Atomic__Group_10__3__Impl rule__Atomic__Group_10__4 )
            // InternalNabla.g:7468:2: rule__Atomic__Group_10__3__Impl rule__Atomic__Group_10__4
            {
            pushFollow(FOLLOW_59);
            rule__Atomic__Group_10__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_10__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10__3"


    // $ANTLR start "rule__Atomic__Group_10__3__Impl"
    // InternalNabla.g:7475:1: rule__Atomic__Group_10__3__Impl : ( ( rule__Atomic__Group_10_3__0 )? ) ;
    public final void rule__Atomic__Group_10__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7479:1: ( ( ( rule__Atomic__Group_10_3__0 )? ) )
            // InternalNabla.g:7480:1: ( ( rule__Atomic__Group_10_3__0 )? )
            {
            // InternalNabla.g:7480:1: ( ( rule__Atomic__Group_10_3__0 )? )
            // InternalNabla.g:7481:2: ( rule__Atomic__Group_10_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getGroup_10_3()); 
            }
            // InternalNabla.g:7482:2: ( rule__Atomic__Group_10_3__0 )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( ((LA46_0>=RULE_ID && LA46_0<=RULE_REAL)||(LA46_0>=21 && LA46_0<=28)||LA46_0==36||LA46_0==44||(LA46_0>=51 && LA46_0<=52)||LA46_0==64) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalNabla.g:7482:3: rule__Atomic__Group_10_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Atomic__Group_10_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getGroup_10_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10__3__Impl"


    // $ANTLR start "rule__Atomic__Group_10__4"
    // InternalNabla.g:7490:1: rule__Atomic__Group_10__4 : rule__Atomic__Group_10__4__Impl ;
    public final void rule__Atomic__Group_10__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7494:1: ( rule__Atomic__Group_10__4__Impl )
            // InternalNabla.g:7495:2: rule__Atomic__Group_10__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_10__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10__4"


    // $ANTLR start "rule__Atomic__Group_10__4__Impl"
    // InternalNabla.g:7501:1: rule__Atomic__Group_10__4__Impl : ( ')' ) ;
    public final void rule__Atomic__Group_10__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7505:1: ( ( ')' ) )
            // InternalNabla.g:7506:1: ( ')' )
            {
            // InternalNabla.g:7506:1: ( ')' )
            // InternalNabla.g:7507:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getRightParenthesisKeyword_10_4()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getRightParenthesisKeyword_10_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10__4__Impl"


    // $ANTLR start "rule__Atomic__Group_10_3__0"
    // InternalNabla.g:7517:1: rule__Atomic__Group_10_3__0 : rule__Atomic__Group_10_3__0__Impl rule__Atomic__Group_10_3__1 ;
    public final void rule__Atomic__Group_10_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7521:1: ( rule__Atomic__Group_10_3__0__Impl rule__Atomic__Group_10_3__1 )
            // InternalNabla.g:7522:2: rule__Atomic__Group_10_3__0__Impl rule__Atomic__Group_10_3__1
            {
            pushFollow(FOLLOW_17);
            rule__Atomic__Group_10_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_10_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10_3__0"


    // $ANTLR start "rule__Atomic__Group_10_3__0__Impl"
    // InternalNabla.g:7529:1: rule__Atomic__Group_10_3__0__Impl : ( ( rule__Atomic__ArgsAssignment_10_3_0 ) ) ;
    public final void rule__Atomic__Group_10_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7533:1: ( ( ( rule__Atomic__ArgsAssignment_10_3_0 ) ) )
            // InternalNabla.g:7534:1: ( ( rule__Atomic__ArgsAssignment_10_3_0 ) )
            {
            // InternalNabla.g:7534:1: ( ( rule__Atomic__ArgsAssignment_10_3_0 ) )
            // InternalNabla.g:7535:2: ( rule__Atomic__ArgsAssignment_10_3_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getArgsAssignment_10_3_0()); 
            }
            // InternalNabla.g:7536:2: ( rule__Atomic__ArgsAssignment_10_3_0 )
            // InternalNabla.g:7536:3: rule__Atomic__ArgsAssignment_10_3_0
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__ArgsAssignment_10_3_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getArgsAssignment_10_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10_3__0__Impl"


    // $ANTLR start "rule__Atomic__Group_10_3__1"
    // InternalNabla.g:7544:1: rule__Atomic__Group_10_3__1 : rule__Atomic__Group_10_3__1__Impl ;
    public final void rule__Atomic__Group_10_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7548:1: ( rule__Atomic__Group_10_3__1__Impl )
            // InternalNabla.g:7549:2: rule__Atomic__Group_10_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_10_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10_3__1"


    // $ANTLR start "rule__Atomic__Group_10_3__1__Impl"
    // InternalNabla.g:7555:1: rule__Atomic__Group_10_3__1__Impl : ( ( rule__Atomic__Group_10_3_1__0 )* ) ;
    public final void rule__Atomic__Group_10_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7559:1: ( ( ( rule__Atomic__Group_10_3_1__0 )* ) )
            // InternalNabla.g:7560:1: ( ( rule__Atomic__Group_10_3_1__0 )* )
            {
            // InternalNabla.g:7560:1: ( ( rule__Atomic__Group_10_3_1__0 )* )
            // InternalNabla.g:7561:2: ( rule__Atomic__Group_10_3_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getGroup_10_3_1()); 
            }
            // InternalNabla.g:7562:2: ( rule__Atomic__Group_10_3_1__0 )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==41) ) {
                    alt47=1;
                }


                switch (alt47) {
            	case 1 :
            	    // InternalNabla.g:7562:3: rule__Atomic__Group_10_3_1__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__Atomic__Group_10_3_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getGroup_10_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10_3__1__Impl"


    // $ANTLR start "rule__Atomic__Group_10_3_1__0"
    // InternalNabla.g:7571:1: rule__Atomic__Group_10_3_1__0 : rule__Atomic__Group_10_3_1__0__Impl rule__Atomic__Group_10_3_1__1 ;
    public final void rule__Atomic__Group_10_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7575:1: ( rule__Atomic__Group_10_3_1__0__Impl rule__Atomic__Group_10_3_1__1 )
            // InternalNabla.g:7576:2: rule__Atomic__Group_10_3_1__0__Impl rule__Atomic__Group_10_3_1__1
            {
            pushFollow(FOLLOW_21);
            rule__Atomic__Group_10_3_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_10_3_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10_3_1__0"


    // $ANTLR start "rule__Atomic__Group_10_3_1__0__Impl"
    // InternalNabla.g:7583:1: rule__Atomic__Group_10_3_1__0__Impl : ( ',' ) ;
    public final void rule__Atomic__Group_10_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7587:1: ( ( ',' ) )
            // InternalNabla.g:7588:1: ( ',' )
            {
            // InternalNabla.g:7588:1: ( ',' )
            // InternalNabla.g:7589:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getCommaKeyword_10_3_1_0()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getCommaKeyword_10_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10_3_1__0__Impl"


    // $ANTLR start "rule__Atomic__Group_10_3_1__1"
    // InternalNabla.g:7598:1: rule__Atomic__Group_10_3_1__1 : rule__Atomic__Group_10_3_1__1__Impl ;
    public final void rule__Atomic__Group_10_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7602:1: ( rule__Atomic__Group_10_3_1__1__Impl )
            // InternalNabla.g:7603:2: rule__Atomic__Group_10_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_10_3_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10_3_1__1"


    // $ANTLR start "rule__Atomic__Group_10_3_1__1__Impl"
    // InternalNabla.g:7609:1: rule__Atomic__Group_10_3_1__1__Impl : ( ( rule__Atomic__ArgsAssignment_10_3_1_1 ) ) ;
    public final void rule__Atomic__Group_10_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7613:1: ( ( ( rule__Atomic__ArgsAssignment_10_3_1_1 ) ) )
            // InternalNabla.g:7614:1: ( ( rule__Atomic__ArgsAssignment_10_3_1_1 ) )
            {
            // InternalNabla.g:7614:1: ( ( rule__Atomic__ArgsAssignment_10_3_1_1 ) )
            // InternalNabla.g:7615:2: ( rule__Atomic__ArgsAssignment_10_3_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getArgsAssignment_10_3_1_1()); 
            }
            // InternalNabla.g:7616:2: ( rule__Atomic__ArgsAssignment_10_3_1_1 )
            // InternalNabla.g:7616:3: rule__Atomic__ArgsAssignment_10_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__ArgsAssignment_10_3_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getArgsAssignment_10_3_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_10_3_1__1__Impl"


    // $ANTLR start "rule__Atomic__Group_11__0"
    // InternalNabla.g:7625:1: rule__Atomic__Group_11__0 : rule__Atomic__Group_11__0__Impl rule__Atomic__Group_11__1 ;
    public final void rule__Atomic__Group_11__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7629:1: ( rule__Atomic__Group_11__0__Impl rule__Atomic__Group_11__1 )
            // InternalNabla.g:7630:2: rule__Atomic__Group_11__0__Impl rule__Atomic__Group_11__1
            {
            pushFollow(FOLLOW_3);
            rule__Atomic__Group_11__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_11__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__0"


    // $ANTLR start "rule__Atomic__Group_11__0__Impl"
    // InternalNabla.g:7637:1: rule__Atomic__Group_11__0__Impl : ( () ) ;
    public final void rule__Atomic__Group_11__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7641:1: ( ( () ) )
            // InternalNabla.g:7642:1: ( () )
            {
            // InternalNabla.g:7642:1: ( () )
            // InternalNabla.g:7643:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getReductionCallAction_11_0()); 
            }
            // InternalNabla.g:7644:2: ()
            // InternalNabla.g:7644:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getReductionCallAction_11_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__0__Impl"


    // $ANTLR start "rule__Atomic__Group_11__1"
    // InternalNabla.g:7652:1: rule__Atomic__Group_11__1 : rule__Atomic__Group_11__1__Impl rule__Atomic__Group_11__2 ;
    public final void rule__Atomic__Group_11__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7656:1: ( rule__Atomic__Group_11__1__Impl rule__Atomic__Group_11__2 )
            // InternalNabla.g:7657:2: rule__Atomic__Group_11__1__Impl rule__Atomic__Group_11__2
            {
            pushFollow(FOLLOW_11);
            rule__Atomic__Group_11__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_11__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__1"


    // $ANTLR start "rule__Atomic__Group_11__1__Impl"
    // InternalNabla.g:7664:1: rule__Atomic__Group_11__1__Impl : ( ( rule__Atomic__ReductionAssignment_11_1 ) ) ;
    public final void rule__Atomic__Group_11__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7668:1: ( ( ( rule__Atomic__ReductionAssignment_11_1 ) ) )
            // InternalNabla.g:7669:1: ( ( rule__Atomic__ReductionAssignment_11_1 ) )
            {
            // InternalNabla.g:7669:1: ( ( rule__Atomic__ReductionAssignment_11_1 ) )
            // InternalNabla.g:7670:2: ( rule__Atomic__ReductionAssignment_11_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getReductionAssignment_11_1()); 
            }
            // InternalNabla.g:7671:2: ( rule__Atomic__ReductionAssignment_11_1 )
            // InternalNabla.g:7671:3: rule__Atomic__ReductionAssignment_11_1
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__ReductionAssignment_11_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getReductionAssignment_11_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__1__Impl"


    // $ANTLR start "rule__Atomic__Group_11__2"
    // InternalNabla.g:7679:1: rule__Atomic__Group_11__2 : rule__Atomic__Group_11__2__Impl rule__Atomic__Group_11__3 ;
    public final void rule__Atomic__Group_11__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7683:1: ( rule__Atomic__Group_11__2__Impl rule__Atomic__Group_11__3 )
            // InternalNabla.g:7684:2: rule__Atomic__Group_11__2__Impl rule__Atomic__Group_11__3
            {
            pushFollow(FOLLOW_3);
            rule__Atomic__Group_11__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_11__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__2"


    // $ANTLR start "rule__Atomic__Group_11__2__Impl"
    // InternalNabla.g:7691:1: rule__Atomic__Group_11__2__Impl : ( '{' ) ;
    public final void rule__Atomic__Group_11__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7695:1: ( ( '{' ) )
            // InternalNabla.g:7696:1: ( '{' )
            {
            // InternalNabla.g:7696:1: ( '{' )
            // InternalNabla.g:7697:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getLeftCurlyBracketKeyword_11_2()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getLeftCurlyBracketKeyword_11_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__2__Impl"


    // $ANTLR start "rule__Atomic__Group_11__3"
    // InternalNabla.g:7706:1: rule__Atomic__Group_11__3 : rule__Atomic__Group_11__3__Impl rule__Atomic__Group_11__4 ;
    public final void rule__Atomic__Group_11__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7710:1: ( rule__Atomic__Group_11__3__Impl rule__Atomic__Group_11__4 )
            // InternalNabla.g:7711:2: rule__Atomic__Group_11__3__Impl rule__Atomic__Group_11__4
            {
            pushFollow(FOLLOW_18);
            rule__Atomic__Group_11__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_11__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__3"


    // $ANTLR start "rule__Atomic__Group_11__3__Impl"
    // InternalNabla.g:7718:1: rule__Atomic__Group_11__3__Impl : ( ( rule__Atomic__IteratorAssignment_11_3 ) ) ;
    public final void rule__Atomic__Group_11__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7722:1: ( ( ( rule__Atomic__IteratorAssignment_11_3 ) ) )
            // InternalNabla.g:7723:1: ( ( rule__Atomic__IteratorAssignment_11_3 ) )
            {
            // InternalNabla.g:7723:1: ( ( rule__Atomic__IteratorAssignment_11_3 ) )
            // InternalNabla.g:7724:2: ( rule__Atomic__IteratorAssignment_11_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getIteratorAssignment_11_3()); 
            }
            // InternalNabla.g:7725:2: ( rule__Atomic__IteratorAssignment_11_3 )
            // InternalNabla.g:7725:3: rule__Atomic__IteratorAssignment_11_3
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__IteratorAssignment_11_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getIteratorAssignment_11_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__3__Impl"


    // $ANTLR start "rule__Atomic__Group_11__4"
    // InternalNabla.g:7733:1: rule__Atomic__Group_11__4 : rule__Atomic__Group_11__4__Impl rule__Atomic__Group_11__5 ;
    public final void rule__Atomic__Group_11__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7737:1: ( rule__Atomic__Group_11__4__Impl rule__Atomic__Group_11__5 )
            // InternalNabla.g:7738:2: rule__Atomic__Group_11__4__Impl rule__Atomic__Group_11__5
            {
            pushFollow(FOLLOW_22);
            rule__Atomic__Group_11__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_11__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__4"


    // $ANTLR start "rule__Atomic__Group_11__4__Impl"
    // InternalNabla.g:7745:1: rule__Atomic__Group_11__4__Impl : ( '}' ) ;
    public final void rule__Atomic__Group_11__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7749:1: ( ( '}' ) )
            // InternalNabla.g:7750:1: ( '}' )
            {
            // InternalNabla.g:7750:1: ( '}' )
            // InternalNabla.g:7751:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getRightCurlyBracketKeyword_11_4()); 
            }
            match(input,37,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getRightCurlyBracketKeyword_11_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__4__Impl"


    // $ANTLR start "rule__Atomic__Group_11__5"
    // InternalNabla.g:7760:1: rule__Atomic__Group_11__5 : rule__Atomic__Group_11__5__Impl rule__Atomic__Group_11__6 ;
    public final void rule__Atomic__Group_11__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7764:1: ( rule__Atomic__Group_11__5__Impl rule__Atomic__Group_11__6 )
            // InternalNabla.g:7765:2: rule__Atomic__Group_11__5__Impl rule__Atomic__Group_11__6
            {
            pushFollow(FOLLOW_21);
            rule__Atomic__Group_11__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_11__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__5"


    // $ANTLR start "rule__Atomic__Group_11__5__Impl"
    // InternalNabla.g:7772:1: rule__Atomic__Group_11__5__Impl : ( '(' ) ;
    public final void rule__Atomic__Group_11__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7776:1: ( ( '(' ) )
            // InternalNabla.g:7777:1: ( '(' )
            {
            // InternalNabla.g:7777:1: ( '(' )
            // InternalNabla.g:7778:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_11_5()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_11_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__5__Impl"


    // $ANTLR start "rule__Atomic__Group_11__6"
    // InternalNabla.g:7787:1: rule__Atomic__Group_11__6 : rule__Atomic__Group_11__6__Impl rule__Atomic__Group_11__7 ;
    public final void rule__Atomic__Group_11__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7791:1: ( rule__Atomic__Group_11__6__Impl rule__Atomic__Group_11__7 )
            // InternalNabla.g:7792:2: rule__Atomic__Group_11__6__Impl rule__Atomic__Group_11__7
            {
            pushFollow(FOLLOW_23);
            rule__Atomic__Group_11__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_11__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__6"


    // $ANTLR start "rule__Atomic__Group_11__6__Impl"
    // InternalNabla.g:7799:1: rule__Atomic__Group_11__6__Impl : ( ( rule__Atomic__ArgAssignment_11_6 ) ) ;
    public final void rule__Atomic__Group_11__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7803:1: ( ( ( rule__Atomic__ArgAssignment_11_6 ) ) )
            // InternalNabla.g:7804:1: ( ( rule__Atomic__ArgAssignment_11_6 ) )
            {
            // InternalNabla.g:7804:1: ( ( rule__Atomic__ArgAssignment_11_6 ) )
            // InternalNabla.g:7805:2: ( rule__Atomic__ArgAssignment_11_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getArgAssignment_11_6()); 
            }
            // InternalNabla.g:7806:2: ( rule__Atomic__ArgAssignment_11_6 )
            // InternalNabla.g:7806:3: rule__Atomic__ArgAssignment_11_6
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__ArgAssignment_11_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getArgAssignment_11_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__6__Impl"


    // $ANTLR start "rule__Atomic__Group_11__7"
    // InternalNabla.g:7814:1: rule__Atomic__Group_11__7 : rule__Atomic__Group_11__7__Impl ;
    public final void rule__Atomic__Group_11__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7818:1: ( rule__Atomic__Group_11__7__Impl )
            // InternalNabla.g:7819:2: rule__Atomic__Group_11__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_11__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__7"


    // $ANTLR start "rule__Atomic__Group_11__7__Impl"
    // InternalNabla.g:7825:1: rule__Atomic__Group_11__7__Impl : ( ')' ) ;
    public final void rule__Atomic__Group_11__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7829:1: ( ( ')' ) )
            // InternalNabla.g:7830:1: ( ')' )
            {
            // InternalNabla.g:7830:1: ( ')' )
            // InternalNabla.g:7831:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getRightParenthesisKeyword_11_7()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getRightParenthesisKeyword_11_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_11__7__Impl"


    // $ANTLR start "rule__Real2Constant__Group__0"
    // InternalNabla.g:7841:1: rule__Real2Constant__Group__0 : rule__Real2Constant__Group__0__Impl rule__Real2Constant__Group__1 ;
    public final void rule__Real2Constant__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7845:1: ( rule__Real2Constant__Group__0__Impl rule__Real2Constant__Group__1 )
            // InternalNabla.g:7846:2: rule__Real2Constant__Group__0__Impl rule__Real2Constant__Group__1
            {
            pushFollow(FOLLOW_55);
            rule__Real2Constant__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Real2Constant__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real2Constant__Group__0"


    // $ANTLR start "rule__Real2Constant__Group__0__Impl"
    // InternalNabla.g:7853:1: rule__Real2Constant__Group__0__Impl : ( '{' ) ;
    public final void rule__Real2Constant__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7857:1: ( ( '{' ) )
            // InternalNabla.g:7858:1: ( '{' )
            {
            // InternalNabla.g:7858:1: ( '{' )
            // InternalNabla.g:7859:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal2ConstantAccess().getLeftCurlyBracketKeyword_0()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal2ConstantAccess().getLeftCurlyBracketKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real2Constant__Group__0__Impl"


    // $ANTLR start "rule__Real2Constant__Group__1"
    // InternalNabla.g:7868:1: rule__Real2Constant__Group__1 : rule__Real2Constant__Group__1__Impl rule__Real2Constant__Group__2 ;
    public final void rule__Real2Constant__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7872:1: ( rule__Real2Constant__Group__1__Impl rule__Real2Constant__Group__2 )
            // InternalNabla.g:7873:2: rule__Real2Constant__Group__1__Impl rule__Real2Constant__Group__2
            {
            pushFollow(FOLLOW_17);
            rule__Real2Constant__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Real2Constant__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real2Constant__Group__1"


    // $ANTLR start "rule__Real2Constant__Group__1__Impl"
    // InternalNabla.g:7880:1: rule__Real2Constant__Group__1__Impl : ( ( rule__Real2Constant__XAssignment_1 ) ) ;
    public final void rule__Real2Constant__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7884:1: ( ( ( rule__Real2Constant__XAssignment_1 ) ) )
            // InternalNabla.g:7885:1: ( ( rule__Real2Constant__XAssignment_1 ) )
            {
            // InternalNabla.g:7885:1: ( ( rule__Real2Constant__XAssignment_1 ) )
            // InternalNabla.g:7886:2: ( rule__Real2Constant__XAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal2ConstantAccess().getXAssignment_1()); 
            }
            // InternalNabla.g:7887:2: ( rule__Real2Constant__XAssignment_1 )
            // InternalNabla.g:7887:3: rule__Real2Constant__XAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Real2Constant__XAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal2ConstantAccess().getXAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real2Constant__Group__1__Impl"


    // $ANTLR start "rule__Real2Constant__Group__2"
    // InternalNabla.g:7895:1: rule__Real2Constant__Group__2 : rule__Real2Constant__Group__2__Impl rule__Real2Constant__Group__3 ;
    public final void rule__Real2Constant__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7899:1: ( rule__Real2Constant__Group__2__Impl rule__Real2Constant__Group__3 )
            // InternalNabla.g:7900:2: rule__Real2Constant__Group__2__Impl rule__Real2Constant__Group__3
            {
            pushFollow(FOLLOW_55);
            rule__Real2Constant__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Real2Constant__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real2Constant__Group__2"


    // $ANTLR start "rule__Real2Constant__Group__2__Impl"
    // InternalNabla.g:7907:1: rule__Real2Constant__Group__2__Impl : ( ',' ) ;
    public final void rule__Real2Constant__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7911:1: ( ( ',' ) )
            // InternalNabla.g:7912:1: ( ',' )
            {
            // InternalNabla.g:7912:1: ( ',' )
            // InternalNabla.g:7913:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal2ConstantAccess().getCommaKeyword_2()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal2ConstantAccess().getCommaKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real2Constant__Group__2__Impl"


    // $ANTLR start "rule__Real2Constant__Group__3"
    // InternalNabla.g:7922:1: rule__Real2Constant__Group__3 : rule__Real2Constant__Group__3__Impl rule__Real2Constant__Group__4 ;
    public final void rule__Real2Constant__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7926:1: ( rule__Real2Constant__Group__3__Impl rule__Real2Constant__Group__4 )
            // InternalNabla.g:7927:2: rule__Real2Constant__Group__3__Impl rule__Real2Constant__Group__4
            {
            pushFollow(FOLLOW_18);
            rule__Real2Constant__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Real2Constant__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real2Constant__Group__3"


    // $ANTLR start "rule__Real2Constant__Group__3__Impl"
    // InternalNabla.g:7934:1: rule__Real2Constant__Group__3__Impl : ( ( rule__Real2Constant__YAssignment_3 ) ) ;
    public final void rule__Real2Constant__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7938:1: ( ( ( rule__Real2Constant__YAssignment_3 ) ) )
            // InternalNabla.g:7939:1: ( ( rule__Real2Constant__YAssignment_3 ) )
            {
            // InternalNabla.g:7939:1: ( ( rule__Real2Constant__YAssignment_3 ) )
            // InternalNabla.g:7940:2: ( rule__Real2Constant__YAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal2ConstantAccess().getYAssignment_3()); 
            }
            // InternalNabla.g:7941:2: ( rule__Real2Constant__YAssignment_3 )
            // InternalNabla.g:7941:3: rule__Real2Constant__YAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Real2Constant__YAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal2ConstantAccess().getYAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real2Constant__Group__3__Impl"


    // $ANTLR start "rule__Real2Constant__Group__4"
    // InternalNabla.g:7949:1: rule__Real2Constant__Group__4 : rule__Real2Constant__Group__4__Impl ;
    public final void rule__Real2Constant__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7953:1: ( rule__Real2Constant__Group__4__Impl )
            // InternalNabla.g:7954:2: rule__Real2Constant__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Real2Constant__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real2Constant__Group__4"


    // $ANTLR start "rule__Real2Constant__Group__4__Impl"
    // InternalNabla.g:7960:1: rule__Real2Constant__Group__4__Impl : ( '}' ) ;
    public final void rule__Real2Constant__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7964:1: ( ( '}' ) )
            // InternalNabla.g:7965:1: ( '}' )
            {
            // InternalNabla.g:7965:1: ( '}' )
            // InternalNabla.g:7966:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal2ConstantAccess().getRightCurlyBracketKeyword_4()); 
            }
            match(input,37,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal2ConstantAccess().getRightCurlyBracketKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real2Constant__Group__4__Impl"


    // $ANTLR start "rule__Real3Constant__Group__0"
    // InternalNabla.g:7976:1: rule__Real3Constant__Group__0 : rule__Real3Constant__Group__0__Impl rule__Real3Constant__Group__1 ;
    public final void rule__Real3Constant__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7980:1: ( rule__Real3Constant__Group__0__Impl rule__Real3Constant__Group__1 )
            // InternalNabla.g:7981:2: rule__Real3Constant__Group__0__Impl rule__Real3Constant__Group__1
            {
            pushFollow(FOLLOW_55);
            rule__Real3Constant__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Real3Constant__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__Group__0"


    // $ANTLR start "rule__Real3Constant__Group__0__Impl"
    // InternalNabla.g:7988:1: rule__Real3Constant__Group__0__Impl : ( '{' ) ;
    public final void rule__Real3Constant__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:7992:1: ( ( '{' ) )
            // InternalNabla.g:7993:1: ( '{' )
            {
            // InternalNabla.g:7993:1: ( '{' )
            // InternalNabla.g:7994:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal3ConstantAccess().getLeftCurlyBracketKeyword_0()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal3ConstantAccess().getLeftCurlyBracketKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__Group__0__Impl"


    // $ANTLR start "rule__Real3Constant__Group__1"
    // InternalNabla.g:8003:1: rule__Real3Constant__Group__1 : rule__Real3Constant__Group__1__Impl rule__Real3Constant__Group__2 ;
    public final void rule__Real3Constant__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8007:1: ( rule__Real3Constant__Group__1__Impl rule__Real3Constant__Group__2 )
            // InternalNabla.g:8008:2: rule__Real3Constant__Group__1__Impl rule__Real3Constant__Group__2
            {
            pushFollow(FOLLOW_17);
            rule__Real3Constant__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Real3Constant__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__Group__1"


    // $ANTLR start "rule__Real3Constant__Group__1__Impl"
    // InternalNabla.g:8015:1: rule__Real3Constant__Group__1__Impl : ( ( rule__Real3Constant__XAssignment_1 ) ) ;
    public final void rule__Real3Constant__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8019:1: ( ( ( rule__Real3Constant__XAssignment_1 ) ) )
            // InternalNabla.g:8020:1: ( ( rule__Real3Constant__XAssignment_1 ) )
            {
            // InternalNabla.g:8020:1: ( ( rule__Real3Constant__XAssignment_1 ) )
            // InternalNabla.g:8021:2: ( rule__Real3Constant__XAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal3ConstantAccess().getXAssignment_1()); 
            }
            // InternalNabla.g:8022:2: ( rule__Real3Constant__XAssignment_1 )
            // InternalNabla.g:8022:3: rule__Real3Constant__XAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Real3Constant__XAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal3ConstantAccess().getXAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__Group__1__Impl"


    // $ANTLR start "rule__Real3Constant__Group__2"
    // InternalNabla.g:8030:1: rule__Real3Constant__Group__2 : rule__Real3Constant__Group__2__Impl rule__Real3Constant__Group__3 ;
    public final void rule__Real3Constant__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8034:1: ( rule__Real3Constant__Group__2__Impl rule__Real3Constant__Group__3 )
            // InternalNabla.g:8035:2: rule__Real3Constant__Group__2__Impl rule__Real3Constant__Group__3
            {
            pushFollow(FOLLOW_55);
            rule__Real3Constant__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Real3Constant__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__Group__2"


    // $ANTLR start "rule__Real3Constant__Group__2__Impl"
    // InternalNabla.g:8042:1: rule__Real3Constant__Group__2__Impl : ( ',' ) ;
    public final void rule__Real3Constant__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8046:1: ( ( ',' ) )
            // InternalNabla.g:8047:1: ( ',' )
            {
            // InternalNabla.g:8047:1: ( ',' )
            // InternalNabla.g:8048:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal3ConstantAccess().getCommaKeyword_2()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal3ConstantAccess().getCommaKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__Group__2__Impl"


    // $ANTLR start "rule__Real3Constant__Group__3"
    // InternalNabla.g:8057:1: rule__Real3Constant__Group__3 : rule__Real3Constant__Group__3__Impl rule__Real3Constant__Group__4 ;
    public final void rule__Real3Constant__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8061:1: ( rule__Real3Constant__Group__3__Impl rule__Real3Constant__Group__4 )
            // InternalNabla.g:8062:2: rule__Real3Constant__Group__3__Impl rule__Real3Constant__Group__4
            {
            pushFollow(FOLLOW_17);
            rule__Real3Constant__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Real3Constant__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__Group__3"


    // $ANTLR start "rule__Real3Constant__Group__3__Impl"
    // InternalNabla.g:8069:1: rule__Real3Constant__Group__3__Impl : ( ( rule__Real3Constant__YAssignment_3 ) ) ;
    public final void rule__Real3Constant__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8073:1: ( ( ( rule__Real3Constant__YAssignment_3 ) ) )
            // InternalNabla.g:8074:1: ( ( rule__Real3Constant__YAssignment_3 ) )
            {
            // InternalNabla.g:8074:1: ( ( rule__Real3Constant__YAssignment_3 ) )
            // InternalNabla.g:8075:2: ( rule__Real3Constant__YAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal3ConstantAccess().getYAssignment_3()); 
            }
            // InternalNabla.g:8076:2: ( rule__Real3Constant__YAssignment_3 )
            // InternalNabla.g:8076:3: rule__Real3Constant__YAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Real3Constant__YAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal3ConstantAccess().getYAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__Group__3__Impl"


    // $ANTLR start "rule__Real3Constant__Group__4"
    // InternalNabla.g:8084:1: rule__Real3Constant__Group__4 : rule__Real3Constant__Group__4__Impl rule__Real3Constant__Group__5 ;
    public final void rule__Real3Constant__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8088:1: ( rule__Real3Constant__Group__4__Impl rule__Real3Constant__Group__5 )
            // InternalNabla.g:8089:2: rule__Real3Constant__Group__4__Impl rule__Real3Constant__Group__5
            {
            pushFollow(FOLLOW_55);
            rule__Real3Constant__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Real3Constant__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__Group__4"


    // $ANTLR start "rule__Real3Constant__Group__4__Impl"
    // InternalNabla.g:8096:1: rule__Real3Constant__Group__4__Impl : ( ',' ) ;
    public final void rule__Real3Constant__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8100:1: ( ( ',' ) )
            // InternalNabla.g:8101:1: ( ',' )
            {
            // InternalNabla.g:8101:1: ( ',' )
            // InternalNabla.g:8102:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal3ConstantAccess().getCommaKeyword_4()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal3ConstantAccess().getCommaKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__Group__4__Impl"


    // $ANTLR start "rule__Real3Constant__Group__5"
    // InternalNabla.g:8111:1: rule__Real3Constant__Group__5 : rule__Real3Constant__Group__5__Impl rule__Real3Constant__Group__6 ;
    public final void rule__Real3Constant__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8115:1: ( rule__Real3Constant__Group__5__Impl rule__Real3Constant__Group__6 )
            // InternalNabla.g:8116:2: rule__Real3Constant__Group__5__Impl rule__Real3Constant__Group__6
            {
            pushFollow(FOLLOW_18);
            rule__Real3Constant__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Real3Constant__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__Group__5"


    // $ANTLR start "rule__Real3Constant__Group__5__Impl"
    // InternalNabla.g:8123:1: rule__Real3Constant__Group__5__Impl : ( ( rule__Real3Constant__ZAssignment_5 ) ) ;
    public final void rule__Real3Constant__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8127:1: ( ( ( rule__Real3Constant__ZAssignment_5 ) ) )
            // InternalNabla.g:8128:1: ( ( rule__Real3Constant__ZAssignment_5 ) )
            {
            // InternalNabla.g:8128:1: ( ( rule__Real3Constant__ZAssignment_5 ) )
            // InternalNabla.g:8129:2: ( rule__Real3Constant__ZAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal3ConstantAccess().getZAssignment_5()); 
            }
            // InternalNabla.g:8130:2: ( rule__Real3Constant__ZAssignment_5 )
            // InternalNabla.g:8130:3: rule__Real3Constant__ZAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__Real3Constant__ZAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal3ConstantAccess().getZAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__Group__5__Impl"


    // $ANTLR start "rule__Real3Constant__Group__6"
    // InternalNabla.g:8138:1: rule__Real3Constant__Group__6 : rule__Real3Constant__Group__6__Impl ;
    public final void rule__Real3Constant__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8142:1: ( rule__Real3Constant__Group__6__Impl )
            // InternalNabla.g:8143:2: rule__Real3Constant__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Real3Constant__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__Group__6"


    // $ANTLR start "rule__Real3Constant__Group__6__Impl"
    // InternalNabla.g:8149:1: rule__Real3Constant__Group__6__Impl : ( '}' ) ;
    public final void rule__Real3Constant__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8153:1: ( ( '}' ) )
            // InternalNabla.g:8154:1: ( '}' )
            {
            // InternalNabla.g:8154:1: ( '}' )
            // InternalNabla.g:8155:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal3ConstantAccess().getRightCurlyBracketKeyword_6()); 
            }
            match(input,37,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal3ConstantAccess().getRightCurlyBracketKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__Group__6__Impl"


    // $ANTLR start "rule__VarRef__Group__0"
    // InternalNabla.g:8165:1: rule__VarRef__Group__0 : rule__VarRef__Group__0__Impl rule__VarRef__Group__1 ;
    public final void rule__VarRef__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8169:1: ( rule__VarRef__Group__0__Impl rule__VarRef__Group__1 )
            // InternalNabla.g:8170:2: rule__VarRef__Group__0__Impl rule__VarRef__Group__1
            {
            pushFollow(FOLLOW_60);
            rule__VarRef__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarRef__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group__0"


    // $ANTLR start "rule__VarRef__Group__0__Impl"
    // InternalNabla.g:8177:1: rule__VarRef__Group__0__Impl : ( ( rule__VarRef__VariableAssignment_0 ) ) ;
    public final void rule__VarRef__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8181:1: ( ( ( rule__VarRef__VariableAssignment_0 ) ) )
            // InternalNabla.g:8182:1: ( ( rule__VarRef__VariableAssignment_0 ) )
            {
            // InternalNabla.g:8182:1: ( ( rule__VarRef__VariableAssignment_0 ) )
            // InternalNabla.g:8183:2: ( rule__VarRef__VariableAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getVariableAssignment_0()); 
            }
            // InternalNabla.g:8184:2: ( rule__VarRef__VariableAssignment_0 )
            // InternalNabla.g:8184:3: rule__VarRef__VariableAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__VarRef__VariableAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getVariableAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group__0__Impl"


    // $ANTLR start "rule__VarRef__Group__1"
    // InternalNabla.g:8192:1: rule__VarRef__Group__1 : rule__VarRef__Group__1__Impl rule__VarRef__Group__2 ;
    public final void rule__VarRef__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8196:1: ( rule__VarRef__Group__1__Impl rule__VarRef__Group__2 )
            // InternalNabla.g:8197:2: rule__VarRef__Group__1__Impl rule__VarRef__Group__2
            {
            pushFollow(FOLLOW_60);
            rule__VarRef__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarRef__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group__1"


    // $ANTLR start "rule__VarRef__Group__1__Impl"
    // InternalNabla.g:8204:1: rule__VarRef__Group__1__Impl : ( ( rule__VarRef__Group_1__0 )? ) ;
    public final void rule__VarRef__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8208:1: ( ( ( rule__VarRef__Group_1__0 )? ) )
            // InternalNabla.g:8209:1: ( ( rule__VarRef__Group_1__0 )? )
            {
            // InternalNabla.g:8209:1: ( ( rule__VarRef__Group_1__0 )? )
            // InternalNabla.g:8210:2: ( rule__VarRef__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getGroup_1()); 
            }
            // InternalNabla.g:8211:2: ( rule__VarRef__Group_1__0 )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==36) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalNabla.g:8211:3: rule__VarRef__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarRef__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group__1__Impl"


    // $ANTLR start "rule__VarRef__Group__2"
    // InternalNabla.g:8219:1: rule__VarRef__Group__2 : rule__VarRef__Group__2__Impl rule__VarRef__Group__3 ;
    public final void rule__VarRef__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8223:1: ( rule__VarRef__Group__2__Impl rule__VarRef__Group__3 )
            // InternalNabla.g:8224:2: rule__VarRef__Group__2__Impl rule__VarRef__Group__3
            {
            pushFollow(FOLLOW_60);
            rule__VarRef__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarRef__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group__2"


    // $ANTLR start "rule__VarRef__Group__2__Impl"
    // InternalNabla.g:8231:1: rule__VarRef__Group__2__Impl : ( ( rule__VarRef__Group_2__0 )? ) ;
    public final void rule__VarRef__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8235:1: ( ( ( rule__VarRef__Group_2__0 )? ) )
            // InternalNabla.g:8236:1: ( ( rule__VarRef__Group_2__0 )? )
            {
            // InternalNabla.g:8236:1: ( ( rule__VarRef__Group_2__0 )? )
            // InternalNabla.g:8237:2: ( rule__VarRef__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getGroup_2()); 
            }
            // InternalNabla.g:8238:2: ( rule__VarRef__Group_2__0 )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==55) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalNabla.g:8238:3: rule__VarRef__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarRef__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group__2__Impl"


    // $ANTLR start "rule__VarRef__Group__3"
    // InternalNabla.g:8246:1: rule__VarRef__Group__3 : rule__VarRef__Group__3__Impl ;
    public final void rule__VarRef__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8250:1: ( rule__VarRef__Group__3__Impl )
            // InternalNabla.g:8251:2: rule__VarRef__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarRef__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group__3"


    // $ANTLR start "rule__VarRef__Group__3__Impl"
    // InternalNabla.g:8257:1: rule__VarRef__Group__3__Impl : ( ( rule__VarRef__Group_3__0 )* ) ;
    public final void rule__VarRef__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8261:1: ( ( ( rule__VarRef__Group_3__0 )* ) )
            // InternalNabla.g:8262:1: ( ( rule__VarRef__Group_3__0 )* )
            {
            // InternalNabla.g:8262:1: ( ( rule__VarRef__Group_3__0 )* )
            // InternalNabla.g:8263:2: ( rule__VarRef__Group_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getGroup_3()); 
            }
            // InternalNabla.g:8264:2: ( rule__VarRef__Group_3__0 )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==56) ) {
                    alt50=1;
                }


                switch (alt50) {
            	case 1 :
            	    // InternalNabla.g:8264:3: rule__VarRef__Group_3__0
            	    {
            	    pushFollow(FOLLOW_61);
            	    rule__VarRef__Group_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group__3__Impl"


    // $ANTLR start "rule__VarRef__Group_1__0"
    // InternalNabla.g:8273:1: rule__VarRef__Group_1__0 : rule__VarRef__Group_1__0__Impl rule__VarRef__Group_1__1 ;
    public final void rule__VarRef__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8277:1: ( rule__VarRef__Group_1__0__Impl rule__VarRef__Group_1__1 )
            // InternalNabla.g:8278:2: rule__VarRef__Group_1__0__Impl rule__VarRef__Group_1__1
            {
            pushFollow(FOLLOW_29);
            rule__VarRef__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarRef__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_1__0"


    // $ANTLR start "rule__VarRef__Group_1__0__Impl"
    // InternalNabla.g:8285:1: rule__VarRef__Group_1__0__Impl : ( '{' ) ;
    public final void rule__VarRef__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8289:1: ( ( '{' ) )
            // InternalNabla.g:8290:1: ( '{' )
            {
            // InternalNabla.g:8290:1: ( '{' )
            // InternalNabla.g:8291:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getLeftCurlyBracketKeyword_1_0()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getLeftCurlyBracketKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_1__0__Impl"


    // $ANTLR start "rule__VarRef__Group_1__1"
    // InternalNabla.g:8300:1: rule__VarRef__Group_1__1 : rule__VarRef__Group_1__1__Impl rule__VarRef__Group_1__2 ;
    public final void rule__VarRef__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8304:1: ( rule__VarRef__Group_1__1__Impl rule__VarRef__Group_1__2 )
            // InternalNabla.g:8305:2: rule__VarRef__Group_1__1__Impl rule__VarRef__Group_1__2
            {
            pushFollow(FOLLOW_62);
            rule__VarRef__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarRef__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_1__1"


    // $ANTLR start "rule__VarRef__Group_1__1__Impl"
    // InternalNabla.g:8312:1: rule__VarRef__Group_1__1__Impl : ( ( rule__VarRef__SpaceIteratorsAssignment_1_1 ) ) ;
    public final void rule__VarRef__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8316:1: ( ( ( rule__VarRef__SpaceIteratorsAssignment_1_1 ) ) )
            // InternalNabla.g:8317:1: ( ( rule__VarRef__SpaceIteratorsAssignment_1_1 ) )
            {
            // InternalNabla.g:8317:1: ( ( rule__VarRef__SpaceIteratorsAssignment_1_1 ) )
            // InternalNabla.g:8318:2: ( rule__VarRef__SpaceIteratorsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getSpaceIteratorsAssignment_1_1()); 
            }
            // InternalNabla.g:8319:2: ( rule__VarRef__SpaceIteratorsAssignment_1_1 )
            // InternalNabla.g:8319:3: rule__VarRef__SpaceIteratorsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__VarRef__SpaceIteratorsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getSpaceIteratorsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_1__1__Impl"


    // $ANTLR start "rule__VarRef__Group_1__2"
    // InternalNabla.g:8327:1: rule__VarRef__Group_1__2 : rule__VarRef__Group_1__2__Impl rule__VarRef__Group_1__3 ;
    public final void rule__VarRef__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8331:1: ( rule__VarRef__Group_1__2__Impl rule__VarRef__Group_1__3 )
            // InternalNabla.g:8332:2: rule__VarRef__Group_1__2__Impl rule__VarRef__Group_1__3
            {
            pushFollow(FOLLOW_62);
            rule__VarRef__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarRef__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_1__2"


    // $ANTLR start "rule__VarRef__Group_1__2__Impl"
    // InternalNabla.g:8339:1: rule__VarRef__Group_1__2__Impl : ( ( rule__VarRef__Group_1_2__0 )* ) ;
    public final void rule__VarRef__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8343:1: ( ( ( rule__VarRef__Group_1_2__0 )* ) )
            // InternalNabla.g:8344:1: ( ( rule__VarRef__Group_1_2__0 )* )
            {
            // InternalNabla.g:8344:1: ( ( rule__VarRef__Group_1_2__0 )* )
            // InternalNabla.g:8345:2: ( rule__VarRef__Group_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getGroup_1_2()); 
            }
            // InternalNabla.g:8346:2: ( rule__VarRef__Group_1_2__0 )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==41) ) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalNabla.g:8346:3: rule__VarRef__Group_1_2__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__VarRef__Group_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_1__2__Impl"


    // $ANTLR start "rule__VarRef__Group_1__3"
    // InternalNabla.g:8354:1: rule__VarRef__Group_1__3 : rule__VarRef__Group_1__3__Impl ;
    public final void rule__VarRef__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8358:1: ( rule__VarRef__Group_1__3__Impl )
            // InternalNabla.g:8359:2: rule__VarRef__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarRef__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_1__3"


    // $ANTLR start "rule__VarRef__Group_1__3__Impl"
    // InternalNabla.g:8365:1: rule__VarRef__Group_1__3__Impl : ( '}' ) ;
    public final void rule__VarRef__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8369:1: ( ( '}' ) )
            // InternalNabla.g:8370:1: ( '}' )
            {
            // InternalNabla.g:8370:1: ( '}' )
            // InternalNabla.g:8371:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getRightCurlyBracketKeyword_1_3()); 
            }
            match(input,37,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getRightCurlyBracketKeyword_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_1__3__Impl"


    // $ANTLR start "rule__VarRef__Group_1_2__0"
    // InternalNabla.g:8381:1: rule__VarRef__Group_1_2__0 : rule__VarRef__Group_1_2__0__Impl rule__VarRef__Group_1_2__1 ;
    public final void rule__VarRef__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8385:1: ( rule__VarRef__Group_1_2__0__Impl rule__VarRef__Group_1_2__1 )
            // InternalNabla.g:8386:2: rule__VarRef__Group_1_2__0__Impl rule__VarRef__Group_1_2__1
            {
            pushFollow(FOLLOW_29);
            rule__VarRef__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarRef__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_1_2__0"


    // $ANTLR start "rule__VarRef__Group_1_2__0__Impl"
    // InternalNabla.g:8393:1: rule__VarRef__Group_1_2__0__Impl : ( ',' ) ;
    public final void rule__VarRef__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8397:1: ( ( ',' ) )
            // InternalNabla.g:8398:1: ( ',' )
            {
            // InternalNabla.g:8398:1: ( ',' )
            // InternalNabla.g:8399:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getCommaKeyword_1_2_0()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getCommaKeyword_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_1_2__0__Impl"


    // $ANTLR start "rule__VarRef__Group_1_2__1"
    // InternalNabla.g:8408:1: rule__VarRef__Group_1_2__1 : rule__VarRef__Group_1_2__1__Impl ;
    public final void rule__VarRef__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8412:1: ( rule__VarRef__Group_1_2__1__Impl )
            // InternalNabla.g:8413:2: rule__VarRef__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarRef__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_1_2__1"


    // $ANTLR start "rule__VarRef__Group_1_2__1__Impl"
    // InternalNabla.g:8419:1: rule__VarRef__Group_1_2__1__Impl : ( ( rule__VarRef__SpaceIteratorsAssignment_1_2_1 ) ) ;
    public final void rule__VarRef__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8423:1: ( ( ( rule__VarRef__SpaceIteratorsAssignment_1_2_1 ) ) )
            // InternalNabla.g:8424:1: ( ( rule__VarRef__SpaceIteratorsAssignment_1_2_1 ) )
            {
            // InternalNabla.g:8424:1: ( ( rule__VarRef__SpaceIteratorsAssignment_1_2_1 ) )
            // InternalNabla.g:8425:2: ( rule__VarRef__SpaceIteratorsAssignment_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getSpaceIteratorsAssignment_1_2_1()); 
            }
            // InternalNabla.g:8426:2: ( rule__VarRef__SpaceIteratorsAssignment_1_2_1 )
            // InternalNabla.g:8426:3: rule__VarRef__SpaceIteratorsAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__VarRef__SpaceIteratorsAssignment_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getSpaceIteratorsAssignment_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_1_2__1__Impl"


    // $ANTLR start "rule__VarRef__Group_2__0"
    // InternalNabla.g:8435:1: rule__VarRef__Group_2__0 : rule__VarRef__Group_2__0__Impl rule__VarRef__Group_2__1 ;
    public final void rule__VarRef__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8439:1: ( rule__VarRef__Group_2__0__Impl rule__VarRef__Group_2__1 )
            // InternalNabla.g:8440:2: rule__VarRef__Group_2__0__Impl rule__VarRef__Group_2__1
            {
            pushFollow(FOLLOW_3);
            rule__VarRef__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarRef__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_2__0"


    // $ANTLR start "rule__VarRef__Group_2__0__Impl"
    // InternalNabla.g:8447:1: rule__VarRef__Group_2__0__Impl : ( '^{' ) ;
    public final void rule__VarRef__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8451:1: ( ( '^{' ) )
            // InternalNabla.g:8452:1: ( '^{' )
            {
            // InternalNabla.g:8452:1: ( '^{' )
            // InternalNabla.g:8453:2: '^{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getCircumflexAccentLeftCurlyBracketKeyword_2_0()); 
            }
            match(input,55,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getCircumflexAccentLeftCurlyBracketKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_2__0__Impl"


    // $ANTLR start "rule__VarRef__Group_2__1"
    // InternalNabla.g:8462:1: rule__VarRef__Group_2__1 : rule__VarRef__Group_2__1__Impl rule__VarRef__Group_2__2 ;
    public final void rule__VarRef__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8466:1: ( rule__VarRef__Group_2__1__Impl rule__VarRef__Group_2__2 )
            // InternalNabla.g:8467:2: rule__VarRef__Group_2__1__Impl rule__VarRef__Group_2__2
            {
            pushFollow(FOLLOW_18);
            rule__VarRef__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarRef__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_2__1"


    // $ANTLR start "rule__VarRef__Group_2__1__Impl"
    // InternalNabla.g:8474:1: rule__VarRef__Group_2__1__Impl : ( ( rule__VarRef__TimeIteratorAssignment_2_1 ) ) ;
    public final void rule__VarRef__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8478:1: ( ( ( rule__VarRef__TimeIteratorAssignment_2_1 ) ) )
            // InternalNabla.g:8479:1: ( ( rule__VarRef__TimeIteratorAssignment_2_1 ) )
            {
            // InternalNabla.g:8479:1: ( ( rule__VarRef__TimeIteratorAssignment_2_1 ) )
            // InternalNabla.g:8480:2: ( rule__VarRef__TimeIteratorAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getTimeIteratorAssignment_2_1()); 
            }
            // InternalNabla.g:8481:2: ( rule__VarRef__TimeIteratorAssignment_2_1 )
            // InternalNabla.g:8481:3: rule__VarRef__TimeIteratorAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__VarRef__TimeIteratorAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getTimeIteratorAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_2__1__Impl"


    // $ANTLR start "rule__VarRef__Group_2__2"
    // InternalNabla.g:8489:1: rule__VarRef__Group_2__2 : rule__VarRef__Group_2__2__Impl ;
    public final void rule__VarRef__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8493:1: ( rule__VarRef__Group_2__2__Impl )
            // InternalNabla.g:8494:2: rule__VarRef__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarRef__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_2__2"


    // $ANTLR start "rule__VarRef__Group_2__2__Impl"
    // InternalNabla.g:8500:1: rule__VarRef__Group_2__2__Impl : ( '}' ) ;
    public final void rule__VarRef__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8504:1: ( ( '}' ) )
            // InternalNabla.g:8505:1: ( '}' )
            {
            // InternalNabla.g:8505:1: ( '}' )
            // InternalNabla.g:8506:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getRightCurlyBracketKeyword_2_2()); 
            }
            match(input,37,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getRightCurlyBracketKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_2__2__Impl"


    // $ANTLR start "rule__VarRef__Group_3__0"
    // InternalNabla.g:8516:1: rule__VarRef__Group_3__0 : rule__VarRef__Group_3__0__Impl rule__VarRef__Group_3__1 ;
    public final void rule__VarRef__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8520:1: ( rule__VarRef__Group_3__0__Impl rule__VarRef__Group_3__1 )
            // InternalNabla.g:8521:2: rule__VarRef__Group_3__0__Impl rule__VarRef__Group_3__1
            {
            pushFollow(FOLLOW_3);
            rule__VarRef__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarRef__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_3__0"


    // $ANTLR start "rule__VarRef__Group_3__0__Impl"
    // InternalNabla.g:8528:1: rule__VarRef__Group_3__0__Impl : ( '.' ) ;
    public final void rule__VarRef__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8532:1: ( ( '.' ) )
            // InternalNabla.g:8533:1: ( '.' )
            {
            // InternalNabla.g:8533:1: ( '.' )
            // InternalNabla.g:8534:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getFullStopKeyword_3_0()); 
            }
            match(input,56,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getFullStopKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_3__0__Impl"


    // $ANTLR start "rule__VarRef__Group_3__1"
    // InternalNabla.g:8543:1: rule__VarRef__Group_3__1 : rule__VarRef__Group_3__1__Impl ;
    public final void rule__VarRef__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8547:1: ( rule__VarRef__Group_3__1__Impl )
            // InternalNabla.g:8548:2: rule__VarRef__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarRef__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_3__1"


    // $ANTLR start "rule__VarRef__Group_3__1__Impl"
    // InternalNabla.g:8554:1: rule__VarRef__Group_3__1__Impl : ( ( rule__VarRef__FieldsAssignment_3_1 ) ) ;
    public final void rule__VarRef__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8558:1: ( ( ( rule__VarRef__FieldsAssignment_3_1 ) ) )
            // InternalNabla.g:8559:1: ( ( rule__VarRef__FieldsAssignment_3_1 ) )
            {
            // InternalNabla.g:8559:1: ( ( rule__VarRef__FieldsAssignment_3_1 ) )
            // InternalNabla.g:8560:2: ( rule__VarRef__FieldsAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getFieldsAssignment_3_1()); 
            }
            // InternalNabla.g:8561:2: ( rule__VarRef__FieldsAssignment_3_1 )
            // InternalNabla.g:8561:3: rule__VarRef__FieldsAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__VarRef__FieldsAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getFieldsAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__Group_3__1__Impl"


    // $ANTLR start "rule__TimeIteratorRef__Group__0"
    // InternalNabla.g:8570:1: rule__TimeIteratorRef__Group__0 : rule__TimeIteratorRef__Group__0__Impl rule__TimeIteratorRef__Group__1 ;
    public final void rule__TimeIteratorRef__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8574:1: ( rule__TimeIteratorRef__Group__0__Impl rule__TimeIteratorRef__Group__1 )
            // InternalNabla.g:8575:2: rule__TimeIteratorRef__Group__0__Impl rule__TimeIteratorRef__Group__1
            {
            pushFollow(FOLLOW_63);
            rule__TimeIteratorRef__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeIteratorRef__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIteratorRef__Group__0"


    // $ANTLR start "rule__TimeIteratorRef__Group__0__Impl"
    // InternalNabla.g:8582:1: rule__TimeIteratorRef__Group__0__Impl : ( ( rule__TimeIteratorRef__IteratorAssignment_0 ) ) ;
    public final void rule__TimeIteratorRef__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8586:1: ( ( ( rule__TimeIteratorRef__IteratorAssignment_0 ) ) )
            // InternalNabla.g:8587:1: ( ( rule__TimeIteratorRef__IteratorAssignment_0 ) )
            {
            // InternalNabla.g:8587:1: ( ( rule__TimeIteratorRef__IteratorAssignment_0 ) )
            // InternalNabla.g:8588:2: ( rule__TimeIteratorRef__IteratorAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorRefAccess().getIteratorAssignment_0()); 
            }
            // InternalNabla.g:8589:2: ( rule__TimeIteratorRef__IteratorAssignment_0 )
            // InternalNabla.g:8589:3: rule__TimeIteratorRef__IteratorAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__TimeIteratorRef__IteratorAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorRefAccess().getIteratorAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIteratorRef__Group__0__Impl"


    // $ANTLR start "rule__TimeIteratorRef__Group__1"
    // InternalNabla.g:8597:1: rule__TimeIteratorRef__Group__1 : rule__TimeIteratorRef__Group__1__Impl ;
    public final void rule__TimeIteratorRef__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8601:1: ( rule__TimeIteratorRef__Group__1__Impl )
            // InternalNabla.g:8602:2: rule__TimeIteratorRef__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TimeIteratorRef__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIteratorRef__Group__1"


    // $ANTLR start "rule__TimeIteratorRef__Group__1__Impl"
    // InternalNabla.g:8608:1: rule__TimeIteratorRef__Group__1__Impl : ( ( rule__TimeIteratorRef__Group_1__0 )? ) ;
    public final void rule__TimeIteratorRef__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8612:1: ( ( ( rule__TimeIteratorRef__Group_1__0 )? ) )
            // InternalNabla.g:8613:1: ( ( rule__TimeIteratorRef__Group_1__0 )? )
            {
            // InternalNabla.g:8613:1: ( ( rule__TimeIteratorRef__Group_1__0 )? )
            // InternalNabla.g:8614:2: ( rule__TimeIteratorRef__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorRefAccess().getGroup_1()); 
            }
            // InternalNabla.g:8615:2: ( rule__TimeIteratorRef__Group_1__0 )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==42||LA52_0==63) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalNabla.g:8615:3: rule__TimeIteratorRef__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TimeIteratorRef__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorRefAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIteratorRef__Group__1__Impl"


    // $ANTLR start "rule__TimeIteratorRef__Group_1__0"
    // InternalNabla.g:8624:1: rule__TimeIteratorRef__Group_1__0 : rule__TimeIteratorRef__Group_1__0__Impl rule__TimeIteratorRef__Group_1__1 ;
    public final void rule__TimeIteratorRef__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8628:1: ( rule__TimeIteratorRef__Group_1__0__Impl rule__TimeIteratorRef__Group_1__1 )
            // InternalNabla.g:8629:2: rule__TimeIteratorRef__Group_1__0__Impl rule__TimeIteratorRef__Group_1__1
            {
            pushFollow(FOLLOW_54);
            rule__TimeIteratorRef__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeIteratorRef__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIteratorRef__Group_1__0"


    // $ANTLR start "rule__TimeIteratorRef__Group_1__0__Impl"
    // InternalNabla.g:8636:1: rule__TimeIteratorRef__Group_1__0__Impl : ( ( rule__TimeIteratorRef__Alternatives_1_0 ) ) ;
    public final void rule__TimeIteratorRef__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8640:1: ( ( ( rule__TimeIteratorRef__Alternatives_1_0 ) ) )
            // InternalNabla.g:8641:1: ( ( rule__TimeIteratorRef__Alternatives_1_0 ) )
            {
            // InternalNabla.g:8641:1: ( ( rule__TimeIteratorRef__Alternatives_1_0 ) )
            // InternalNabla.g:8642:2: ( rule__TimeIteratorRef__Alternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorRefAccess().getAlternatives_1_0()); 
            }
            // InternalNabla.g:8643:2: ( rule__TimeIteratorRef__Alternatives_1_0 )
            // InternalNabla.g:8643:3: rule__TimeIteratorRef__Alternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__TimeIteratorRef__Alternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorRefAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIteratorRef__Group_1__0__Impl"


    // $ANTLR start "rule__TimeIteratorRef__Group_1__1"
    // InternalNabla.g:8651:1: rule__TimeIteratorRef__Group_1__1 : rule__TimeIteratorRef__Group_1__1__Impl ;
    public final void rule__TimeIteratorRef__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8655:1: ( rule__TimeIteratorRef__Group_1__1__Impl )
            // InternalNabla.g:8656:2: rule__TimeIteratorRef__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TimeIteratorRef__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIteratorRef__Group_1__1"


    // $ANTLR start "rule__TimeIteratorRef__Group_1__1__Impl"
    // InternalNabla.g:8662:1: rule__TimeIteratorRef__Group_1__1__Impl : ( ( rule__TimeIteratorRef__ValueAssignment_1_1 ) ) ;
    public final void rule__TimeIteratorRef__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8666:1: ( ( ( rule__TimeIteratorRef__ValueAssignment_1_1 ) ) )
            // InternalNabla.g:8667:1: ( ( rule__TimeIteratorRef__ValueAssignment_1_1 ) )
            {
            // InternalNabla.g:8667:1: ( ( rule__TimeIteratorRef__ValueAssignment_1_1 ) )
            // InternalNabla.g:8668:2: ( rule__TimeIteratorRef__ValueAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorRefAccess().getValueAssignment_1_1()); 
            }
            // InternalNabla.g:8669:2: ( rule__TimeIteratorRef__ValueAssignment_1_1 )
            // InternalNabla.g:8669:3: rule__TimeIteratorRef__ValueAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__TimeIteratorRef__ValueAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorRefAccess().getValueAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIteratorRef__Group_1__1__Impl"


    // $ANTLR start "rule__QualifiedName__Group__0"
    // InternalNabla.g:8678:1: rule__QualifiedName__Group__0 : rule__QualifiedName__Group__0__Impl rule__QualifiedName__Group__1 ;
    public final void rule__QualifiedName__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8682:1: ( rule__QualifiedName__Group__0__Impl rule__QualifiedName__Group__1 )
            // InternalNabla.g:8683:2: rule__QualifiedName__Group__0__Impl rule__QualifiedName__Group__1
            {
            pushFollow(FOLLOW_64);
            rule__QualifiedName__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__0"


    // $ANTLR start "rule__QualifiedName__Group__0__Impl"
    // InternalNabla.g:8690:1: rule__QualifiedName__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__QualifiedName__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8694:1: ( ( RULE_ID ) )
            // InternalNabla.g:8695:1: ( RULE_ID )
            {
            // InternalNabla.g:8695:1: ( RULE_ID )
            // InternalNabla.g:8696:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__0__Impl"


    // $ANTLR start "rule__QualifiedName__Group__1"
    // InternalNabla.g:8705:1: rule__QualifiedName__Group__1 : rule__QualifiedName__Group__1__Impl ;
    public final void rule__QualifiedName__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8709:1: ( rule__QualifiedName__Group__1__Impl )
            // InternalNabla.g:8710:2: rule__QualifiedName__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__1"


    // $ANTLR start "rule__QualifiedName__Group__1__Impl"
    // InternalNabla.g:8716:1: rule__QualifiedName__Group__1__Impl : ( ( rule__QualifiedName__Group_1__0 )* ) ;
    public final void rule__QualifiedName__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8720:1: ( ( ( rule__QualifiedName__Group_1__0 )* ) )
            // InternalNabla.g:8721:1: ( ( rule__QualifiedName__Group_1__0 )* )
            {
            // InternalNabla.g:8721:1: ( ( rule__QualifiedName__Group_1__0 )* )
            // InternalNabla.g:8722:2: ( rule__QualifiedName__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameAccess().getGroup_1()); 
            }
            // InternalNabla.g:8723:2: ( rule__QualifiedName__Group_1__0 )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==56) ) {
                    alt53=1;
                }


                switch (alt53) {
            	case 1 :
            	    // InternalNabla.g:8723:3: rule__QualifiedName__Group_1__0
            	    {
            	    pushFollow(FOLLOW_61);
            	    rule__QualifiedName__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__1__Impl"


    // $ANTLR start "rule__QualifiedName__Group_1__0"
    // InternalNabla.g:8732:1: rule__QualifiedName__Group_1__0 : rule__QualifiedName__Group_1__0__Impl rule__QualifiedName__Group_1__1 ;
    public final void rule__QualifiedName__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8736:1: ( rule__QualifiedName__Group_1__0__Impl rule__QualifiedName__Group_1__1 )
            // InternalNabla.g:8737:2: rule__QualifiedName__Group_1__0__Impl rule__QualifiedName__Group_1__1
            {
            pushFollow(FOLLOW_3);
            rule__QualifiedName__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__0"


    // $ANTLR start "rule__QualifiedName__Group_1__0__Impl"
    // InternalNabla.g:8744:1: rule__QualifiedName__Group_1__0__Impl : ( '.' ) ;
    public final void rule__QualifiedName__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8748:1: ( ( '.' ) )
            // InternalNabla.g:8749:1: ( '.' )
            {
            // InternalNabla.g:8749:1: ( '.' )
            // InternalNabla.g:8750:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
            }
            match(input,56,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__0__Impl"


    // $ANTLR start "rule__QualifiedName__Group_1__1"
    // InternalNabla.g:8759:1: rule__QualifiedName__Group_1__1 : rule__QualifiedName__Group_1__1__Impl ;
    public final void rule__QualifiedName__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8763:1: ( rule__QualifiedName__Group_1__1__Impl )
            // InternalNabla.g:8764:2: rule__QualifiedName__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__1"


    // $ANTLR start "rule__QualifiedName__Group_1__1__Impl"
    // InternalNabla.g:8770:1: rule__QualifiedName__Group_1__1__Impl : ( RULE_ID ) ;
    public final void rule__QualifiedName__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8774:1: ( ( RULE_ID ) )
            // InternalNabla.g:8775:1: ( RULE_ID )
            {
            // InternalNabla.g:8775:1: ( RULE_ID )
            // InternalNabla.g:8776:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__1__Impl"


    // $ANTLR start "rule__QualifiedNameWithWildcard__Group__0"
    // InternalNabla.g:8786:1: rule__QualifiedNameWithWildcard__Group__0 : rule__QualifiedNameWithWildcard__Group__0__Impl rule__QualifiedNameWithWildcard__Group__1 ;
    public final void rule__QualifiedNameWithWildcard__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8790:1: ( rule__QualifiedNameWithWildcard__Group__0__Impl rule__QualifiedNameWithWildcard__Group__1 )
            // InternalNabla.g:8791:2: rule__QualifiedNameWithWildcard__Group__0__Impl rule__QualifiedNameWithWildcard__Group__1
            {
            pushFollow(FOLLOW_65);
            rule__QualifiedNameWithWildcard__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QualifiedNameWithWildcard__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameWithWildcard__Group__0"


    // $ANTLR start "rule__QualifiedNameWithWildcard__Group__0__Impl"
    // InternalNabla.g:8798:1: rule__QualifiedNameWithWildcard__Group__0__Impl : ( ruleQualifiedName ) ;
    public final void rule__QualifiedNameWithWildcard__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8802:1: ( ( ruleQualifiedName ) )
            // InternalNabla.g:8803:1: ( ruleQualifiedName )
            {
            // InternalNabla.g:8803:1: ( ruleQualifiedName )
            // InternalNabla.g:8804:2: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameWithWildcard__Group__0__Impl"


    // $ANTLR start "rule__QualifiedNameWithWildcard__Group__1"
    // InternalNabla.g:8813:1: rule__QualifiedNameWithWildcard__Group__1 : rule__QualifiedNameWithWildcard__Group__1__Impl ;
    public final void rule__QualifiedNameWithWildcard__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8817:1: ( rule__QualifiedNameWithWildcard__Group__1__Impl )
            // InternalNabla.g:8818:2: rule__QualifiedNameWithWildcard__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameWithWildcard__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameWithWildcard__Group__1"


    // $ANTLR start "rule__QualifiedNameWithWildcard__Group__1__Impl"
    // InternalNabla.g:8824:1: rule__QualifiedNameWithWildcard__Group__1__Impl : ( ( '.*' )? ) ;
    public final void rule__QualifiedNameWithWildcard__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8828:1: ( ( ( '.*' )? ) )
            // InternalNabla.g:8829:1: ( ( '.*' )? )
            {
            // InternalNabla.g:8829:1: ( ( '.*' )? )
            // InternalNabla.g:8830:2: ( '.*' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); 
            }
            // InternalNabla.g:8831:2: ( '.*' )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==57) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalNabla.g:8831:3: '.*'
                    {
                    match(input,57,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameWithWildcard__Group__1__Impl"


    // $ANTLR start "rule__NablaModule__NameAssignment_1"
    // InternalNabla.g:8840:1: rule__NablaModule__NameAssignment_1 : ( ruleQualifiedName ) ;
    public final void rule__NablaModule__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8844:1: ( ( ruleQualifiedName ) )
            // InternalNabla.g:8845:2: ( ruleQualifiedName )
            {
            // InternalNabla.g:8845:2: ( ruleQualifiedName )
            // InternalNabla.g:8846:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNablaModuleAccess().getNameQualifiedNameParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNablaModuleAccess().getNameQualifiedNameParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__NameAssignment_1"


    // $ANTLR start "rule__NablaModule__ImportsAssignment_3"
    // InternalNabla.g:8855:1: rule__NablaModule__ImportsAssignment_3 : ( ruleImport ) ;
    public final void rule__NablaModule__ImportsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8859:1: ( ( ruleImport ) )
            // InternalNabla.g:8860:2: ( ruleImport )
            {
            // InternalNabla.g:8860:2: ( ruleImport )
            // InternalNabla.g:8861:3: ruleImport
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNablaModuleAccess().getImportsImportParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleImport();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNablaModuleAccess().getImportsImportParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__ImportsAssignment_3"


    // $ANTLR start "rule__NablaModule__BlocksAssignment_4"
    // InternalNabla.g:8870:1: rule__NablaModule__BlocksAssignment_4 : ( ruleDeclarationBlock ) ;
    public final void rule__NablaModule__BlocksAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8874:1: ( ( ruleDeclarationBlock ) )
            // InternalNabla.g:8875:2: ( ruleDeclarationBlock )
            {
            // InternalNabla.g:8875:2: ( ruleDeclarationBlock )
            // InternalNabla.g:8876:3: ruleDeclarationBlock
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNablaModuleAccess().getBlocksDeclarationBlockParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNablaModuleAccess().getBlocksDeclarationBlockParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__BlocksAssignment_4"


    // $ANTLR start "rule__NablaModule__VariablesAssignment_5"
    // InternalNabla.g:8885:1: rule__NablaModule__VariablesAssignment_5 : ( ( rule__NablaModule__VariablesAlternatives_5_0 ) ) ;
    public final void rule__NablaModule__VariablesAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8889:1: ( ( ( rule__NablaModule__VariablesAlternatives_5_0 ) ) )
            // InternalNabla.g:8890:2: ( ( rule__NablaModule__VariablesAlternatives_5_0 ) )
            {
            // InternalNabla.g:8890:2: ( ( rule__NablaModule__VariablesAlternatives_5_0 ) )
            // InternalNabla.g:8891:3: ( rule__NablaModule__VariablesAlternatives_5_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNablaModuleAccess().getVariablesAlternatives_5_0()); 
            }
            // InternalNabla.g:8892:3: ( rule__NablaModule__VariablesAlternatives_5_0 )
            // InternalNabla.g:8892:4: rule__NablaModule__VariablesAlternatives_5_0
            {
            pushFollow(FOLLOW_2);
            rule__NablaModule__VariablesAlternatives_5_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNablaModuleAccess().getVariablesAlternatives_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__VariablesAssignment_5"


    // $ANTLR start "rule__NablaModule__JobsAssignment_6"
    // InternalNabla.g:8900:1: rule__NablaModule__JobsAssignment_6 : ( ruleJob ) ;
    public final void rule__NablaModule__JobsAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8904:1: ( ( ruleJob ) )
            // InternalNabla.g:8905:2: ( ruleJob )
            {
            // InternalNabla.g:8905:2: ( ruleJob )
            // InternalNabla.g:8906:3: ruleJob
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNablaModuleAccess().getJobsJobParserRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleJob();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNablaModuleAccess().getJobsJobParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NablaModule__JobsAssignment_6"


    // $ANTLR start "rule__Import__ImportedNamespaceAssignment_1"
    // InternalNabla.g:8915:1: rule__Import__ImportedNamespaceAssignment_1 : ( ruleQualifiedNameWithWildcard ) ;
    public final void rule__Import__ImportedNamespaceAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8919:1: ( ( ruleQualifiedNameWithWildcard ) )
            // InternalNabla.g:8920:2: ( ruleQualifiedNameWithWildcard )
            {
            // InternalNabla.g:8920:2: ( ruleQualifiedNameWithWildcard )
            // InternalNabla.g:8921:3: ruleQualifiedNameWithWildcard
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__ImportedNamespaceAssignment_1"


    // $ANTLR start "rule__DeclarationBlock__ConnectivitiesAssignment_0_3"
    // InternalNabla.g:8930:1: rule__DeclarationBlock__ConnectivitiesAssignment_0_3 : ( ruleConnectivity ) ;
    public final void rule__DeclarationBlock__ConnectivitiesAssignment_0_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8934:1: ( ( ruleConnectivity ) )
            // InternalNabla.g:8935:2: ( ruleConnectivity )
            {
            // InternalNabla.g:8935:2: ( ruleConnectivity )
            // InternalNabla.g:8936:3: ruleConnectivity
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationBlockAccess().getConnectivitiesConnectivityParserRuleCall_0_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleConnectivity();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationBlockAccess().getConnectivitiesConnectivityParserRuleCall_0_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__ConnectivitiesAssignment_0_3"


    // $ANTLR start "rule__DeclarationBlock__FunctionsAssignment_1_3"
    // InternalNabla.g:8945:1: rule__DeclarationBlock__FunctionsAssignment_1_3 : ( ( rule__DeclarationBlock__FunctionsAlternatives_1_3_0 ) ) ;
    public final void rule__DeclarationBlock__FunctionsAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8949:1: ( ( ( rule__DeclarationBlock__FunctionsAlternatives_1_3_0 ) ) )
            // InternalNabla.g:8950:2: ( ( rule__DeclarationBlock__FunctionsAlternatives_1_3_0 ) )
            {
            // InternalNabla.g:8950:2: ( ( rule__DeclarationBlock__FunctionsAlternatives_1_3_0 ) )
            // InternalNabla.g:8951:3: ( rule__DeclarationBlock__FunctionsAlternatives_1_3_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationBlockAccess().getFunctionsAlternatives_1_3_0()); 
            }
            // InternalNabla.g:8952:3: ( rule__DeclarationBlock__FunctionsAlternatives_1_3_0 )
            // InternalNabla.g:8952:4: rule__DeclarationBlock__FunctionsAlternatives_1_3_0
            {
            pushFollow(FOLLOW_2);
            rule__DeclarationBlock__FunctionsAlternatives_1_3_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationBlockAccess().getFunctionsAlternatives_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeclarationBlock__FunctionsAssignment_1_3"


    // $ANTLR start "rule__Job__NameAssignment_0_1"
    // InternalNabla.g:8960:1: rule__Job__NameAssignment_0_1 : ( RULE_ID ) ;
    public final void rule__Job__NameAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8964:1: ( ( RULE_ID ) )
            // InternalNabla.g:8965:2: ( RULE_ID )
            {
            // InternalNabla.g:8965:2: ( RULE_ID )
            // InternalNabla.g:8966:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getNameIDTerminalRuleCall_0_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getNameIDTerminalRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__NameAssignment_0_1"


    // $ANTLR start "rule__Job__InstructionAssignment_0_3"
    // InternalNabla.g:8975:1: rule__Job__InstructionAssignment_0_3 : ( ruleInstruction ) ;
    public final void rule__Job__InstructionAssignment_0_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8979:1: ( ( ruleInstruction ) )
            // InternalNabla.g:8980:2: ( ruleInstruction )
            {
            // InternalNabla.g:8980:2: ( ruleInstruction )
            // InternalNabla.g:8981:3: ruleInstruction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getInstructionInstructionParserRuleCall_0_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInstruction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getInstructionInstructionParserRuleCall_0_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__InstructionAssignment_0_3"


    // $ANTLR start "rule__Job__NameAssignment_1_1"
    // InternalNabla.g:8990:1: rule__Job__NameAssignment_1_1 : ( RULE_ID ) ;
    public final void rule__Job__NameAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:8994:1: ( ( RULE_ID ) )
            // InternalNabla.g:8995:2: ( RULE_ID )
            {
            // InternalNabla.g:8995:2: ( RULE_ID )
            // InternalNabla.g:8996:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getNameIDTerminalRuleCall_1_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getNameIDTerminalRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__NameAssignment_1_1"


    // $ANTLR start "rule__Job__IteratorAssignment_1_4"
    // InternalNabla.g:9005:1: rule__Job__IteratorAssignment_1_4 : ( ruleTimeIterator ) ;
    public final void rule__Job__IteratorAssignment_1_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9009:1: ( ( ruleTimeIterator ) )
            // InternalNabla.g:9010:2: ( ruleTimeIterator )
            {
            // InternalNabla.g:9010:2: ( ruleTimeIterator )
            // InternalNabla.g:9011:3: ruleTimeIterator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getIteratorTimeIteratorParserRuleCall_1_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTimeIterator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getIteratorTimeIteratorParserRuleCall_1_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__IteratorAssignment_1_4"


    // $ANTLR start "rule__Job__InitializationAssignment_1_6"
    // InternalNabla.g:9020:1: rule__Job__InitializationAssignment_1_6 : ( ruleInstruction ) ;
    public final void rule__Job__InitializationAssignment_1_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9024:1: ( ( ruleInstruction ) )
            // InternalNabla.g:9025:2: ( ruleInstruction )
            {
            // InternalNabla.g:9025:2: ( ruleInstruction )
            // InternalNabla.g:9026:3: ruleInstruction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getInitializationInstructionParserRuleCall_1_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInstruction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getInitializationInstructionParserRuleCall_1_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__InitializationAssignment_1_6"


    // $ANTLR start "rule__Job__BodyAssignment_1_8"
    // InternalNabla.g:9035:1: rule__Job__BodyAssignment_1_8 : ( ruleInstruction ) ;
    public final void rule__Job__BodyAssignment_1_8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9039:1: ( ( ruleInstruction ) )
            // InternalNabla.g:9040:2: ( ruleInstruction )
            {
            // InternalNabla.g:9040:2: ( ruleInstruction )
            // InternalNabla.g:9041:3: ruleInstruction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJobAccess().getBodyInstructionParserRuleCall_1_8_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInstruction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJobAccess().getBodyInstructionParserRuleCall_1_8_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Job__BodyAssignment_1_8"


    // $ANTLR start "rule__Instruction__InstructionsAssignment_2_2"
    // InternalNabla.g:9050:1: rule__Instruction__InstructionsAssignment_2_2 : ( ruleInstruction ) ;
    public final void rule__Instruction__InstructionsAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9054:1: ( ( ruleInstruction ) )
            // InternalNabla.g:9055:2: ( ruleInstruction )
            {
            // InternalNabla.g:9055:2: ( ruleInstruction )
            // InternalNabla.g:9056:3: ruleInstruction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getInstructionsInstructionParserRuleCall_2_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInstruction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getInstructionsInstructionParserRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__InstructionsAssignment_2_2"


    // $ANTLR start "rule__Instruction__VarRefAssignment_3_1"
    // InternalNabla.g:9065:1: rule__Instruction__VarRefAssignment_3_1 : ( ruleVarRef ) ;
    public final void rule__Instruction__VarRefAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9069:1: ( ( ruleVarRef ) )
            // InternalNabla.g:9070:2: ( ruleVarRef )
            {
            // InternalNabla.g:9070:2: ( ruleVarRef )
            // InternalNabla.g:9071:3: ruleVarRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getVarRefVarRefParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVarRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getVarRefVarRefParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__VarRefAssignment_3_1"


    // $ANTLR start "rule__Instruction__ExpressionAssignment_3_3"
    // InternalNabla.g:9080:1: rule__Instruction__ExpressionAssignment_3_3 : ( ruleExpression ) ;
    public final void rule__Instruction__ExpressionAssignment_3_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9084:1: ( ( ruleExpression ) )
            // InternalNabla.g:9085:2: ( ruleExpression )
            {
            // InternalNabla.g:9085:2: ( ruleExpression )
            // InternalNabla.g:9086:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getExpressionExpressionParserRuleCall_3_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getExpressionExpressionParserRuleCall_3_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__ExpressionAssignment_3_3"


    // $ANTLR start "rule__Instruction__IteratorAssignment_4_2"
    // InternalNabla.g:9095:1: rule__Instruction__IteratorAssignment_4_2 : ( ruleSpaceIterator ) ;
    public final void rule__Instruction__IteratorAssignment_4_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9099:1: ( ( ruleSpaceIterator ) )
            // InternalNabla.g:9100:2: ( ruleSpaceIterator )
            {
            // InternalNabla.g:9100:2: ( ruleSpaceIterator )
            // InternalNabla.g:9101:3: ruleSpaceIterator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getIteratorSpaceIteratorParserRuleCall_4_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSpaceIterator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getIteratorSpaceIteratorParserRuleCall_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__IteratorAssignment_4_2"


    // $ANTLR start "rule__Instruction__BodyAssignment_4_4"
    // InternalNabla.g:9110:1: rule__Instruction__BodyAssignment_4_4 : ( ruleInstruction ) ;
    public final void rule__Instruction__BodyAssignment_4_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9114:1: ( ( ruleInstruction ) )
            // InternalNabla.g:9115:2: ( ruleInstruction )
            {
            // InternalNabla.g:9115:2: ( ruleInstruction )
            // InternalNabla.g:9116:3: ruleInstruction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getBodyInstructionParserRuleCall_4_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInstruction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getBodyInstructionParserRuleCall_4_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__BodyAssignment_4_4"


    // $ANTLR start "rule__Instruction__ConditionAssignment_5_3"
    // InternalNabla.g:9125:1: rule__Instruction__ConditionAssignment_5_3 : ( ruleExpression ) ;
    public final void rule__Instruction__ConditionAssignment_5_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9129:1: ( ( ruleExpression ) )
            // InternalNabla.g:9130:2: ( ruleExpression )
            {
            // InternalNabla.g:9130:2: ( ruleExpression )
            // InternalNabla.g:9131:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getConditionExpressionParserRuleCall_5_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getConditionExpressionParserRuleCall_5_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__ConditionAssignment_5_3"


    // $ANTLR start "rule__Instruction__ThenAssignment_5_5"
    // InternalNabla.g:9140:1: rule__Instruction__ThenAssignment_5_5 : ( ruleInstruction ) ;
    public final void rule__Instruction__ThenAssignment_5_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9144:1: ( ( ruleInstruction ) )
            // InternalNabla.g:9145:2: ( ruleInstruction )
            {
            // InternalNabla.g:9145:2: ( ruleInstruction )
            // InternalNabla.g:9146:3: ruleInstruction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getThenInstructionParserRuleCall_5_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInstruction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getThenInstructionParserRuleCall_5_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__ThenAssignment_5_5"


    // $ANTLR start "rule__Instruction__ElseAssignment_5_6_1"
    // InternalNabla.g:9155:1: rule__Instruction__ElseAssignment_5_6_1 : ( ruleInstruction ) ;
    public final void rule__Instruction__ElseAssignment_5_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9159:1: ( ( ruleInstruction ) )
            // InternalNabla.g:9160:2: ( ruleInstruction )
            {
            // InternalNabla.g:9160:2: ( ruleInstruction )
            // InternalNabla.g:9161:3: ruleInstruction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInstructionAccess().getElseInstructionParserRuleCall_5_6_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInstruction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInstructionAccess().getElseInstructionParserRuleCall_5_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__ElseAssignment_5_6_1"


    // $ANTLR start "rule__TimeIterator__NameAssignment_0"
    // InternalNabla.g:9170:1: rule__TimeIterator__NameAssignment_0 : ( RULE_ID ) ;
    public final void rule__TimeIterator__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9174:1: ( ( RULE_ID ) )
            // InternalNabla.g:9175:2: ( RULE_ID )
            {
            // InternalNabla.g:9175:2: ( RULE_ID )
            // InternalNabla.g:9176:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorAccess().getNameIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorAccess().getNameIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIterator__NameAssignment_0"


    // $ANTLR start "rule__SpaceIterator__NameAssignment_0"
    // InternalNabla.g:9185:1: rule__SpaceIterator__NameAssignment_0 : ( RULE_ID ) ;
    public final void rule__SpaceIterator__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9189:1: ( ( RULE_ID ) )
            // InternalNabla.g:9190:2: ( RULE_ID )
            {
            // InternalNabla.g:9190:2: ( RULE_ID )
            // InternalNabla.g:9191:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorAccess().getNameIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorAccess().getNameIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIterator__NameAssignment_0"


    // $ANTLR start "rule__SpaceIterator__RangeAssignment_2"
    // InternalNabla.g:9200:1: rule__SpaceIterator__RangeAssignment_2 : ( ruleSpaceIteratorRange ) ;
    public final void rule__SpaceIterator__RangeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9204:1: ( ( ruleSpaceIteratorRange ) )
            // InternalNabla.g:9205:2: ( ruleSpaceIteratorRange )
            {
            // InternalNabla.g:9205:2: ( ruleSpaceIteratorRange )
            // InternalNabla.g:9206:3: ruleSpaceIteratorRange
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorAccess().getRangeSpaceIteratorRangeParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSpaceIteratorRange();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorAccess().getRangeSpaceIteratorRangeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIterator__RangeAssignment_2"


    // $ANTLR start "rule__SpaceIteratorRange__ConnectivityAssignment_0"
    // InternalNabla.g:9215:1: rule__SpaceIteratorRange__ConnectivityAssignment_0 : ( ( RULE_ID ) ) ;
    public final void rule__SpaceIteratorRange__ConnectivityAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9219:1: ( ( ( RULE_ID ) ) )
            // InternalNabla.g:9220:2: ( ( RULE_ID ) )
            {
            // InternalNabla.g:9220:2: ( ( RULE_ID ) )
            // InternalNabla.g:9221:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRangeAccess().getConnectivityConnectivityCrossReference_0_0()); 
            }
            // InternalNabla.g:9222:3: ( RULE_ID )
            // InternalNabla.g:9223:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRangeAccess().getConnectivityConnectivityIDTerminalRuleCall_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRangeAccess().getConnectivityConnectivityIDTerminalRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRangeAccess().getConnectivityConnectivityCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__ConnectivityAssignment_0"


    // $ANTLR start "rule__SpaceIteratorRange__ArgsAssignment_2_0"
    // InternalNabla.g:9234:1: rule__SpaceIteratorRange__ArgsAssignment_2_0 : ( ruleSpaceIteratorRef ) ;
    public final void rule__SpaceIteratorRange__ArgsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9238:1: ( ( ruleSpaceIteratorRef ) )
            // InternalNabla.g:9239:2: ( ruleSpaceIteratorRef )
            {
            // InternalNabla.g:9239:2: ( ruleSpaceIteratorRef )
            // InternalNabla.g:9240:3: ruleSpaceIteratorRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRangeAccess().getArgsSpaceIteratorRefParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSpaceIteratorRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRangeAccess().getArgsSpaceIteratorRefParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__ArgsAssignment_2_0"


    // $ANTLR start "rule__SpaceIteratorRange__ArgsAssignment_2_1_1"
    // InternalNabla.g:9249:1: rule__SpaceIteratorRange__ArgsAssignment_2_1_1 : ( ruleSpaceIteratorRef ) ;
    public final void rule__SpaceIteratorRange__ArgsAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9253:1: ( ( ruleSpaceIteratorRef ) )
            // InternalNabla.g:9254:2: ( ruleSpaceIteratorRef )
            {
            // InternalNabla.g:9254:2: ( ruleSpaceIteratorRef )
            // InternalNabla.g:9255:3: ruleSpaceIteratorRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRangeAccess().getArgsSpaceIteratorRefParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSpaceIteratorRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRangeAccess().getArgsSpaceIteratorRefParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRange__ArgsAssignment_2_1_1"


    // $ANTLR start "rule__SpaceIteratorRef__PrevAssignment_0_0_0"
    // InternalNabla.g:9264:1: rule__SpaceIteratorRef__PrevAssignment_0_0_0 : ( ( '\\u25C4' ) ) ;
    public final void rule__SpaceIteratorRef__PrevAssignment_0_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9268:1: ( ( ( '\\u25C4' ) ) )
            // InternalNabla.g:9269:2: ( ( '\\u25C4' ) )
            {
            // InternalNabla.g:9269:2: ( ( '\\u25C4' ) )
            // InternalNabla.g:9270:3: ( '\\u25C4' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRefAccess().getPrevBlackLeftPointingPointerKeyword_0_0_0_0()); 
            }
            // InternalNabla.g:9271:3: ( '\\u25C4' )
            // InternalNabla.g:9272:4: '\\u25C4'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRefAccess().getPrevBlackLeftPointingPointerKeyword_0_0_0_0()); 
            }
            match(input,58,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRefAccess().getPrevBlackLeftPointingPointerKeyword_0_0_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRefAccess().getPrevBlackLeftPointingPointerKeyword_0_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRef__PrevAssignment_0_0_0"


    // $ANTLR start "rule__SpaceIteratorRef__NextAssignment_0_0_1"
    // InternalNabla.g:9283:1: rule__SpaceIteratorRef__NextAssignment_0_0_1 : ( ( '\\u25BA' ) ) ;
    public final void rule__SpaceIteratorRef__NextAssignment_0_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9287:1: ( ( ( '\\u25BA' ) ) )
            // InternalNabla.g:9288:2: ( ( '\\u25BA' ) )
            {
            // InternalNabla.g:9288:2: ( ( '\\u25BA' ) )
            // InternalNabla.g:9289:3: ( '\\u25BA' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRefAccess().getNextBlackRightPointingPointerKeyword_0_0_1_0()); 
            }
            // InternalNabla.g:9290:3: ( '\\u25BA' )
            // InternalNabla.g:9291:4: '\\u25BA'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRefAccess().getNextBlackRightPointingPointerKeyword_0_0_1_0()); 
            }
            match(input,59,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRefAccess().getNextBlackRightPointingPointerKeyword_0_0_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRefAccess().getNextBlackRightPointingPointerKeyword_0_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRef__NextAssignment_0_0_1"


    // $ANTLR start "rule__SpaceIteratorRef__IteratorAssignment_0_2"
    // InternalNabla.g:9302:1: rule__SpaceIteratorRef__IteratorAssignment_0_2 : ( ( RULE_ID ) ) ;
    public final void rule__SpaceIteratorRef__IteratorAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9306:1: ( ( ( RULE_ID ) ) )
            // InternalNabla.g:9307:2: ( ( RULE_ID ) )
            {
            // InternalNabla.g:9307:2: ( ( RULE_ID ) )
            // InternalNabla.g:9308:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRefAccess().getIteratorSpaceIteratorCrossReference_0_2_0()); 
            }
            // InternalNabla.g:9309:3: ( RULE_ID )
            // InternalNabla.g:9310:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRefAccess().getIteratorSpaceIteratorIDTerminalRuleCall_0_2_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRefAccess().getIteratorSpaceIteratorIDTerminalRuleCall_0_2_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRefAccess().getIteratorSpaceIteratorCrossReference_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRef__IteratorAssignment_0_2"


    // $ANTLR start "rule__SpaceIteratorRef__IteratorAssignment_1"
    // InternalNabla.g:9321:1: rule__SpaceIteratorRef__IteratorAssignment_1 : ( ( RULE_ID ) ) ;
    public final void rule__SpaceIteratorRef__IteratorAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9325:1: ( ( ( RULE_ID ) ) )
            // InternalNabla.g:9326:2: ( ( RULE_ID ) )
            {
            // InternalNabla.g:9326:2: ( ( RULE_ID ) )
            // InternalNabla.g:9327:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRefAccess().getIteratorSpaceIteratorCrossReference_1_0()); 
            }
            // InternalNabla.g:9328:3: ( RULE_ID )
            // InternalNabla.g:9329:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpaceIteratorRefAccess().getIteratorSpaceIteratorIDTerminalRuleCall_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRefAccess().getIteratorSpaceIteratorIDTerminalRuleCall_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpaceIteratorRefAccess().getIteratorSpaceIteratorCrossReference_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpaceIteratorRef__IteratorAssignment_1"


    // $ANTLR start "rule__ScalarVarDefinition__ConstAssignment_0"
    // InternalNabla.g:9340:1: rule__ScalarVarDefinition__ConstAssignment_0 : ( ( 'const' ) ) ;
    public final void rule__ScalarVarDefinition__ConstAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9344:1: ( ( ( 'const' ) ) )
            // InternalNabla.g:9345:2: ( ( 'const' ) )
            {
            // InternalNabla.g:9345:2: ( ( 'const' ) )
            // InternalNabla.g:9346:3: ( 'const' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarDefinitionAccess().getConstConstKeyword_0_0()); 
            }
            // InternalNabla.g:9347:3: ( 'const' )
            // InternalNabla.g:9348:4: 'const'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarDefinitionAccess().getConstConstKeyword_0_0()); 
            }
            match(input,60,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarDefinitionAccess().getConstConstKeyword_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarDefinitionAccess().getConstConstKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__ConstAssignment_0"


    // $ANTLR start "rule__ScalarVarDefinition__TypeAssignment_1"
    // InternalNabla.g:9359:1: rule__ScalarVarDefinition__TypeAssignment_1 : ( ruleBasicType ) ;
    public final void rule__ScalarVarDefinition__TypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9363:1: ( ( ruleBasicType ) )
            // InternalNabla.g:9364:2: ( ruleBasicType )
            {
            // InternalNabla.g:9364:2: ( ruleBasicType )
            // InternalNabla.g:9365:3: ruleBasicType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarDefinitionAccess().getTypeBasicTypeEnumRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBasicType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarDefinitionAccess().getTypeBasicTypeEnumRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__TypeAssignment_1"


    // $ANTLR start "rule__ScalarVarDefinition__VariableAssignment_2"
    // InternalNabla.g:9374:1: rule__ScalarVarDefinition__VariableAssignment_2 : ( ruleScalarVar ) ;
    public final void rule__ScalarVarDefinition__VariableAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9378:1: ( ( ruleScalarVar ) )
            // InternalNabla.g:9379:2: ( ruleScalarVar )
            {
            // InternalNabla.g:9379:2: ( ruleScalarVar )
            // InternalNabla.g:9380:3: ruleScalarVar
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarDefinitionAccess().getVariableScalarVarParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleScalarVar();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarDefinitionAccess().getVariableScalarVarParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__VariableAssignment_2"


    // $ANTLR start "rule__ScalarVarDefinition__DefaultValueAssignment_4"
    // InternalNabla.g:9389:1: rule__ScalarVarDefinition__DefaultValueAssignment_4 : ( ruleExpression ) ;
    public final void rule__ScalarVarDefinition__DefaultValueAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9393:1: ( ( ruleExpression ) )
            // InternalNabla.g:9394:2: ( ruleExpression )
            {
            // InternalNabla.g:9394:2: ( ruleExpression )
            // InternalNabla.g:9395:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarDefinitionAccess().getDefaultValueExpressionParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarDefinitionAccess().getDefaultValueExpressionParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVarDefinition__DefaultValueAssignment_4"


    // $ANTLR start "rule__VarGroupDeclaration__TypeAssignment_0"
    // InternalNabla.g:9404:1: rule__VarGroupDeclaration__TypeAssignment_0 : ( ruleBasicType ) ;
    public final void rule__VarGroupDeclaration__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9408:1: ( ( ruleBasicType ) )
            // InternalNabla.g:9409:2: ( ruleBasicType )
            {
            // InternalNabla.g:9409:2: ( ruleBasicType )
            // InternalNabla.g:9410:3: ruleBasicType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarGroupDeclarationAccess().getTypeBasicTypeEnumRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBasicType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarGroupDeclarationAccess().getTypeBasicTypeEnumRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarGroupDeclaration__TypeAssignment_0"


    // $ANTLR start "rule__VarGroupDeclaration__VariablesAssignment_1"
    // InternalNabla.g:9419:1: rule__VarGroupDeclaration__VariablesAssignment_1 : ( ruleVar ) ;
    public final void rule__VarGroupDeclaration__VariablesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9423:1: ( ( ruleVar ) )
            // InternalNabla.g:9424:2: ( ruleVar )
            {
            // InternalNabla.g:9424:2: ( ruleVar )
            // InternalNabla.g:9425:3: ruleVar
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarGroupDeclarationAccess().getVariablesVarParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVar();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarGroupDeclarationAccess().getVariablesVarParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarGroupDeclaration__VariablesAssignment_1"


    // $ANTLR start "rule__VarGroupDeclaration__VariablesAssignment_2_1"
    // InternalNabla.g:9434:1: rule__VarGroupDeclaration__VariablesAssignment_2_1 : ( ruleVar ) ;
    public final void rule__VarGroupDeclaration__VariablesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9438:1: ( ( ruleVar ) )
            // InternalNabla.g:9439:2: ( ruleVar )
            {
            // InternalNabla.g:9439:2: ( ruleVar )
            // InternalNabla.g:9440:3: ruleVar
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarGroupDeclarationAccess().getVariablesVarParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVar();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarGroupDeclarationAccess().getVariablesVarParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarGroupDeclaration__VariablesAssignment_2_1"


    // $ANTLR start "rule__ScalarVar__NameAssignment"
    // InternalNabla.g:9449:1: rule__ScalarVar__NameAssignment : ( RULE_ID ) ;
    public final void rule__ScalarVar__NameAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9453:1: ( ( RULE_ID ) )
            // InternalNabla.g:9454:2: ( RULE_ID )
            {
            // InternalNabla.g:9454:2: ( RULE_ID )
            // InternalNabla.g:9455:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarVarAccess().getNameIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarVarAccess().getNameIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarVar__NameAssignment"


    // $ANTLR start "rule__ArrayVar__NameAssignment_0"
    // InternalNabla.g:9464:1: rule__ArrayVar__NameAssignment_0 : ( RULE_ID ) ;
    public final void rule__ArrayVar__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9468:1: ( ( RULE_ID ) )
            // InternalNabla.g:9469:2: ( RULE_ID )
            {
            // InternalNabla.g:9469:2: ( RULE_ID )
            // InternalNabla.g:9470:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayVarAccess().getNameIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayVarAccess().getNameIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__NameAssignment_0"


    // $ANTLR start "rule__ArrayVar__DimensionsAssignment_2"
    // InternalNabla.g:9479:1: rule__ArrayVar__DimensionsAssignment_2 : ( ( RULE_ID ) ) ;
    public final void rule__ArrayVar__DimensionsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9483:1: ( ( ( RULE_ID ) ) )
            // InternalNabla.g:9484:2: ( ( RULE_ID ) )
            {
            // InternalNabla.g:9484:2: ( ( RULE_ID ) )
            // InternalNabla.g:9485:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayVarAccess().getDimensionsConnectivityCrossReference_2_0()); 
            }
            // InternalNabla.g:9486:3: ( RULE_ID )
            // InternalNabla.g:9487:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayVarAccess().getDimensionsConnectivityIDTerminalRuleCall_2_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayVarAccess().getDimensionsConnectivityIDTerminalRuleCall_2_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayVarAccess().getDimensionsConnectivityCrossReference_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__DimensionsAssignment_2"


    // $ANTLR start "rule__ArrayVar__DimensionsAssignment_3_1"
    // InternalNabla.g:9498:1: rule__ArrayVar__DimensionsAssignment_3_1 : ( ( RULE_ID ) ) ;
    public final void rule__ArrayVar__DimensionsAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9502:1: ( ( ( RULE_ID ) ) )
            // InternalNabla.g:9503:2: ( ( RULE_ID ) )
            {
            // InternalNabla.g:9503:2: ( ( RULE_ID ) )
            // InternalNabla.g:9504:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayVarAccess().getDimensionsConnectivityCrossReference_3_1_0()); 
            }
            // InternalNabla.g:9505:3: ( RULE_ID )
            // InternalNabla.g:9506:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayVarAccess().getDimensionsConnectivityIDTerminalRuleCall_3_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayVarAccess().getDimensionsConnectivityIDTerminalRuleCall_3_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayVarAccess().getDimensionsConnectivityCrossReference_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayVar__DimensionsAssignment_3_1"


    // $ANTLR start "rule__Connectivity__NameAssignment_0"
    // InternalNabla.g:9517:1: rule__Connectivity__NameAssignment_0 : ( RULE_ID ) ;
    public final void rule__Connectivity__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9521:1: ( ( RULE_ID ) )
            // InternalNabla.g:9522:2: ( RULE_ID )
            {
            // InternalNabla.g:9522:2: ( RULE_ID )
            // InternalNabla.g:9523:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getNameIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getNameIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__NameAssignment_0"


    // $ANTLR start "rule__Connectivity__InTypesAssignment_3_0_0"
    // InternalNabla.g:9532:1: rule__Connectivity__InTypesAssignment_3_0_0 : ( ruleItemType ) ;
    public final void rule__Connectivity__InTypesAssignment_3_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9536:1: ( ( ruleItemType ) )
            // InternalNabla.g:9537:2: ( ruleItemType )
            {
            // InternalNabla.g:9537:2: ( ruleItemType )
            // InternalNabla.g:9538:3: ruleItemType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getInTypesItemTypeEnumRuleCall_3_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleItemType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getInTypesItemTypeEnumRuleCall_3_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__InTypesAssignment_3_0_0"


    // $ANTLR start "rule__Connectivity__InTypesAssignment_3_0_1_1"
    // InternalNabla.g:9547:1: rule__Connectivity__InTypesAssignment_3_0_1_1 : ( ruleItemType ) ;
    public final void rule__Connectivity__InTypesAssignment_3_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9551:1: ( ( ruleItemType ) )
            // InternalNabla.g:9552:2: ( ruleItemType )
            {
            // InternalNabla.g:9552:2: ( ruleItemType )
            // InternalNabla.g:9553:3: ruleItemType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getInTypesItemTypeEnumRuleCall_3_0_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleItemType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getInTypesItemTypeEnumRuleCall_3_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__InTypesAssignment_3_0_1_1"


    // $ANTLR start "rule__Connectivity__ReturnTypeAssignment_6"
    // InternalNabla.g:9562:1: rule__Connectivity__ReturnTypeAssignment_6 : ( ruleItemArgType ) ;
    public final void rule__Connectivity__ReturnTypeAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9566:1: ( ( ruleItemArgType ) )
            // InternalNabla.g:9567:2: ( ruleItemArgType )
            {
            // InternalNabla.g:9567:2: ( ruleItemArgType )
            // InternalNabla.g:9568:3: ruleItemArgType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConnectivityAccess().getReturnTypeItemArgTypeParserRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleItemArgType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConnectivityAccess().getReturnTypeItemArgTypeParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Connectivity__ReturnTypeAssignment_6"


    // $ANTLR start "rule__ItemArgType__MultipleAssignment_0_0"
    // InternalNabla.g:9577:1: rule__ItemArgType__MultipleAssignment_0_0 : ( ( '{' ) ) ;
    public final void rule__ItemArgType__MultipleAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9581:1: ( ( ( '{' ) ) )
            // InternalNabla.g:9582:2: ( ( '{' ) )
            {
            // InternalNabla.g:9582:2: ( ( '{' ) )
            // InternalNabla.g:9583:3: ( '{' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItemArgTypeAccess().getMultipleLeftCurlyBracketKeyword_0_0_0()); 
            }
            // InternalNabla.g:9584:3: ( '{' )
            // InternalNabla.g:9585:4: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItemArgTypeAccess().getMultipleLeftCurlyBracketKeyword_0_0_0()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItemArgTypeAccess().getMultipleLeftCurlyBracketKeyword_0_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getItemArgTypeAccess().getMultipleLeftCurlyBracketKeyword_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItemArgType__MultipleAssignment_0_0"


    // $ANTLR start "rule__ItemArgType__TypeAssignment_0_1"
    // InternalNabla.g:9596:1: rule__ItemArgType__TypeAssignment_0_1 : ( ruleItemType ) ;
    public final void rule__ItemArgType__TypeAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9600:1: ( ( ruleItemType ) )
            // InternalNabla.g:9601:2: ( ruleItemType )
            {
            // InternalNabla.g:9601:2: ( ruleItemType )
            // InternalNabla.g:9602:3: ruleItemType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItemArgTypeAccess().getTypeItemTypeEnumRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleItemType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItemArgTypeAccess().getTypeItemTypeEnumRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItemArgType__TypeAssignment_0_1"


    // $ANTLR start "rule__ItemArgType__TypeAssignment_1"
    // InternalNabla.g:9611:1: rule__ItemArgType__TypeAssignment_1 : ( ruleItemType ) ;
    public final void rule__ItemArgType__TypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9615:1: ( ( ruleItemType ) )
            // InternalNabla.g:9616:2: ( ruleItemType )
            {
            // InternalNabla.g:9616:2: ( ruleItemType )
            // InternalNabla.g:9617:3: ruleItemType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getItemArgTypeAccess().getTypeItemTypeEnumRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleItemType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getItemArgTypeAccess().getTypeItemTypeEnumRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ItemArgType__TypeAssignment_1"


    // $ANTLR start "rule__Function__NameAssignment_1"
    // InternalNabla.g:9626:1: rule__Function__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Function__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9630:1: ( ( RULE_ID ) )
            // InternalNabla.g:9631:2: ( RULE_ID )
            {
            // InternalNabla.g:9631:2: ( RULE_ID )
            // InternalNabla.g:9632:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__NameAssignment_1"


    // $ANTLR start "rule__Function__ArgGroupsAssignment_3"
    // InternalNabla.g:9641:1: rule__Function__ArgGroupsAssignment_3 : ( ruleFunctionArg ) ;
    public final void rule__Function__ArgGroupsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9645:1: ( ( ruleFunctionArg ) )
            // InternalNabla.g:9646:2: ( ruleFunctionArg )
            {
            // InternalNabla.g:9646:2: ( ruleFunctionArg )
            // InternalNabla.g:9647:3: ruleFunctionArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getArgGroupsFunctionArgParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFunctionArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getArgGroupsFunctionArgParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__ArgGroupsAssignment_3"


    // $ANTLR start "rule__Function__ArgGroupsAssignment_4_1"
    // InternalNabla.g:9656:1: rule__Function__ArgGroupsAssignment_4_1 : ( ruleFunctionArg ) ;
    public final void rule__Function__ArgGroupsAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9660:1: ( ( ruleFunctionArg ) )
            // InternalNabla.g:9661:2: ( ruleFunctionArg )
            {
            // InternalNabla.g:9661:2: ( ruleFunctionArg )
            // InternalNabla.g:9662:3: ruleFunctionArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getArgGroupsFunctionArgParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFunctionArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getArgGroupsFunctionArgParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__ArgGroupsAssignment_4_1"


    // $ANTLR start "rule__FunctionArg__InTypesAssignment_1_0_0"
    // InternalNabla.g:9671:1: rule__FunctionArg__InTypesAssignment_1_0_0 : ( ruleBasicType ) ;
    public final void rule__FunctionArg__InTypesAssignment_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9675:1: ( ( ruleBasicType ) )
            // InternalNabla.g:9676:2: ( ruleBasicType )
            {
            // InternalNabla.g:9676:2: ( ruleBasicType )
            // InternalNabla.g:9677:3: ruleBasicType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionArgAccess().getInTypesBasicTypeEnumRuleCall_1_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBasicType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionArgAccess().getInTypesBasicTypeEnumRuleCall_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__InTypesAssignment_1_0_0"


    // $ANTLR start "rule__FunctionArg__InTypesAssignment_1_0_1_1"
    // InternalNabla.g:9686:1: rule__FunctionArg__InTypesAssignment_1_0_1_1 : ( ruleBasicType ) ;
    public final void rule__FunctionArg__InTypesAssignment_1_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9690:1: ( ( ruleBasicType ) )
            // InternalNabla.g:9691:2: ( ruleBasicType )
            {
            // InternalNabla.g:9691:2: ( ruleBasicType )
            // InternalNabla.g:9692:3: ruleBasicType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionArgAccess().getInTypesBasicTypeEnumRuleCall_1_0_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBasicType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionArgAccess().getInTypesBasicTypeEnumRuleCall_1_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__InTypesAssignment_1_0_1_1"


    // $ANTLR start "rule__FunctionArg__ReturnTypeAssignment_4"
    // InternalNabla.g:9701:1: rule__FunctionArg__ReturnTypeAssignment_4 : ( ruleBasicType ) ;
    public final void rule__FunctionArg__ReturnTypeAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9705:1: ( ( ruleBasicType ) )
            // InternalNabla.g:9706:2: ( ruleBasicType )
            {
            // InternalNabla.g:9706:2: ( ruleBasicType )
            // InternalNabla.g:9707:3: ruleBasicType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionArgAccess().getReturnTypeBasicTypeEnumRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBasicType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionArgAccess().getReturnTypeBasicTypeEnumRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionArg__ReturnTypeAssignment_4"


    // $ANTLR start "rule__Reduction__NameAssignment_1"
    // InternalNabla.g:9716:1: rule__Reduction__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Reduction__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9720:1: ( ( RULE_ID ) )
            // InternalNabla.g:9721:2: ( RULE_ID )
            {
            // InternalNabla.g:9721:2: ( RULE_ID )
            // InternalNabla.g:9722:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__NameAssignment_1"


    // $ANTLR start "rule__Reduction__ArgGroupsAssignment_3"
    // InternalNabla.g:9731:1: rule__Reduction__ArgGroupsAssignment_3 : ( ruleReductionArg ) ;
    public final void rule__Reduction__ArgGroupsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9735:1: ( ( ruleReductionArg ) )
            // InternalNabla.g:9736:2: ( ruleReductionArg )
            {
            // InternalNabla.g:9736:2: ( ruleReductionArg )
            // InternalNabla.g:9737:3: ruleReductionArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionAccess().getArgGroupsReductionArgParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleReductionArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionAccess().getArgGroupsReductionArgParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__ArgGroupsAssignment_3"


    // $ANTLR start "rule__Reduction__ArgGroupsAssignment_4_1"
    // InternalNabla.g:9746:1: rule__Reduction__ArgGroupsAssignment_4_1 : ( ruleReductionArg ) ;
    public final void rule__Reduction__ArgGroupsAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9750:1: ( ( ruleReductionArg ) )
            // InternalNabla.g:9751:2: ( ruleReductionArg )
            {
            // InternalNabla.g:9751:2: ( ruleReductionArg )
            // InternalNabla.g:9752:3: ruleReductionArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionAccess().getArgGroupsReductionArgParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleReductionArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionAccess().getArgGroupsReductionArgParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reduction__ArgGroupsAssignment_4_1"


    // $ANTLR start "rule__ReductionArg__SeedAssignment_1"
    // InternalNabla.g:9761:1: rule__ReductionArg__SeedAssignment_1 : ( ruleExpression ) ;
    public final void rule__ReductionArg__SeedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9765:1: ( ( ruleExpression ) )
            // InternalNabla.g:9766:2: ( ruleExpression )
            {
            // InternalNabla.g:9766:2: ( ruleExpression )
            // InternalNabla.g:9767:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionArgAccess().getSeedExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionArgAccess().getSeedExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__SeedAssignment_1"


    // $ANTLR start "rule__ReductionArg__CollectionTypeAssignment_3"
    // InternalNabla.g:9776:1: rule__ReductionArg__CollectionTypeAssignment_3 : ( ruleBasicType ) ;
    public final void rule__ReductionArg__CollectionTypeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9780:1: ( ( ruleBasicType ) )
            // InternalNabla.g:9781:2: ( ruleBasicType )
            {
            // InternalNabla.g:9781:2: ( ruleBasicType )
            // InternalNabla.g:9782:3: ruleBasicType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionArgAccess().getCollectionTypeBasicTypeEnumRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBasicType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionArgAccess().getCollectionTypeBasicTypeEnumRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__CollectionTypeAssignment_3"


    // $ANTLR start "rule__ReductionArg__ReturnTypeAssignment_6"
    // InternalNabla.g:9791:1: rule__ReductionArg__ReturnTypeAssignment_6 : ( ruleBasicType ) ;
    public final void rule__ReductionArg__ReturnTypeAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9795:1: ( ( ruleBasicType ) )
            // InternalNabla.g:9796:2: ( ruleBasicType )
            {
            // InternalNabla.g:9796:2: ( ruleBasicType )
            // InternalNabla.g:9797:3: ruleBasicType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReductionArgAccess().getReturnTypeBasicTypeEnumRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBasicType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReductionArgAccess().getReturnTypeBasicTypeEnumRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReductionArg__ReturnTypeAssignment_6"


    // $ANTLR start "rule__Or__OpAssignment_1_1"
    // InternalNabla.g:9806:1: rule__Or__OpAssignment_1_1 : ( ( '||' ) ) ;
    public final void rule__Or__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9810:1: ( ( ( '||' ) ) )
            // InternalNabla.g:9811:2: ( ( '||' ) )
            {
            // InternalNabla.g:9811:2: ( ( '||' ) )
            // InternalNabla.g:9812:3: ( '||' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); 
            }
            // InternalNabla.g:9813:3: ( '||' )
            // InternalNabla.g:9814:4: '||'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); 
            }
            match(input,61,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__OpAssignment_1_1"


    // $ANTLR start "rule__Or__RightAssignment_1_2"
    // InternalNabla.g:9825:1: rule__Or__RightAssignment_1_2 : ( ruleAnd ) ;
    public final void rule__Or__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9829:1: ( ( ruleAnd ) )
            // InternalNabla.g:9830:2: ( ruleAnd )
            {
            // InternalNabla.g:9830:2: ( ruleAnd )
            // InternalNabla.g:9831:3: ruleAnd
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnd();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__RightAssignment_1_2"


    // $ANTLR start "rule__And__OpAssignment_1_1"
    // InternalNabla.g:9840:1: rule__And__OpAssignment_1_1 : ( ( '&&' ) ) ;
    public final void rule__And__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9844:1: ( ( ( '&&' ) ) )
            // InternalNabla.g:9845:2: ( ( '&&' ) )
            {
            // InternalNabla.g:9845:2: ( ( '&&' ) )
            // InternalNabla.g:9846:3: ( '&&' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getOpAmpersandAmpersandKeyword_1_1_0()); 
            }
            // InternalNabla.g:9847:3: ( '&&' )
            // InternalNabla.g:9848:4: '&&'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getOpAmpersandAmpersandKeyword_1_1_0()); 
            }
            match(input,62,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getOpAmpersandAmpersandKeyword_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getOpAmpersandAmpersandKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__OpAssignment_1_1"


    // $ANTLR start "rule__And__RightAssignment_1_2"
    // InternalNabla.g:9859:1: rule__And__RightAssignment_1_2 : ( ruleEquality ) ;
    public final void rule__And__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9863:1: ( ( ruleEquality ) )
            // InternalNabla.g:9864:2: ( ruleEquality )
            {
            // InternalNabla.g:9864:2: ( ruleEquality )
            // InternalNabla.g:9865:3: ruleEquality
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getRightEqualityParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEquality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getRightEqualityParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__RightAssignment_1_2"


    // $ANTLR start "rule__Equality__OpAssignment_1_1"
    // InternalNabla.g:9874:1: rule__Equality__OpAssignment_1_1 : ( ( rule__Equality__OpAlternatives_1_1_0 ) ) ;
    public final void rule__Equality__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9878:1: ( ( ( rule__Equality__OpAlternatives_1_1_0 ) ) )
            // InternalNabla.g:9879:2: ( ( rule__Equality__OpAlternatives_1_1_0 ) )
            {
            // InternalNabla.g:9879:2: ( ( rule__Equality__OpAlternatives_1_1_0 ) )
            // InternalNabla.g:9880:3: ( rule__Equality__OpAlternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAccess().getOpAlternatives_1_1_0()); 
            }
            // InternalNabla.g:9881:3: ( rule__Equality__OpAlternatives_1_1_0 )
            // InternalNabla.g:9881:4: rule__Equality__OpAlternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Equality__OpAlternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAccess().getOpAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__OpAssignment_1_1"


    // $ANTLR start "rule__Equality__RightAssignment_1_2"
    // InternalNabla.g:9889:1: rule__Equality__RightAssignment_1_2 : ( ruleComparison ) ;
    public final void rule__Equality__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9893:1: ( ( ruleComparison ) )
            // InternalNabla.g:9894:2: ( ruleComparison )
            {
            // InternalNabla.g:9894:2: ( ruleComparison )
            // InternalNabla.g:9895:3: ruleComparison
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__RightAssignment_1_2"


    // $ANTLR start "rule__Comparison__OpAssignment_1_1"
    // InternalNabla.g:9904:1: rule__Comparison__OpAssignment_1_1 : ( ( rule__Comparison__OpAlternatives_1_1_0 ) ) ;
    public final void rule__Comparison__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9908:1: ( ( ( rule__Comparison__OpAlternatives_1_1_0 ) ) )
            // InternalNabla.g:9909:2: ( ( rule__Comparison__OpAlternatives_1_1_0 ) )
            {
            // InternalNabla.g:9909:2: ( ( rule__Comparison__OpAlternatives_1_1_0 ) )
            // InternalNabla.g:9910:3: ( rule__Comparison__OpAlternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); 
            }
            // InternalNabla.g:9911:3: ( rule__Comparison__OpAlternatives_1_1_0 )
            // InternalNabla.g:9911:4: rule__Comparison__OpAlternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__OpAlternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__OpAssignment_1_1"


    // $ANTLR start "rule__Comparison__RightAssignment_1_2"
    // InternalNabla.g:9919:1: rule__Comparison__RightAssignment_1_2 : ( rulePlusOrMinus ) ;
    public final void rule__Comparison__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9923:1: ( ( rulePlusOrMinus ) )
            // InternalNabla.g:9924:2: ( rulePlusOrMinus )
            {
            // InternalNabla.g:9924:2: ( rulePlusOrMinus )
            // InternalNabla.g:9925:3: rulePlusOrMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePlusOrMinus();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__RightAssignment_1_2"


    // $ANTLR start "rule__PlusOrMinus__OpAssignment_1_0_0_1"
    // InternalNabla.g:9934:1: rule__PlusOrMinus__OpAssignment_1_0_0_1 : ( ( '+' ) ) ;
    public final void rule__PlusOrMinus__OpAssignment_1_0_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9938:1: ( ( ( '+' ) ) )
            // InternalNabla.g:9939:2: ( ( '+' ) )
            {
            // InternalNabla.g:9939:2: ( ( '+' ) )
            // InternalNabla.g:9940:3: ( '+' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getOpPlusSignKeyword_1_0_0_1_0()); 
            }
            // InternalNabla.g:9941:3: ( '+' )
            // InternalNabla.g:9942:4: '+'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getOpPlusSignKeyword_1_0_0_1_0()); 
            }
            match(input,63,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getOpPlusSignKeyword_1_0_0_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getOpPlusSignKeyword_1_0_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__OpAssignment_1_0_0_1"


    // $ANTLR start "rule__PlusOrMinus__OpAssignment_1_0_1_1"
    // InternalNabla.g:9953:1: rule__PlusOrMinus__OpAssignment_1_0_1_1 : ( ( '-' ) ) ;
    public final void rule__PlusOrMinus__OpAssignment_1_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9957:1: ( ( ( '-' ) ) )
            // InternalNabla.g:9958:2: ( ( '-' ) )
            {
            // InternalNabla.g:9958:2: ( ( '-' ) )
            // InternalNabla.g:9959:3: ( '-' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getOpHyphenMinusKeyword_1_0_1_1_0()); 
            }
            // InternalNabla.g:9960:3: ( '-' )
            // InternalNabla.g:9961:4: '-'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getOpHyphenMinusKeyword_1_0_1_1_0()); 
            }
            match(input,51,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getOpHyphenMinusKeyword_1_0_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getOpHyphenMinusKeyword_1_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__OpAssignment_1_0_1_1"


    // $ANTLR start "rule__PlusOrMinus__RightAssignment_1_1"
    // InternalNabla.g:9972:1: rule__PlusOrMinus__RightAssignment_1_1 : ( ruleMulOrDiv ) ;
    public final void rule__PlusOrMinus__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9976:1: ( ( ruleMulOrDiv ) )
            // InternalNabla.g:9977:2: ( ruleMulOrDiv )
            {
            // InternalNabla.g:9977:2: ( ruleMulOrDiv )
            // InternalNabla.g:9978:3: ruleMulOrDiv
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getRightMulOrDivParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMulOrDiv();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getRightMulOrDivParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__RightAssignment_1_1"


    // $ANTLR start "rule__MulOrDiv__OpAssignment_1_1"
    // InternalNabla.g:9987:1: rule__MulOrDiv__OpAssignment_1_1 : ( ( rule__MulOrDiv__OpAlternatives_1_1_0 ) ) ;
    public final void rule__MulOrDiv__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:9991:1: ( ( ( rule__MulOrDiv__OpAlternatives_1_1_0 ) ) )
            // InternalNabla.g:9992:2: ( ( rule__MulOrDiv__OpAlternatives_1_1_0 ) )
            {
            // InternalNabla.g:9992:2: ( ( rule__MulOrDiv__OpAlternatives_1_1_0 ) )
            // InternalNabla.g:9993:3: ( rule__MulOrDiv__OpAlternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivAccess().getOpAlternatives_1_1_0()); 
            }
            // InternalNabla.g:9994:3: ( rule__MulOrDiv__OpAlternatives_1_1_0 )
            // InternalNabla.g:9994:4: rule__MulOrDiv__OpAlternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__OpAlternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivAccess().getOpAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__OpAssignment_1_1"


    // $ANTLR start "rule__MulOrDiv__RightAssignment_1_2"
    // InternalNabla.g:10002:1: rule__MulOrDiv__RightAssignment_1_2 : ( rulePrimary ) ;
    public final void rule__MulOrDiv__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10006:1: ( ( rulePrimary ) )
            // InternalNabla.g:10007:2: ( rulePrimary )
            {
            // InternalNabla.g:10007:2: ( rulePrimary )
            // InternalNabla.g:10008:3: rulePrimary
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivAccess().getRightPrimaryParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePrimary();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivAccess().getRightPrimaryParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__RightAssignment_1_2"


    // $ANTLR start "rule__Primary__ExpressionAssignment_0_2"
    // InternalNabla.g:10017:1: rule__Primary__ExpressionAssignment_0_2 : ( ruleExpression ) ;
    public final void rule__Primary__ExpressionAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10021:1: ( ( ruleExpression ) )
            // InternalNabla.g:10022:2: ( ruleExpression )
            {
            // InternalNabla.g:10022:2: ( ruleExpression )
            // InternalNabla.g:10023:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getExpressionExpressionParserRuleCall_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getExpressionExpressionParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__ExpressionAssignment_0_2"


    // $ANTLR start "rule__Primary__ExpressionAssignment_1_2"
    // InternalNabla.g:10032:1: rule__Primary__ExpressionAssignment_1_2 : ( rulePrimary ) ;
    public final void rule__Primary__ExpressionAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10036:1: ( ( rulePrimary ) )
            // InternalNabla.g:10037:2: ( rulePrimary )
            {
            // InternalNabla.g:10037:2: ( rulePrimary )
            // InternalNabla.g:10038:3: rulePrimary
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePrimary();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__ExpressionAssignment_1_2"


    // $ANTLR start "rule__Primary__ExpressionAssignment_2_2"
    // InternalNabla.g:10047:1: rule__Primary__ExpressionAssignment_2_2 : ( rulePrimary ) ;
    public final void rule__Primary__ExpressionAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10051:1: ( ( rulePrimary ) )
            // InternalNabla.g:10052:2: ( rulePrimary )
            {
            // InternalNabla.g:10052:2: ( rulePrimary )
            // InternalNabla.g:10053:3: rulePrimary
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_2_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePrimary();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__ExpressionAssignment_2_2"


    // $ANTLR start "rule__Atomic__ValueAssignment_0_1"
    // InternalNabla.g:10062:1: rule__Atomic__ValueAssignment_0_1 : ( RULE_INT ) ;
    public final void rule__Atomic__ValueAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10066:1: ( ( RULE_INT ) )
            // InternalNabla.g:10067:2: ( RULE_INT )
            {
            // InternalNabla.g:10067:2: ( RULE_INT )
            // InternalNabla.g:10068:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__ValueAssignment_0_1"


    // $ANTLR start "rule__Atomic__ValueAssignment_1_1"
    // InternalNabla.g:10077:1: rule__Atomic__ValueAssignment_1_1 : ( RULE_REAL ) ;
    public final void rule__Atomic__ValueAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10081:1: ( ( RULE_REAL ) )
            // InternalNabla.g:10082:2: ( RULE_REAL )
            {
            // InternalNabla.g:10082:2: ( RULE_REAL )
            // InternalNabla.g:10083:3: RULE_REAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getValueREALTerminalRuleCall_1_1_0()); 
            }
            match(input,RULE_REAL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getValueREALTerminalRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__ValueAssignment_1_1"


    // $ANTLR start "rule__Atomic__ValueAssignment_4_1_0"
    // InternalNabla.g:10092:1: rule__Atomic__ValueAssignment_4_1_0 : ( ( 'true' ) ) ;
    public final void rule__Atomic__ValueAssignment_4_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10096:1: ( ( ( 'true' ) ) )
            // InternalNabla.g:10097:2: ( ( 'true' ) )
            {
            // InternalNabla.g:10097:2: ( ( 'true' ) )
            // InternalNabla.g:10098:3: ( 'true' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getValueTrueKeyword_4_1_0_0()); 
            }
            // InternalNabla.g:10099:3: ( 'true' )
            // InternalNabla.g:10100:4: 'true'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getValueTrueKeyword_4_1_0_0()); 
            }
            match(input,64,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getValueTrueKeyword_4_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getValueTrueKeyword_4_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__ValueAssignment_4_1_0"


    // $ANTLR start "rule__Atomic__XAssignment_5_2"
    // InternalNabla.g:10111:1: rule__Atomic__XAssignment_5_2 : ( ruleReal2Constant ) ;
    public final void rule__Atomic__XAssignment_5_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10115:1: ( ( ruleReal2Constant ) )
            // InternalNabla.g:10116:2: ( ruleReal2Constant )
            {
            // InternalNabla.g:10116:2: ( ruleReal2Constant )
            // InternalNabla.g:10117:3: ruleReal2Constant
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getXReal2ConstantParserRuleCall_5_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleReal2Constant();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getXReal2ConstantParserRuleCall_5_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__XAssignment_5_2"


    // $ANTLR start "rule__Atomic__YAssignment_5_4"
    // InternalNabla.g:10126:1: rule__Atomic__YAssignment_5_4 : ( ruleReal2Constant ) ;
    public final void rule__Atomic__YAssignment_5_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10130:1: ( ( ruleReal2Constant ) )
            // InternalNabla.g:10131:2: ( ruleReal2Constant )
            {
            // InternalNabla.g:10131:2: ( ruleReal2Constant )
            // InternalNabla.g:10132:3: ruleReal2Constant
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getYReal2ConstantParserRuleCall_5_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleReal2Constant();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getYReal2ConstantParserRuleCall_5_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__YAssignment_5_4"


    // $ANTLR start "rule__Atomic__XAssignment_6_2"
    // InternalNabla.g:10141:1: rule__Atomic__XAssignment_6_2 : ( ruleReal3Constant ) ;
    public final void rule__Atomic__XAssignment_6_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10145:1: ( ( ruleReal3Constant ) )
            // InternalNabla.g:10146:2: ( ruleReal3Constant )
            {
            // InternalNabla.g:10146:2: ( ruleReal3Constant )
            // InternalNabla.g:10147:3: ruleReal3Constant
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getXReal3ConstantParserRuleCall_6_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleReal3Constant();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getXReal3ConstantParserRuleCall_6_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__XAssignment_6_2"


    // $ANTLR start "rule__Atomic__YAssignment_6_4"
    // InternalNabla.g:10156:1: rule__Atomic__YAssignment_6_4 : ( ruleReal3Constant ) ;
    public final void rule__Atomic__YAssignment_6_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10160:1: ( ( ruleReal3Constant ) )
            // InternalNabla.g:10161:2: ( ruleReal3Constant )
            {
            // InternalNabla.g:10161:2: ( ruleReal3Constant )
            // InternalNabla.g:10162:3: ruleReal3Constant
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getYReal3ConstantParserRuleCall_6_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleReal3Constant();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getYReal3ConstantParserRuleCall_6_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__YAssignment_6_4"


    // $ANTLR start "rule__Atomic__ZAssignment_6_6"
    // InternalNabla.g:10171:1: rule__Atomic__ZAssignment_6_6 : ( ruleReal3Constant ) ;
    public final void rule__Atomic__ZAssignment_6_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10175:1: ( ( ruleReal3Constant ) )
            // InternalNabla.g:10176:2: ( ruleReal3Constant )
            {
            // InternalNabla.g:10176:2: ( ruleReal3Constant )
            // InternalNabla.g:10177:3: ruleReal3Constant
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getZReal3ConstantParserRuleCall_6_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleReal3Constant();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getZReal3ConstantParserRuleCall_6_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__ZAssignment_6_6"


    // $ANTLR start "rule__Atomic__TypeAssignment_7_1"
    // InternalNabla.g:10186:1: rule__Atomic__TypeAssignment_7_1 : ( ruleBasicType ) ;
    public final void rule__Atomic__TypeAssignment_7_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10190:1: ( ( ruleBasicType ) )
            // InternalNabla.g:10191:2: ( ruleBasicType )
            {
            // InternalNabla.g:10191:2: ( ruleBasicType )
            // InternalNabla.g:10192:3: ruleBasicType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getTypeBasicTypeEnumRuleCall_7_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBasicType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getTypeBasicTypeEnumRuleCall_7_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__TypeAssignment_7_1"


    // $ANTLR start "rule__Atomic__ValueAssignment_7_3"
    // InternalNabla.g:10201:1: rule__Atomic__ValueAssignment_7_3 : ( RULE_REAL ) ;
    public final void rule__Atomic__ValueAssignment_7_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10205:1: ( ( RULE_REAL ) )
            // InternalNabla.g:10206:2: ( RULE_REAL )
            {
            // InternalNabla.g:10206:2: ( RULE_REAL )
            // InternalNabla.g:10207:3: RULE_REAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getValueREALTerminalRuleCall_7_3_0()); 
            }
            match(input,RULE_REAL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getValueREALTerminalRuleCall_7_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__ValueAssignment_7_3"


    // $ANTLR start "rule__Atomic__TypeAssignment_8_1"
    // InternalNabla.g:10216:1: rule__Atomic__TypeAssignment_8_1 : ( ruleBasicType ) ;
    public final void rule__Atomic__TypeAssignment_8_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10220:1: ( ( ruleBasicType ) )
            // InternalNabla.g:10221:2: ( ruleBasicType )
            {
            // InternalNabla.g:10221:2: ( ruleBasicType )
            // InternalNabla.g:10222:3: ruleBasicType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getTypeBasicTypeEnumRuleCall_8_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBasicType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getTypeBasicTypeEnumRuleCall_8_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__TypeAssignment_8_1"


    // $ANTLR start "rule__Atomic__TypeAssignment_9_1"
    // InternalNabla.g:10231:1: rule__Atomic__TypeAssignment_9_1 : ( ruleBasicType ) ;
    public final void rule__Atomic__TypeAssignment_9_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10235:1: ( ( ruleBasicType ) )
            // InternalNabla.g:10236:2: ( ruleBasicType )
            {
            // InternalNabla.g:10236:2: ( ruleBasicType )
            // InternalNabla.g:10237:3: ruleBasicType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getTypeBasicTypeEnumRuleCall_9_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBasicType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getTypeBasicTypeEnumRuleCall_9_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__TypeAssignment_9_1"


    // $ANTLR start "rule__Atomic__FunctionAssignment_10_1"
    // InternalNabla.g:10246:1: rule__Atomic__FunctionAssignment_10_1 : ( ( ruleQualifiedName ) ) ;
    public final void rule__Atomic__FunctionAssignment_10_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10250:1: ( ( ( ruleQualifiedName ) ) )
            // InternalNabla.g:10251:2: ( ( ruleQualifiedName ) )
            {
            // InternalNabla.g:10251:2: ( ( ruleQualifiedName ) )
            // InternalNabla.g:10252:3: ( ruleQualifiedName )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getFunctionFunctionCrossReference_10_1_0()); 
            }
            // InternalNabla.g:10253:3: ( ruleQualifiedName )
            // InternalNabla.g:10254:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getFunctionFunctionQualifiedNameParserRuleCall_10_1_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getFunctionFunctionQualifiedNameParserRuleCall_10_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getFunctionFunctionCrossReference_10_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__FunctionAssignment_10_1"


    // $ANTLR start "rule__Atomic__ArgsAssignment_10_3_0"
    // InternalNabla.g:10265:1: rule__Atomic__ArgsAssignment_10_3_0 : ( ruleExpression ) ;
    public final void rule__Atomic__ArgsAssignment_10_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10269:1: ( ( ruleExpression ) )
            // InternalNabla.g:10270:2: ( ruleExpression )
            {
            // InternalNabla.g:10270:2: ( ruleExpression )
            // InternalNabla.g:10271:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getArgsExpressionParserRuleCall_10_3_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getArgsExpressionParserRuleCall_10_3_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__ArgsAssignment_10_3_0"


    // $ANTLR start "rule__Atomic__ArgsAssignment_10_3_1_1"
    // InternalNabla.g:10280:1: rule__Atomic__ArgsAssignment_10_3_1_1 : ( ruleExpression ) ;
    public final void rule__Atomic__ArgsAssignment_10_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10284:1: ( ( ruleExpression ) )
            // InternalNabla.g:10285:2: ( ruleExpression )
            {
            // InternalNabla.g:10285:2: ( ruleExpression )
            // InternalNabla.g:10286:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getArgsExpressionParserRuleCall_10_3_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getArgsExpressionParserRuleCall_10_3_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__ArgsAssignment_10_3_1_1"


    // $ANTLR start "rule__Atomic__ReductionAssignment_11_1"
    // InternalNabla.g:10295:1: rule__Atomic__ReductionAssignment_11_1 : ( ( ruleQualifiedName ) ) ;
    public final void rule__Atomic__ReductionAssignment_11_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10299:1: ( ( ( ruleQualifiedName ) ) )
            // InternalNabla.g:10300:2: ( ( ruleQualifiedName ) )
            {
            // InternalNabla.g:10300:2: ( ( ruleQualifiedName ) )
            // InternalNabla.g:10301:3: ( ruleQualifiedName )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getReductionReductionCrossReference_11_1_0()); 
            }
            // InternalNabla.g:10302:3: ( ruleQualifiedName )
            // InternalNabla.g:10303:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getReductionReductionQualifiedNameParserRuleCall_11_1_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getReductionReductionQualifiedNameParserRuleCall_11_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getReductionReductionCrossReference_11_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__ReductionAssignment_11_1"


    // $ANTLR start "rule__Atomic__IteratorAssignment_11_3"
    // InternalNabla.g:10314:1: rule__Atomic__IteratorAssignment_11_3 : ( ruleSpaceIterator ) ;
    public final void rule__Atomic__IteratorAssignment_11_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10318:1: ( ( ruleSpaceIterator ) )
            // InternalNabla.g:10319:2: ( ruleSpaceIterator )
            {
            // InternalNabla.g:10319:2: ( ruleSpaceIterator )
            // InternalNabla.g:10320:3: ruleSpaceIterator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getIteratorSpaceIteratorParserRuleCall_11_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSpaceIterator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getIteratorSpaceIteratorParserRuleCall_11_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__IteratorAssignment_11_3"


    // $ANTLR start "rule__Atomic__ArgAssignment_11_6"
    // InternalNabla.g:10329:1: rule__Atomic__ArgAssignment_11_6 : ( ruleExpression ) ;
    public final void rule__Atomic__ArgAssignment_11_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10333:1: ( ( ruleExpression ) )
            // InternalNabla.g:10334:2: ( ruleExpression )
            {
            // InternalNabla.g:10334:2: ( ruleExpression )
            // InternalNabla.g:10335:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getArgExpressionParserRuleCall_11_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getArgExpressionParserRuleCall_11_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__ArgAssignment_11_6"


    // $ANTLR start "rule__Real2Constant__XAssignment_1"
    // InternalNabla.g:10344:1: rule__Real2Constant__XAssignment_1 : ( RULE_REAL ) ;
    public final void rule__Real2Constant__XAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10348:1: ( ( RULE_REAL ) )
            // InternalNabla.g:10349:2: ( RULE_REAL )
            {
            // InternalNabla.g:10349:2: ( RULE_REAL )
            // InternalNabla.g:10350:3: RULE_REAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal2ConstantAccess().getXREALTerminalRuleCall_1_0()); 
            }
            match(input,RULE_REAL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal2ConstantAccess().getXREALTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real2Constant__XAssignment_1"


    // $ANTLR start "rule__Real2Constant__YAssignment_3"
    // InternalNabla.g:10359:1: rule__Real2Constant__YAssignment_3 : ( RULE_REAL ) ;
    public final void rule__Real2Constant__YAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10363:1: ( ( RULE_REAL ) )
            // InternalNabla.g:10364:2: ( RULE_REAL )
            {
            // InternalNabla.g:10364:2: ( RULE_REAL )
            // InternalNabla.g:10365:3: RULE_REAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal2ConstantAccess().getYREALTerminalRuleCall_3_0()); 
            }
            match(input,RULE_REAL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal2ConstantAccess().getYREALTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real2Constant__YAssignment_3"


    // $ANTLR start "rule__Real3Constant__XAssignment_1"
    // InternalNabla.g:10374:1: rule__Real3Constant__XAssignment_1 : ( RULE_REAL ) ;
    public final void rule__Real3Constant__XAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10378:1: ( ( RULE_REAL ) )
            // InternalNabla.g:10379:2: ( RULE_REAL )
            {
            // InternalNabla.g:10379:2: ( RULE_REAL )
            // InternalNabla.g:10380:3: RULE_REAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal3ConstantAccess().getXREALTerminalRuleCall_1_0()); 
            }
            match(input,RULE_REAL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal3ConstantAccess().getXREALTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__XAssignment_1"


    // $ANTLR start "rule__Real3Constant__YAssignment_3"
    // InternalNabla.g:10389:1: rule__Real3Constant__YAssignment_3 : ( RULE_REAL ) ;
    public final void rule__Real3Constant__YAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10393:1: ( ( RULE_REAL ) )
            // InternalNabla.g:10394:2: ( RULE_REAL )
            {
            // InternalNabla.g:10394:2: ( RULE_REAL )
            // InternalNabla.g:10395:3: RULE_REAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal3ConstantAccess().getYREALTerminalRuleCall_3_0()); 
            }
            match(input,RULE_REAL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal3ConstantAccess().getYREALTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__YAssignment_3"


    // $ANTLR start "rule__Real3Constant__ZAssignment_5"
    // InternalNabla.g:10404:1: rule__Real3Constant__ZAssignment_5 : ( RULE_REAL ) ;
    public final void rule__Real3Constant__ZAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10408:1: ( ( RULE_REAL ) )
            // InternalNabla.g:10409:2: ( RULE_REAL )
            {
            // InternalNabla.g:10409:2: ( RULE_REAL )
            // InternalNabla.g:10410:3: RULE_REAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReal3ConstantAccess().getZREALTerminalRuleCall_5_0()); 
            }
            match(input,RULE_REAL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReal3ConstantAccess().getZREALTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Real3Constant__ZAssignment_5"


    // $ANTLR start "rule__VarRef__VariableAssignment_0"
    // InternalNabla.g:10419:1: rule__VarRef__VariableAssignment_0 : ( ( RULE_ID ) ) ;
    public final void rule__VarRef__VariableAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10423:1: ( ( ( RULE_ID ) ) )
            // InternalNabla.g:10424:2: ( ( RULE_ID ) )
            {
            // InternalNabla.g:10424:2: ( ( RULE_ID ) )
            // InternalNabla.g:10425:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getVariableVarCrossReference_0_0()); 
            }
            // InternalNabla.g:10426:3: ( RULE_ID )
            // InternalNabla.g:10427:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getVariableVarIDTerminalRuleCall_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getVariableVarIDTerminalRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getVariableVarCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__VariableAssignment_0"


    // $ANTLR start "rule__VarRef__SpaceIteratorsAssignment_1_1"
    // InternalNabla.g:10438:1: rule__VarRef__SpaceIteratorsAssignment_1_1 : ( ruleIteratorRangeOrRef ) ;
    public final void rule__VarRef__SpaceIteratorsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10442:1: ( ( ruleIteratorRangeOrRef ) )
            // InternalNabla.g:10443:2: ( ruleIteratorRangeOrRef )
            {
            // InternalNabla.g:10443:2: ( ruleIteratorRangeOrRef )
            // InternalNabla.g:10444:3: ruleIteratorRangeOrRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getSpaceIteratorsIteratorRangeOrRefParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleIteratorRangeOrRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getSpaceIteratorsIteratorRangeOrRefParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__SpaceIteratorsAssignment_1_1"


    // $ANTLR start "rule__VarRef__SpaceIteratorsAssignment_1_2_1"
    // InternalNabla.g:10453:1: rule__VarRef__SpaceIteratorsAssignment_1_2_1 : ( ruleIteratorRangeOrRef ) ;
    public final void rule__VarRef__SpaceIteratorsAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10457:1: ( ( ruleIteratorRangeOrRef ) )
            // InternalNabla.g:10458:2: ( ruleIteratorRangeOrRef )
            {
            // InternalNabla.g:10458:2: ( ruleIteratorRangeOrRef )
            // InternalNabla.g:10459:3: ruleIteratorRangeOrRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getSpaceIteratorsIteratorRangeOrRefParserRuleCall_1_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleIteratorRangeOrRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getSpaceIteratorsIteratorRangeOrRefParserRuleCall_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__SpaceIteratorsAssignment_1_2_1"


    // $ANTLR start "rule__VarRef__TimeIteratorAssignment_2_1"
    // InternalNabla.g:10468:1: rule__VarRef__TimeIteratorAssignment_2_1 : ( ruleTimeIteratorRef ) ;
    public final void rule__VarRef__TimeIteratorAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10472:1: ( ( ruleTimeIteratorRef ) )
            // InternalNabla.g:10473:2: ( ruleTimeIteratorRef )
            {
            // InternalNabla.g:10473:2: ( ruleTimeIteratorRef )
            // InternalNabla.g:10474:3: ruleTimeIteratorRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getTimeIteratorTimeIteratorRefParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTimeIteratorRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getTimeIteratorTimeIteratorRefParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__TimeIteratorAssignment_2_1"


    // $ANTLR start "rule__VarRef__FieldsAssignment_3_1"
    // InternalNabla.g:10483:1: rule__VarRef__FieldsAssignment_3_1 : ( RULE_ID ) ;
    public final void rule__VarRef__FieldsAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10487:1: ( ( RULE_ID ) )
            // InternalNabla.g:10488:2: ( RULE_ID )
            {
            // InternalNabla.g:10488:2: ( RULE_ID )
            // InternalNabla.g:10489:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarRefAccess().getFieldsIDTerminalRuleCall_3_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarRefAccess().getFieldsIDTerminalRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarRef__FieldsAssignment_3_1"


    // $ANTLR start "rule__TimeIteratorRef__IteratorAssignment_0"
    // InternalNabla.g:10498:1: rule__TimeIteratorRef__IteratorAssignment_0 : ( ( RULE_ID ) ) ;
    public final void rule__TimeIteratorRef__IteratorAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10502:1: ( ( ( RULE_ID ) ) )
            // InternalNabla.g:10503:2: ( ( RULE_ID ) )
            {
            // InternalNabla.g:10503:2: ( ( RULE_ID ) )
            // InternalNabla.g:10504:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorRefAccess().getIteratorTimeIteratorCrossReference_0_0()); 
            }
            // InternalNabla.g:10505:3: ( RULE_ID )
            // InternalNabla.g:10506:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorRefAccess().getIteratorTimeIteratorIDTerminalRuleCall_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorRefAccess().getIteratorTimeIteratorIDTerminalRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorRefAccess().getIteratorTimeIteratorCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIteratorRef__IteratorAssignment_0"


    // $ANTLR start "rule__TimeIteratorRef__InitAssignment_1_0_0"
    // InternalNabla.g:10517:1: rule__TimeIteratorRef__InitAssignment_1_0_0 : ( ( '=' ) ) ;
    public final void rule__TimeIteratorRef__InitAssignment_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10521:1: ( ( ( '=' ) ) )
            // InternalNabla.g:10522:2: ( ( '=' ) )
            {
            // InternalNabla.g:10522:2: ( ( '=' ) )
            // InternalNabla.g:10523:3: ( '=' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorRefAccess().getInitEqualsSignKeyword_1_0_0_0()); 
            }
            // InternalNabla.g:10524:3: ( '=' )
            // InternalNabla.g:10525:4: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorRefAccess().getInitEqualsSignKeyword_1_0_0_0()); 
            }
            match(input,42,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorRefAccess().getInitEqualsSignKeyword_1_0_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorRefAccess().getInitEqualsSignKeyword_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIteratorRef__InitAssignment_1_0_0"


    // $ANTLR start "rule__TimeIteratorRef__NextAssignment_1_0_1"
    // InternalNabla.g:10536:1: rule__TimeIteratorRef__NextAssignment_1_0_1 : ( ( '+' ) ) ;
    public final void rule__TimeIteratorRef__NextAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10540:1: ( ( ( '+' ) ) )
            // InternalNabla.g:10541:2: ( ( '+' ) )
            {
            // InternalNabla.g:10541:2: ( ( '+' ) )
            // InternalNabla.g:10542:3: ( '+' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorRefAccess().getNextPlusSignKeyword_1_0_1_0()); 
            }
            // InternalNabla.g:10543:3: ( '+' )
            // InternalNabla.g:10544:4: '+'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorRefAccess().getNextPlusSignKeyword_1_0_1_0()); 
            }
            match(input,63,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorRefAccess().getNextPlusSignKeyword_1_0_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorRefAccess().getNextPlusSignKeyword_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIteratorRef__NextAssignment_1_0_1"


    // $ANTLR start "rule__TimeIteratorRef__ValueAssignment_1_1"
    // InternalNabla.g:10555:1: rule__TimeIteratorRef__ValueAssignment_1_1 : ( RULE_INT ) ;
    public final void rule__TimeIteratorRef__ValueAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalNabla.g:10559:1: ( ( RULE_INT ) )
            // InternalNabla.g:10560:2: ( RULE_INT )
            {
            // InternalNabla.g:10560:2: ( RULE_INT )
            // InternalNabla.g:10561:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeIteratorRefAccess().getValueINTTerminalRuleCall_1_1_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeIteratorRefAccess().getValueINTTerminalRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeIteratorRef__ValueAssignment_1_1"

    // $ANTLR start synpred55_InternalNabla
    public final void synpred55_InternalNabla_fragment() throws RecognitionException {   
        // InternalNabla.g:3053:3: ( rule__Instruction__Group_5_6__0 )
        // InternalNabla.g:3053:3: rule__Instruction__Group_5_6__0
        {
        pushFollow(FOLLOW_2);
        rule__Instruction__Group_5_6__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred55_InternalNabla

    // Delegated rules

    public final boolean synpred55_InternalNabla() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_InternalNabla_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA3 dfa3 = new DFA3(this);
    protected DFA5 dfa5 = new DFA5(this);
    protected DFA17 dfa17 = new DFA17(this);
    static final String dfa_1s = "\13\uffff";
    static final String dfa_2s = "\1\26\1\uffff\7\4\1\41\1\uffff";
    static final String dfa_3s = "\1\74\1\uffff\7\4\1\60\1\uffff";
    static final String dfa_4s = "\1\uffff\1\1\10\uffff\1\2";
    static final String dfa_5s = "\13\uffff}>";
    static final String[] dfa_6s = {
            "\1\2\1\3\1\4\1\5\1\6\1\7\1\10\37\uffff\1\1",
            "",
            "\1\11",
            "\1\11",
            "\1\11",
            "\1\11",
            "\1\11",
            "\1\11",
            "\1\11",
            "\1\12\7\uffff\1\12\1\1\5\uffff\1\12",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "985:1: rule__NablaModule__VariablesAlternatives_5_0 : ( ( ruleScalarVarDefinition ) | ( ruleVarGroupDeclaration ) );";
        }
    }
    static final String dfa_7s = "\15\uffff";
    static final String dfa_8s = "\1\4\1\47\1\54\1\4\7\51\2\uffff";
    static final String dfa_9s = "\1\4\1\47\1\54\1\100\7\66\2\uffff";
    static final String dfa_10s = "\13\uffff\1\1\1\2";
    static final String dfa_11s = "\15\uffff}>";
    static final String[] dfa_12s = {
            "\1\1",
            "\1\2",
            "\1\3",
            "\3\14\5\uffff\1\13\10\uffff\1\14\1\4\1\5\1\6\1\7\1\10\1\11\1\12\7\uffff\1\14\7\uffff\1\14\6\uffff\2\14\13\uffff\1\14",
            "\1\13\2\uffff\1\14\1\13\7\uffff\2\14",
            "\1\13\2\uffff\1\14\1\13\7\uffff\2\14",
            "\1\13\2\uffff\1\14\1\13\7\uffff\2\14",
            "\1\13\2\uffff\1\14\1\13\7\uffff\2\14",
            "\1\13\2\uffff\1\14\1\13\7\uffff\2\14",
            "\1\13\2\uffff\1\14\1\13\7\uffff\2\14",
            "\1\13\2\uffff\1\14\1\13\7\uffff\2\14",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA3 extends DFA {

        public DFA3(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 3;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "1027:1: rule__DeclarationBlock__FunctionsAlternatives_1_3_0 : ( ( ruleFunction ) | ( ruleReduction ) );";
        }
    }
    static final String dfa_13s = "\17\uffff";
    static final String dfa_14s = "\1\4\1\uffff\7\4\4\uffff\1\41\1\uffff";
    static final String dfa_15s = "\1\74\1\uffff\7\4\4\uffff\1\60\1\uffff";
    static final String dfa_16s = "\1\uffff\1\1\7\uffff\1\3\1\4\1\5\1\6\1\uffff\1\2";
    static final String dfa_17s = "\17\uffff}>";
    static final String[] dfa_18s = {
            "\1\12\21\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\7\uffff\1\11\3\uffff\1\13\2\uffff\1\14\20\uffff\1\1",
            "",
            "\1\15",
            "\1\15",
            "\1\15",
            "\1\15",
            "\1\15",
            "\1\15",
            "\1\15",
            "",
            "",
            "",
            "",
            "\1\16\7\uffff\1\16\1\1\5\uffff\1\16",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA5 extends DFA {

        public DFA5(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 5;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "1069:1: rule__Instruction__Alternatives : ( ( ruleScalarVarDefinition ) | ( ruleVarGroupDeclaration ) | ( ( rule__Instruction__Group_2__0 ) ) | ( ( rule__Instruction__Group_3__0 ) ) | ( ( rule__Instruction__Group_4__0 ) ) | ( ( rule__Instruction__Group_5__0 ) ) );";
        }
    }
    static final String dfa_19s = "\42\uffff";
    static final String dfa_20s = "\14\uffff\1\24\13\uffff\1\24\11\uffff";
    static final String dfa_21s = "\1\4\2\uffff\1\6\1\uffff\7\54\1\15\1\51\1\6\3\uffff\2\4\2\uffff\1\6\1\51\1\15\2\45\1\6\3\uffff\1\45\2\uffff";
    static final String dfa_22s = "\1\100\2\uffff\1\44\1\uffff\7\66\1\77\1\51\1\6\3\uffff\1\4\1\73\2\uffff\1\6\1\51\1\77\1\57\1\51\1\6\3\uffff\1\51\2\uffff";
    static final String dfa_23s = "\1\uffff\1\1\1\2\1\uffff\1\5\12\uffff\1\11\1\12\1\10\2\uffff\1\15\1\13\6\uffff\1\14\1\3\1\4\1\uffff\1\7\1\6";
    static final String dfa_24s = "\42\uffff}>";
    static final String[] dfa_25s = {
            "\1\14\1\1\1\2\16\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\7\uffff\1\3\33\uffff\1\4",
            "",
            "",
            "\1\15\35\uffff\1\16",
            "",
            "\1\21\10\uffff\1\17\1\20",
            "\1\21\10\uffff\1\17\1\20",
            "\1\21\10\uffff\1\17\1\20",
            "\1\21\10\uffff\1\17\1\20",
            "\1\21\10\uffff\1\17\1\20",
            "\1\21\10\uffff\1\17\1\20",
            "\1\21\10\uffff\1\17\1\20",
            "\10\24\14\uffff\1\24\2\uffff\1\23\4\uffff\1\24\2\uffff\1\25\1\24\5\uffff\1\24\3\uffff\1\24\1\22\4\uffff\3\24",
            "\1\26",
            "\1\27",
            "",
            "",
            "",
            "\1\30",
            "\1\31\65\uffff\2\24",
            "",
            "",
            "\1\32",
            "\1\33",
            "\10\24\14\uffff\1\24\2\uffff\1\34\4\uffff\1\24\2\uffff\1\25\1\24\5\uffff\1\24\4\uffff\1\22\4\uffff\3\24",
            "\1\24\3\uffff\1\24\2\uffff\1\24\2\uffff\1\34",
            "\1\35\3\uffff\1\36",
            "\1\37",
            "",
            "",
            "",
            "\1\41\3\uffff\1\40",
            "",
            ""
    };

    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA17 extends DFA {

        public DFA17(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 17;
            this.eot = dfa_19;
            this.eof = dfa_20;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "1369:1: rule__Atomic__Alternatives : ( ( ( rule__Atomic__Group_0__0 ) ) | ( ( rule__Atomic__Group_1__0 ) ) | ( ruleReal2Constant ) | ( ruleReal3Constant ) | ( ( rule__Atomic__Group_4__0 ) ) | ( ( rule__Atomic__Group_5__0 ) ) | ( ( rule__Atomic__Group_6__0 ) ) | ( ( rule__Atomic__Group_7__0 ) ) | ( ( rule__Atomic__Group_8__0 ) ) | ( ( rule__Atomic__Group_9__0 ) ) | ( ( rule__Atomic__Group_10__0 ) ) | ( ( rule__Atomic__Group_11__0 ) ) | ( ruleVarRef ) );";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x1000004C1FC00010L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000004800000002L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x100000001FC00002L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000002000000010L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000004800000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x100009101FC00010L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x100009101FC00012L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x101810101FE00070L,0x0000000000000001L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0C00200000000010L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0C00000000000010L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x100000001FC00000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000020200000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0002020000000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x00000000E0001000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x00000010E0000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x00000000E0000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x100000001FC01000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x2000000000000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x2000000000000002L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x4000000000000002L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000006000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000006002L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000078000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000078002L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x8008000000000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x8008000000000002L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000180000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000180002L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000200000L,0x0000000000000001L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x101830101FE00070L,0x0000000000000001L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0180001000000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0100000000000002L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000022000000000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x8000040000000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0200000000000000L});

}