/*
 * generated by Xtext 2.19.0
 */
grammar InternalKaulua;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fr.inria.diverse.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.inria.diverse.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.inria.diverse.services.KauluaGrammarAccess;

}
@parser::members {
	private KauluaGrammarAccess grammarAccess;

	public void setGrammarAccess(KauluaGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProtocol
entryRuleProtocol
:
{ before(grammarAccess.getProtocolRule()); }
	 ruleProtocol
{ after(grammarAccess.getProtocolRule()); } 
	 EOF 
;

// Rule Protocol
ruleProtocol 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProtocolAccess().getGroup()); }
		(rule__Protocol__Group__0)
		{ after(grammarAccess.getProtocolAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeature
entryRuleFeature
:
{ before(grammarAccess.getFeatureRule()); }
	 ruleFeature
{ after(grammarAccess.getFeatureRule()); } 
	 EOF 
;

// Rule Feature
ruleFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureAccess().getGroup()); }
		(rule__Feature__Group__0)
		{ after(grammarAccess.getFeatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCapability
entryRuleCapability
:
{ before(grammarAccess.getCapabilityRule()); }
	 ruleCapability
{ after(grammarAccess.getCapabilityRule()); } 
	 EOF 
;

// Rule Capability
ruleCapability 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCapabilityAccess().getGroup()); }
		(rule__Capability__Group__0)
		{ after(grammarAccess.getCapabilityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDependency
entryRuleDependency
:
{ before(grammarAccess.getDependencyRule()); }
	 ruleDependency
{ after(grammarAccess.getDependencyRule()); } 
	 EOF 
;

// Rule Dependency
ruleDependency 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDependencyAccess().getGroup()); }
		(rule__Dependency__Group__0)
		{ after(grammarAccess.getDependencyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Protocol__Group__0__Impl
	rule__Protocol__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProtocolAccess().getProtocolKeyword_0()); }
	'Protocol'
	{ after(grammarAccess.getProtocolAccess().getProtocolKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Protocol__Group__1__Impl
	rule__Protocol__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProtocolAccess().getNameAssignment_1()); }
	(rule__Protocol__NameAssignment_1)
	{ after(grammarAccess.getProtocolAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Protocol__Group__2__Impl
	rule__Protocol__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProtocolAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getProtocolAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Protocol__Group__3__Impl
	rule__Protocol__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getProtocolAccess().getFeaturesAssignment_3()); }
		(rule__Protocol__FeaturesAssignment_3)
		{ after(grammarAccess.getProtocolAccess().getFeaturesAssignment_3()); }
	)
	(
		{ before(grammarAccess.getProtocolAccess().getFeaturesAssignment_3()); }
		(rule__Protocol__FeaturesAssignment_3)*
		{ after(grammarAccess.getProtocolAccess().getFeaturesAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Protocol__Group__4__Impl
	rule__Protocol__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProtocolAccess().getDependenciesKeyword_4()); }
	'dependencies'
	{ after(grammarAccess.getProtocolAccess().getDependenciesKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Protocol__Group__5__Impl
	rule__Protocol__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProtocolAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getProtocolAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Protocol__Group__6__Impl
	rule__Protocol__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProtocolAccess().getDependenciesAssignment_6()); }
	(rule__Protocol__DependenciesAssignment_6)*
	{ after(grammarAccess.getProtocolAccess().getDependenciesAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Protocol__Group__7__Impl
	rule__Protocol__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProtocolAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getProtocolAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Protocol__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProtocolAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getProtocolAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__0__Impl
	rule__Feature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getIsMandatoryAssignment_0()); }
	(rule__Feature__IsMandatoryAssignment_0)?
	{ after(grammarAccess.getFeatureAccess().getIsMandatoryAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__1__Impl
	rule__Feature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getFeatureKeyword_1()); }
	'feature'
	{ after(grammarAccess.getFeatureAccess().getFeatureKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__2__Impl
	rule__Feature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getNameAssignment_2()); }
	(rule__Feature__NameAssignment_2)
	{ after(grammarAccess.getFeatureAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__3__Impl
	rule__Feature__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getFeatureAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__4__Impl
	rule__Feature__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getGroup_4()); }
	(rule__Feature__Group_4__0)?
	{ after(grammarAccess.getFeatureAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__5__Impl
	rule__Feature__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getGroup_5()); }
	(rule__Feature__Group_5__0)?
	{ after(grammarAccess.getFeatureAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getFeatureAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group_4__0__Impl
	rule__Feature__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getCapabilitiesKeyword_4_0()); }
	'capabilities'
	{ after(grammarAccess.getFeatureAccess().getCapabilitiesKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group_4__1__Impl
	rule__Feature__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getColonKeyword_4_1()); }
	':'
	{ after(grammarAccess.getFeatureAccess().getColonKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getFeatureAccess().getCapabilitiesAssignment_4_2()); }
		(rule__Feature__CapabilitiesAssignment_4_2)
		{ after(grammarAccess.getFeatureAccess().getCapabilitiesAssignment_4_2()); }
	)
	(
		{ before(grammarAccess.getFeatureAccess().getCapabilitiesAssignment_4_2()); }
		(rule__Feature__CapabilitiesAssignment_4_2)*
		{ after(grammarAccess.getFeatureAccess().getCapabilitiesAssignment_4_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group_5__0__Impl
	rule__Feature__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getAlternativeOfKeyword_5_0()); }
	'alternativeOf'
	{ after(grammarAccess.getFeatureAccess().getAlternativeOfKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group_5__1__Impl
	rule__Feature__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getColonKeyword_5_1()); }
	':'
	{ after(grammarAccess.getFeatureAccess().getColonKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getAlternativeGroupAssignment_5_2()); }
	(rule__Feature__AlternativeGroupAssignment_5_2)
	{ after(grammarAccess.getFeatureAccess().getAlternativeGroupAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Capability__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Capability__Group__0__Impl
	rule__Capability__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Capability__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCapabilityAccess().getNameAssignment_0()); }
	(rule__Capability__NameAssignment_0)
	{ after(grammarAccess.getCapabilityAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Capability__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Capability__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Capability__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCapabilityAccess().getGroup_1()); }
	(rule__Capability__Group_1__0)?
	{ after(grammarAccess.getCapabilityAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Capability__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Capability__Group_1__0__Impl
	rule__Capability__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Capability__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCapabilityAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getCapabilityAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Capability__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Capability__Group_1__1__Impl
	rule__Capability__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Capability__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCapabilityAccess().getDefinitionFileAssignment_1_1()); }
	(rule__Capability__DefinitionFileAssignment_1_1)
	{ after(grammarAccess.getCapabilityAccess().getDefinitionFileAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Capability__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Capability__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Capability__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCapabilityAccess().getRightSquareBracketKeyword_1_2()); }
	']'
	{ after(grammarAccess.getCapabilityAccess().getRightSquareBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dependency__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group__0__Impl
	rule__Dependency__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getCallerAssignment_0()); }
	(rule__Dependency__CallerAssignment_0)
	{ after(grammarAccess.getDependencyAccess().getCallerAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group__1__Impl
	rule__Dependency__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
	'->'
	{ after(grammarAccess.getDependencyAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getCalleeAssignment_2()); }
	(rule__Dependency__CalleeAssignment_2)
	{ after(grammarAccess.getDependencyAccess().getCalleeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Protocol__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProtocolAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getProtocolAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__FeaturesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProtocolAccess().getFeaturesFeatureParserRuleCall_3_0()); }
		ruleFeature
		{ after(grammarAccess.getProtocolAccess().getFeaturesFeatureParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__DependenciesAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProtocolAccess().getDependenciesDependencyParserRuleCall_6_0()); }
		ruleDependency
		{ after(grammarAccess.getProtocolAccess().getDependenciesDependencyParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__IsMandatoryAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getIsMandatoryMandatoryKeyword_0_0()); }
		(
			{ before(grammarAccess.getFeatureAccess().getIsMandatoryMandatoryKeyword_0_0()); }
			'mandatory'
			{ after(grammarAccess.getFeatureAccess().getIsMandatoryMandatoryKeyword_0_0()); }
		)
		{ after(grammarAccess.getFeatureAccess().getIsMandatoryMandatoryKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getFeatureAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__CapabilitiesAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getCapabilitiesCapabilityParserRuleCall_4_2_0()); }
		ruleCapability
		{ after(grammarAccess.getFeatureAccess().getCapabilitiesCapabilityParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__AlternativeGroupAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getAlternativeGroupSTRINGTerminalRuleCall_5_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getFeatureAccess().getAlternativeGroupSTRINGTerminalRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Capability__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCapabilityAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getCapabilityAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Capability__DefinitionFileAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCapabilityAccess().getDefinitionFileSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getCapabilityAccess().getDefinitionFileSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__CallerAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDependencyAccess().getCallerCapabilityCrossReference_0_0()); }
		(
			{ before(grammarAccess.getDependencyAccess().getCallerCapabilityQUALIFIERTerminalRuleCall_0_0_1()); }
			RULE_QUALIFIER
			{ after(grammarAccess.getDependencyAccess().getCallerCapabilityQUALIFIERTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getDependencyAccess().getCallerCapabilityCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__CalleeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDependencyAccess().getCalleeCapabilityCrossReference_2_0()); }
		(
			{ before(grammarAccess.getDependencyAccess().getCalleeCapabilityQUALIFIERTerminalRuleCall_2_0_1()); }
			RULE_QUALIFIER
			{ after(grammarAccess.getDependencyAccess().getCalleeCapabilityQUALIFIERTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getDependencyAccess().getCalleeCapabilityCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_QUALIFIER : RULE_ID ('.' RULE_ID)+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
